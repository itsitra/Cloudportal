{"version":3,"sources":["./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/containers/default-layout/default-layout.component.html","./src/app/views/analysis-requests/analysis-requests.component.html","./src/app/views/analysisrequests/analysisrequests.component.html","./src/app/views/camera/camera.component.html","./src/app/views/contactus/contactus.component.html","./src/app/views/customer_freq_tests/add-freq-tests/add-freq-tests.component.html","./src/app/views/customer_freq_tests/freq-tests-list/freq-tests-list.component.html","./src/app/views/dashboard/testingcertificates.component.html","./src/app/views/error/404.component.html","./src/app/views/error/500.component.html","./src/app/views/error/comingsoon.component.html","./src/app/views/fileupload/fileupload.component.html","./src/app/views/inwards/inwards.component.html","./src/app/views/inwards/inwardview.component.html","./src/app/views/inwards/inwardviewinwarddetails.component.html","./src/app/views/inwards/inwardviewsampletests.component.html","./src/app/views/login/login.component.html","./src/app/views/mypayments/mypayments.component.html","./src/app/views/package-test/package-test.component.html","./src/app/views/parentcomp/child1.component.html","./src/app/views/parentcomp/parentcomp.component.html","./src/app/views/paymentresponse/paymentresponse.component.html","./src/app/views/profile/profile.component.html","./src/app/views/proforma/proforma-list/proforma-list.component.html","./src/app/views/publications/publications.component.html","./src/app/views/publications/publicationsfocuslist.component.html","./src/app/views/publications/publicationslist.component.html","./src/app/views/register/register.component.html","./src/app/views/reports/reports.component.html","./src/app/views/requestanalysis/addupdaterequestanalysis.component.html","./src/app/views/requestanalysis/requestanalysis.component.html","./src/app/views/requestanalysis/requestanalysisaddupdate.component.html","./src/app/views/testrate/phytestrate.component.html","./src/app/views/testrate/testingcharge.component.html","./src/app/views/testrate/testrate.component.html","./src/app/views/ukg/ukg.component.html","./src/app/views/ukgmill/ukgmill.component.html","./src/app/views/ukgpayment/ukgpayment.component.html","./src/app/views/viewinward/inwarddetails.component.html","./src/app/views/viewinward/sampletests.component.html","./src/app/views/viewinward/viewinward.component.html","./src/app/views/webinar/webinar.component.html","./src/$_lazy_route_resource lazy namespace object","./src/app/_nav.ts","./src/app/_services/customer.service.ts","./src/app/_services/dashboard.service.ts","./src/app/_services/email.service.ts","./src/app/_services/freqent-test.service.ts","./src/app/_services/genral-payment.service.ts","./src/app/_services/package-test.service.ts","./src/app/_services/proforma.service.ts","./src/app/_services/publication.service.ts","./src/app/_services/sms.service.ts","./src/app/_services/webinar.service.ts","./src/app/aesencrypt-decrypt-service.service.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/containers/default-layout/default-layout.component.ts","./src/app/containers/default-layout/index.ts","./src/app/containers/index.ts","./src/app/serverdata.service.ts","./src/app/views/analysis-requests/analysis-requests.component.css","./src/app/views/analysis-requests/analysis-requests.component.ts","./src/app/views/analysisrequests/analysisrequests.component.css","./src/app/views/analysisrequests/analysisrequests.component.ts","./src/app/views/camera/camera.component.css","./src/app/views/camera/camera.component.ts","./src/app/views/contactus/contactus.component.css","./src/app/views/contactus/contactus.component.ts","./src/app/views/customer_freq_tests/add-freq-tests/add-freq-tests.component.css","./src/app/views/customer_freq_tests/add-freq-tests/add-freq-tests.component.ts","./src/app/views/customer_freq_tests/freq-tests-list/freq-tests-list.component.css","./src/app/views/customer_freq_tests/freq-tests-list/freq-tests-list.component.ts","./src/app/views/dashboard/testingcertificates.component.ts","./src/app/views/error/404.component.ts","./src/app/views/error/500.component.ts","./src/app/views/error/comingsoon.component.ts","./src/app/views/fileupload/fileupload.component.css","./src/app/views/fileupload/fileupload.component.ts","./src/app/views/inwards/inwards.component.css","./src/app/views/inwards/inwards.component.ts","./src/app/views/inwards/inwardview.component.css","./src/app/views/inwards/inwardview.component.ts","./src/app/views/inwards/inwardviewinwarddetails.component.ts","./src/app/views/inwards/inwardviewsampletests.component.ts","./src/app/views/login/login.component.css","./src/app/views/login/login.component.ts","./src/app/views/mypayments/mypayments.component.css","./src/app/views/mypayments/mypayments.component.ts","./src/app/views/package-test/package-test.component.css","./src/app/views/package-test/package-test.component.ts","./src/app/views/parentcomp/child1.component.ts","./src/app/views/parentcomp/parentcomp.component.css","./src/app/views/parentcomp/parentcomp.component.ts","./src/app/views/paymentresponse/paymentresponse.component.css","./src/app/views/paymentresponse/paymentresponse.component.ts","./src/app/views/profile/profile.component.css","./src/app/views/profile/profile.component.ts","./src/app/views/proforma/proforma-list/proforma-list.component.css","./src/app/views/proforma/proforma-list/proforma-list.component.ts","./src/app/views/publications/publications.component.css","./src/app/views/publications/publications.component.ts","./src/app/views/publications/publicationsfocuslist.component.ts","./src/app/views/publications/publicationslist.component.ts","./src/app/views/register/register.component.ts","./src/app/views/reports/reports.component.css","./src/app/views/reports/reports.component.ts","./src/app/views/requestanalysis/addupdaterequestanalysis.component.ts","./src/app/views/requestanalysis/requestanalysis.component.css","./src/app/views/requestanalysis/requestanalysis.component.ts","./src/app/views/requestanalysis/requestanalysisaddupdate.component.ts","./src/app/views/testrate/phytestrate.component.ts","./src/app/views/testrate/testingcharge.component.ts","./src/app/views/testrate/testrate.component.css","./src/app/views/testrate/testrate.component.ts","./src/app/views/ukg/ukg.component.css","./src/app/views/ukg/ukg.component.ts","./src/app/views/ukgmill/ukgmill.component.css","./src/app/views/ukgmill/ukgmill.component.ts","./src/app/views/ukgpayment/ukgpayment.component.css","./src/app/views/ukgpayment/ukgpayment.component.ts","./src/app/views/viewinward/inwarddetails.component.ts","./src/app/views/viewinward/sampletests.component.ts","./src/app/views/viewinward/viewinward.component.css","./src/app/views/viewinward/viewinward.component.ts","./src/app/views/webinar/webinar.component.css","./src/app/views/webinar/webinar.component.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts","crypto (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<!--<div class=\\\"spinner\\\"></div>-->\\n<style>\\n  .sidebar .nav-link .nav-icon {\\n    color: #f1f4f7 !important;\\n  }\\n  .sidebar .nav-title {\\n    font-size: 0;\\n  }\\n</style>\\n<app-header\\n  [navbarBrandRouterLink]=\\\"['/dashboard']\\\"\\n  [fixed]=\\\"true\\\"\\n  [navbarBrandFull]=\\\"{\\n    src: 'assets/img/brand/sitralogo.jpg',\\n    width: 50,\\n    height: 50,\\n    alt: 'SITRA'\\n  }\\\"\\n  [navbarBrandMinimized]=\\\"{\\n    src: 'assets/img/brand/sygnet.svg',\\n    width: 30,\\n    height: 30,\\n    alt: 'SITRA'\\n  }\\\"\\n  [sidebarToggler]=\\\"'lg'\\\"\\n  [asideMenuToggler]=\\\"'lg'\\\"\\n>\\n  <div style=\\\"width: 50%; border: 0px solid red; text-align: center\\\">\\n    <img style=\\\"width: 100%\\\" src=\\\"assets/img/others/title.jpg\\\" />\\n    <!--<span style=\\\"font-size:2em;font-weight: bold;color:#5D2F19\\\">SITRA Online Services</span>-->\\n  </div>\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\n    Welcome, &nbsp;<span style=\\\"font-weight: bold\\\"> {{ customername }}</span>\\n    <!--<li class=\\\"nav-item px-3\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Dashboard</a>\\n    </li>-->\\n    <!--<li class=\\\"nav-item px-3\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Users</a>\\n    </li>\\n    <li class=\\\"nav-item px-3\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\">Settings</a>\\n    </li>-->\\n  </ul>\\n  <!--<span>Idle Timer : {{ idletimerCount }}</span>-->\\n  <ul class=\\\"nav navbar-nav ml-3\\\">\\n    <!--<li class=\\\"nav-item d-md-down-none\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\"><i class=\\\"icon-bell\\\"></i><span class=\\\"badge badge-pill badge-danger\\\">5</span></a>\\n    </li>-->\\n\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\n      <a\\n        class=\\\"nav-link\\\"\\n        data-toggle=\\\"dropdown\\\"\\n        href=\\\"#\\\"\\n        role=\\\"button\\\"\\n        aria-haspopup=\\\"true\\\"\\n        aria-expanded=\\\"false\\\"\\n        dropdownToggle\\n        (click)=\\\"(false)\\\"\\n      >\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\"\\n          ><i class=\\\"fa fa-cog\\\" style=\\\"font-size: large\\\" aria-hidden=\\\"true\\\"></i\\n        ></a>\\n      </a>\\n      <div\\n        class=\\\"dropdown-menu dropdown-menu-right\\\"\\n        *dropdownMenu\\n        aria-labelledby=\\\"simple-dropdown\\\"\\n      >\\n        <!--<div class=\\\"dropdown-header text-center\\\"><strong>Account</strong></div>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-bell-o\\\"></i> Updates<span class=\\\"badge badge-info\\\">42</span></a>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-envelope-o\\\"></i> Messages<span class=\\\"badge badge-success\\\">42</span></a>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-tasks\\\"></i> Tasks<span class=\\\"badge badge-danger\\\">42</span></a>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-comments\\\"></i> Comment<span class=\\\"badge badge-warning\\\">42</span></a>\\n        -->\\n        <div class=\\\"dropdown-header text-center\\\"><strong>Settings</strong></div>\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/profile']\\\"\\n          ><i class=\\\"fa fa-user\\\"></i> Profile Setting</a\\n        >\\n        <!--<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['#']\\\"><i class=\\\"fa fa-wrench\\\"></i> Setting</a>-->\\n        <!--<a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-usd\\\"></i> Payments<span class=\\\"badge badge-dark\\\">42</span></a>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-file\\\"></i> Projects<span class=\\\"badge badge-primary\\\">42</span></a>\\n        <div class=\\\"divider\\\"></div>\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\"><i class=\\\"fa fa-shield\\\"></i> Lock account</a>\\n        -->\\n        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"doLogout()\\\"\\n          ><i class=\\\"fa fa-lock\\\"></i> Logout</a\\n        >\\n      </div>\\n    </li>\\n  </ul>\\n</app-header>\\n<div class=\\\"app-body\\\">\\n  <app-sidebar\\n    style=\\\"background-color: #127b6e; color: white\\\"\\n    #appSidebar\\n    [fixed]=\\\"true\\\"\\n    [display]=\\\"'lg'\\\"\\n    [minimized]=\\\"sidebarMinimized\\\"\\n    (minimizedChange)=\\\"toggleMinimize($event)\\\"\\n  >\\n    <app-sidebar-nav\\n      [navItems]=\\\"navItems\\\"\\n      [perfectScrollbar]\\n      [disabled]=\\\"appSidebar.minimized\\\"\\n    ></app-sidebar-nav>\\n    <!--<app-sidebar-minimizer></app-sidebar-minimizer>-->\\n  </app-sidebar>\\n  <!-- Main content -->\\n  <main class=\\\"main\\\">\\n    <div\\n      *ngIf=\\\"glbLoaderFlag === true\\\"\\n      class=\\\"loader\\\"\\n      style=\\\"width: 100%\\\"\\n    ></div>\\n    <!-- Breadcrumb -->\\n    <!-- breaking change 'cui-breadcrumb' -->\\n    <cui-breadcrumb></cui-breadcrumb>\\n    <!--Breadcrumb Menu-->\\n\\n    <!-- deprecation warning for 'app-breadcrumb' -->\\n    <!--<ol class=\\\"breadcrumb\\\">-->\\n    <!--<app-breadcrumb></app-breadcrumb>-->\\n    <!--&lt;!&ndash; Breadcrumb Menu&ndash;&gt;-->\\n    <!--<li class=\\\"breadcrumb-menu d-md-down-none\\\">-->\\n    <!--<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-speech\\\"></i></a>-->\\n    <!--<a class=\\\"btn\\\" [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"icon-graph\\\"></i> &nbsp;Dashboard</a>-->\\n    <!--<a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-settings\\\"></i> &nbsp;Settings</a>-->\\n    <!--</div>-->\\n    <!--</li>-->\\n    <!--</ol>-->\\n    <div class=\\\"container-fluid\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n    <!-- /.container-fluid -->\\n  </main>\\n  <app-aside [fixed]=\\\"true\\\" [display]=\\\"false\\\" [ngClass]=\\\"'test'\\\">\\n    <span>SITRA ADVERTISMENTs</span>\\n    <!-- <tabset>\\n      <tab>\\n        <ng-template tabHeading><i class=\\\"icon-list\\\"></i></ng-template>\\n        <div class=\\\"list-group list-group-accent\\\">\\n          <div class=\\\"list-group-item list-group-item-accent-secondary bg-light text-center font-weight-bold text-muted text-uppercase small\\\">Today</div>\\n          <div class=\\\"list-group-item list-group-item-accent-warning list-group-item-divider\\\">\\n            <div class=\\\"avatar float-right\\\">\\n              <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/7.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n            </div>\\n            <div>Meeting with\\n              <strong>Lucas</strong>\\n            </div>\\n            <small class=\\\"text-muted mr-3\\\">\\n              <i class=\\\"icon-calendar\\\"></i>  1 - 3pm</small>\\n            <small class=\\\"text-muted\\\">\\n              <i class=\\\"icon-location-pin\\\"></i>  Palo Alto, CA</small>\\n          </div>\\n          <div class=\\\"list-group-item list-group-item-accent-info\\\">\\n            <div class=\\\"avatar float-right\\\">\\n              <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/4.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n            </div>\\n            <div>Skype with\\n              <strong>Megan</strong>\\n            </div>\\n            <small class=\\\"text-muted mr-3\\\">\\n              <i class=\\\"icon-calendar\\\"></i>  4 - 5pm</small>\\n            <small class=\\\"text-muted\\\">\\n              <i class=\\\"icon-social-skype\\\"></i>  On-line</small>\\n          </div>\\n          <div class=\\\"list-group-item list-group-item-accent-secondary bg-light text-center font-weight-bold text-muted text-uppercase small\\\">Tomorrow</div>\\n          <div class=\\\"list-group-item list-group-item-accent-danger list-group-item-divider\\\">\\n            <div>New UI Project -\\n              <strong>deadline</strong>\\n            </div>\\n            <small class=\\\"text-muted mr-3\\\">\\n              <i class=\\\"icon-calendar\\\"></i>  10 - 11pm</small>\\n            <small class=\\\"text-muted\\\">\\n              <i class=\\\"icon-home\\\"></i>  creativeLabs HQ</small>\\n            <div class=\\\"avatars-stack mt-2\\\">\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/2.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/3.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/4.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/5.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/6.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"list-group-item list-group-item-accent-success list-group-item-divider\\\">\\n            <div>\\n              <strong>#10 Startups.Garden</strong> Meetup</div>\\n            <small class=\\\"text-muted mr-3\\\">\\n              <i class=\\\"icon-calendar\\\"></i>  1 - 3pm</small>\\n            <small class=\\\"text-muted\\\">\\n              <i class=\\\"icon-location-pin\\\"></i>  Palo Alto, CA</small>\\n          </div>\\n          <div class=\\\"list-group-item list-group-item-accent-primary list-group-item-divider\\\">\\n            <div>\\n              <strong>Team meeting</strong>\\n            </div>\\n            <small class=\\\"text-muted mr-3\\\">\\n              <i class=\\\"icon-calendar\\\"></i>  4 - 6pm</small>\\n            <small class=\\\"text-muted\\\">\\n              <i class=\\\"icon-home\\\"></i>  creativeLabs HQ</small>\\n            <div class=\\\"avatars-stack mt-2\\\">\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/2.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/3.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/4.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/5.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/6.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/7.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n              <div class=\\\"avatar avatar-xs\\\">\\n                <img class=\\\"img-avatar\\\" src=\\\"assets/img/avatars/8.jpg\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab>\\n        <ng-template tabHeading><i class=\\\"icon-speech\\\"></i></ng-template>\\n        <div class=\\\"p-3\\\">\\n          <div class=\\\"message\\\">\\n            <div class=\\\"py-3 pb-5 mr-3 float-left\\\">\\n              <div class=\\\"avatar\\\">\\n                <img src=\\\"assets/img/avatars/7.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n                <span class=\\\"avatar-status badge-success\\\"></span>\\n              </div>\\n            </div>\\n            <div>\\n              <small class=\\\"text-muted\\\">Lukasz Holeczek</small>\\n              <small class=\\\"text-muted float-right mt-1\\\">1:52 PM</small>\\n            </div>\\n            <div class=\\\"text-truncate font-weight-bold\\\">Lorem ipsum dolor sit amet</div>\\n            <small class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...</small>\\n          </div>\\n          <hr>\\n          <div class=\\\"message\\\">\\n            <div class=\\\"py-3 pb-5 mr-3 float-left\\\">\\n              <div class=\\\"avatar\\\">\\n                <img src=\\\"assets/img/avatars/7.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n                <span class=\\\"avatar-status badge-success\\\"></span>\\n              </div>\\n            </div>\\n            <div>\\n              <small class=\\\"text-muted\\\">Lukasz Holeczek</small>\\n              <small class=\\\"text-muted float-right mt-1\\\">1:52 PM</small>\\n            </div>\\n            <div class=\\\"text-truncate font-weight-bold\\\">Lorem ipsum dolor sit amet</div>\\n            <small class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...</small>\\n          </div>\\n          <hr>\\n          <div class=\\\"message\\\">\\n            <div class=\\\"py-3 pb-5 mr-3 float-left\\\">\\n              <div class=\\\"avatar\\\">\\n                <img src=\\\"assets/img/avatars/7.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n                <span class=\\\"avatar-status badge-success\\\"></span>\\n              </div>\\n            </div>\\n            <div>\\n              <small class=\\\"text-muted\\\">Lukasz Holeczek</small>\\n              <small class=\\\"text-muted float-right mt-1\\\">1:52 PM</small>\\n            </div>\\n            <div class=\\\"text-truncate font-weight-bold\\\">Lorem ipsum dolor sit amet</div>\\n            <small class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...</small>\\n          </div>\\n          <hr>\\n          <div class=\\\"message\\\">\\n            <div class=\\\"py-3 pb-5 mr-3 float-left\\\">\\n              <div class=\\\"avatar\\\">\\n                <img src=\\\"assets/img/avatars/7.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n                <span class=\\\"avatar-status badge-success\\\"></span>\\n              </div>\\n            </div>\\n            <div>\\n              <small class=\\\"text-muted\\\">Lukasz Holeczek</small>\\n              <small class=\\\"text-muted float-right mt-1\\\">1:52 PM</small>\\n            </div>\\n            <div class=\\\"text-truncate font-weight-bold\\\">Lorem ipsum dolor sit amet</div>\\n            <small class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...</small>\\n          </div>\\n          <hr>\\n          <div class=\\\"message\\\">\\n            <div class=\\\"py-3 pb-5 mr-3 float-left\\\">\\n              <div class=\\\"avatar\\\">\\n                <img src=\\\"assets/img/avatars/7.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\">\\n                <span class=\\\"avatar-status badge-success\\\"></span>\\n              </div>\\n            </div>\\n            <div>\\n              <small class=\\\"text-muted\\\">Lukasz Holeczek</small>\\n              <small class=\\\"text-muted float-right mt-1\\\">1:52 PM</small>\\n            </div>\\n            <div class=\\\"text-truncate font-weight-bold\\\">Lorem ipsum dolor sit amet</div>\\n            <small class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt...</small>\\n          </div>\\n        </div>\\n      </tab>\\n      <tab>\\n        <ng-template tabHeading><i class=\\\"icon-settings\\\"></i></ng-template>\\n        <div class=\\\"p-3\\\">\\n          <h6>Settings</h6>\\n          <div class=\\\"aside-options\\\">\\n            <div class=\\\"clearfix mt-4\\\">\\n              <small><b>Option 1</b></small>\\n              <label class=\\\"switch switch-label switch-pill switch-success switch-sm float-right\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\n                <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\n              </label>\\n            </div>\\n            <div>\\n              <small class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</small>\\n            </div>\\n          </div>\\n          <div class=\\\"aside-options\\\">\\n            <div class=\\\"clearfix mt-3\\\">\\n              <small><b>Option 2</b></small>\\n              <label class=\\\"switch switch-label switch-pill switch-success switch-sm float-right\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"switch-input\\\">\\n                <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\n              </label>\\n            </div>\\n            <div>\\n              <small class=\\\"text-muted\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</small>\\n            </div>\\n          </div>\\n          <div class=\\\"aside-options\\\">\\n            <div class=\\\"clearfix mt-3\\\">\\n              <small><b>Option 3</b></small>\\n              <label class=\\\"switch switch-label switch-pill switch-success switch-sm float-right\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"switch-input\\\">\\n                <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\n                <span class=\\\"switch-handle\\\"></span>\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"aside-options\\\">\\n            <div class=\\\"clearfix mt-3\\\">\\n              <small><b>Option 4</b></small>\\n              <label class=\\\"switch switch-label switch-pill switch-success switch-sm float-right\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"switch-input\\\" checked>\\n                <span class=\\\"switch-slider\\\" data-checked=\\\"On\\\" data-unchecked=\\\"Off\\\"></span>\\n              </label>\\n            </div>\\n          </div>\\n          <hr>\\n          <h6>System Utilization</h6>\\n          <div class=\\\"text-uppercase mb-1 mt-4\\\"><small><b>CPU Usage</b></small></div>\\n          <div class=\\\"progress progress-xs\\\">\\n            <div class=\\\"progress-bar bg-info\\\" role=\\\"progressbar\\\" style=\\\"width: 25%\\\" aria-valuenow=\\\"25\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n          </div>\\n          <small class=\\\"text-muted\\\">348 Processes. 1/4 Cores.</small>\\n          <div class=\\\"text-uppercase mb-1 mt-2\\\"><small><b>Memory Usage</b></small></div>\\n          <div class=\\\"progress progress-xs\\\">\\n            <div class=\\\"progress-bar bg-warning\\\" role=\\\"progressbar\\\" style=\\\"width: 70%\\\" aria-valuenow=\\\"70\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n          </div>\\n          <small class=\\\"text-muted\\\">11444GB/16384MB</small>\\n          <div class=\\\"text-uppercase mb-1 mt-2\\\"><small><b>SSD 1 Usage</b></small></div>\\n          <div class=\\\"progress progress-xs\\\">\\n            <div class=\\\"progress-bar bg-danger\\\" role=\\\"progressbar\\\" style=\\\"width: 95%\\\" aria-valuenow=\\\"95\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n          </div>\\n          <small class=\\\"text-muted\\\">243GB/256GB</small>\\n          <div class=\\\"text-uppercase mb-1 mt-2\\\"><small><b>SSD 2 Usage</b></small></div>\\n          <div class=\\\"progress progress-xs\\\">\\n            <div class=\\\"progress-bar bg-success\\\" role=\\\"progressbar\\\" style=\\\"width: 10%\\\" aria-valuenow=\\\"10\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"></div>\\n          </div>\\n          <small class=\\\"text-muted\\\">25GB/256GB</small>\\n        </div>\\n      </tab>\\n      <tab>\\n        <ng-template tabHeading><i class=\\\"icon-cursor\\\"></i></ng-template>\\n        <span>Logout</span>\\n      </tab>    \\n    </tabset> -->\\n  </app-aside>\\n</div>\\n<app-footer>\\n  <span><a href=\\\"https://sitra.org.in\\\">SITRA</a> &copy; 2020</span>\\n  <span class=\\\"ml-auto\\\"\\n    >Powered by <a href=\\\"https://sitra.org.in\\\">SITRA</a></span\\n  >\\n</app-footer>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Analysis Request Lists\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th style=\\\"width: 15%\\\">Req. No</th>\\n                <th style=\\\"width: 20%\\\">Req. Date</th>\\n                <th style=\\\"width: 20%\\\">Type</th>\\n                <th style=\\\"width: 15%\\\">No.of Samples</th>\\n                <th style=\\\"width: 25%\\\">Status</th>\\n                <th style=\\\"width: 5%\\\" colspan=\\\"3\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>R2000001</td>\\n                <td>24-08-20201</td>\\n                <td>Fabric</td>\\n                <td>5</td>\\n                <td>Sample Not Received</td>\\n                <td>\\n                  <!--<img src=\\\"../../../assets/img/others/edit.png\\\" />-->\\n                  <i class=\\\"icon-book-open\\\"></i>\\n                </td>\\n                <td><i class=\\\"icon-doc\\\"></i> </td>\\n                <td><i class=\\\"icon-trash\\\"></i></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <ul class=\\\"pagination\\\" style=\\\"float: right\\\">\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n            <li class=\\\"page-item active\\\">\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n            </li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col \\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <i class=\\\"fa fa-align-justify\\\"></i> Striped Table\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <thead>\\n                <tr>\\n                  <th>Username</th>\\n                  <th>Date registered</th>\\n                  <th>Role</th>\\n                  <th>Status</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>Yiorgos Avraamu</td>\\n                  <td>2012/01/01</td>\\n                  <td>Member</td>\\n                  <td>\\n                    <span class=\\\"badge badge-success\\\">Active</span>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Avram Tarasios</td>\\n                  <td>2012/02/01</td>\\n                  <td>Staff</td>\\n                  <td>\\n                    <span class=\\\"badge badge-danger\\\">Banned</span>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Quintin Ed</td>\\n                  <td>2012/02/01</td>\\n                  <td>Admin</td>\\n                  <td>\\n                    <span class=\\\"badge badge-secondary\\\">Inactive</span>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Enéas Kwadwo</td>\\n                  <td>2012/03/01</td>\\n                  <td>Member</td>\\n                  <td>\\n                    <span class=\\\"badge badge-warning\\\">Pending</span>\\n                  </td>\\n                </tr>\\n                <tr>\\n                  <td>Agapetus Tadeáš</td>\\n                  <td>2012/01/21</td>\\n                  <td>Staff</td>\\n                  <td>\\n                    <span class=\\\"badge badge-success\\\">Active</span>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n            <ul class=\\\"pagination\\\">\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n              <li class=\\\"page-item active\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n              </li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n      /.col-->\\n  </div>\\n  <!--/.row-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Condensed Table\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-sm\\\">\\n            <thead>\\n              <tr>\\n                <th>Username</th>\\n                <th>Date registered</th>\\n                <th>Role</th>\\n                <th>Status</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>Carwyn Fachtna</td>\\n                <td>2012/01/01</td>\\n                <td>Member</td>\\n                <td>\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Nehemiah Tatius</td>\\n                <td>2012/02/01</td>\\n                <td>Staff</td>\\n                <td>\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Ebbe Gemariah</td>\\n                <td>2012/02/01</td>\\n                <td>Admin</td>\\n                <td>\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Eustorgios Amulius</td>\\n                <td>2012/03/01</td>\\n                <td>Member</td>\\n                <td>\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Leopold Gáspár</td>\\n                <td>2012/01/21</td>\\n                <td>Staff</td>\\n                <td>\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <ul class=\\\"pagination\\\">\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n            <li class=\\\"page-item active\\\">\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n            </li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Bordered Table\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th>Username</th>\\n                <th>Date registered</th>\\n                <th>Role</th>\\n                <th>Status</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>Pompeius René</td>\\n                <td>2012/01/01</td>\\n                <td>Member</td>\\n                <td>\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Paĉjo Jadon</td>\\n                <td>2012/02/01</td>\\n                <td>Staff</td>\\n                <td>\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Micheal Mercurius</td>\\n                <td>2012/02/01</td>\\n                <td>Admin</td>\\n                <td>\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Ganesha Dubhghall</td>\\n                <td>2012/03/01</td>\\n                <td>Member</td>\\n                <td>\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Hiroto Šimun</td>\\n                <td>2012/01/21</td>\\n                <td>Staff</td>\\n                <td>\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <ul class=\\\"pagination\\\">\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n            <li class=\\\"page-item active\\\">\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n            </li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/.row-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Combined All Table\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-bordered table-striped table-sm\\\">\\n            <thead>\\n              <tr>\\n                <th>Username</th>\\n                <th>Date registered</th>\\n                <th>Role</th>\\n                <th>Status</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>Vishnu Serghei</td>\\n                <td>2012/01/01</td>\\n                <td>Member</td>\\n                <td>\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Zbyněk Phoibos</td>\\n                <td>2012/02/01</td>\\n                <td>Staff</td>\\n                <td>\\n                  <span class=\\\"badge badge-danger\\\">Banned</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Einar Randall</td>\\n                <td>2012/02/01</td>\\n                <td>Admin</td>\\n                <td>\\n                  <span class=\\\"badge badge-secondary\\\">Inactive</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Félix Troels</td>\\n                <td>2012/03/01</td>\\n                <td>Member</td>\\n                <td>\\n                  <span class=\\\"badge badge-warning\\\">Pending</span>\\n                </td>\\n              </tr>\\n              <tr>\\n                <td>Aulus Agmundr</td>\\n                <td>2012/01/21</td>\\n                <td>Staff</td>\\n                <td>\\n                  <span class=\\\"badge badge-success\\\">Active</span>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <nav>\\n            <ul class=\\\"pagination\\\">\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n              <li class=\\\"page-item active\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n              </li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/.row-->\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <i class=\\\"fa fa-align-justify\\\"></i> Analysis Request Lists\\n          <button (click)=\\\"getServerData()\\\" value=\\\"Search\\\">\\n            Get Server Data\\n          </button>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th style=\\\"width: 15%\\\">Req. No</th>\\n                <th style=\\\"width: 20%\\\">Req. Date</th>\\n                <th style=\\\"width: 20%\\\">Type</th>\\n                <th style=\\\"width: 15%\\\">No.of Samples</th>\\n                <th style=\\\"width: 25%\\\">Status</th>\\n                <th style=\\\"width: 5%\\\" colspan=\\\"3\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr>\\n                <td>R2000001</td>\\n                <td>24-08-20201</td>\\n                <td>Fabric</td>\\n                <td>5</td>\\n                <td>Sample Not Received</td>\\n                <td>\\n                  <!--<img src=\\\"../../../assets/img/others/edit.png\\\" />-->\\n                  <i class=\\\"icon-book-open\\\"></i>\\n                </td>\\n                <td><i class=\\\"icon-doc\\\"></i> </td>\\n                <td><i class=\\\"icon-trash\\\"></i></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <ul class=\\\"pagination\\\" style=\\\"float: right\\\">\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Prev</a></li>\\n            <li class=\\\"page-item active\\\">\\n              <a class=\\\"page-link\\\" href=\\\"#\\\">1</a>\\n            </li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">2</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">4</a></li>\\n            <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">Next</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!--/.row-->\\n</div>\\n\";","export default \"<div *ngIf=\\\"isCameraExist; else noCameraExist\\\">\\n    <div style=\\\"text-align:center\\\">\\n        <div class=\\\"btn-group\\\">\\n            <button class=\\\"button\\\" (click)=\\\"takeSnapshot()\\\">Take Picture</button>\\n            <button class=\\\"button\\\" (click)=\\\"changeWebCame(true)\\\">Toggle Camera</button>\\n            <button class=\\\"button\\\" (click)=\\\"onOffWebCame()\\\">Switch camera</button>\\n        </div> <br />\\n        <webcam [height]=\\\"500\\\" [width]=\\\"1000\\\" [trigger]=\\\"triggerObservable\\\" (imageCapture)=\\\"handleImage($event)\\\"\\n            *ngIf=\\\"showWebcam\\\" [switchCamera]=\\\"nextWebcamObservable\\\"></webcam>\\n    </div>\\n\\n    <div *ngIf=\\\"errors.length > 0\\\">\\n        <h4>Error Messages:</h4>\\n        <ul *ngFor=\\\"let error of errors\\\">\\n            <li>{{ error | json }}</li>\\n        </ul>\\n    </div>\\n</div>\\n\\n<ng-template #noCameraExist>\\n    Camera device not available\\n</ng-template>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Contact</strong>\\n          <small>Us</small>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label style=\\\"font-weight: bold\\\" for=\\\"name\\\"\\n                  >The South India Textile Research Association[SITRA]</label\\n                >\\n              </div>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"ccnumber\\\">13/37, Avinashi Road,</label>\\n              </div>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\">Civil Aerodrome Post,</label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\">Coimbatore - 641 014,</label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\">Tamil Nadu, India</label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\"\\n                >Phone :91-422-2574367-9, 6544188, 4215333</label\\n              >\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\"></label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\"></label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\"></label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Physics & Chemistry</strong>\\n          <small>Department</small>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label\\n              class=\\\"col-sm-12\\\"\\n              style=\\\"text-align: center; font-weight: bold\\\"\\n              >Physics</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">physics@sitra.org.in</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3\\\">Fibre</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215327</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3\\\">Yarn</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215332</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3\\\">Fabric</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215314</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3\\\">Sample Room </label>\\n            <label class=\\\"col-sm-8\\\">0422-4215303</label>\\n          </div>\\n          <hr />\\n          <div class=\\\"form-group\\\">\\n            <label\\n              class=\\\"col-sm-12\\\"\\n              style=\\\"text-align: center; font-weight: bold\\\"\\n              >Chemistry</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">chem@sitra.org.in</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215328, 334</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n\\n    <!-- Start Chemistry Department -->\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>Knitting & Engineering</strong>\\n          <small>Department</small>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label\\n              class=\\\"col-sm-12\\\"\\n              style=\\\"text-align: center; font-weight: bold\\\"\\n              >Knitting</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">wvg@sitra.org.in</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215341, 343, 325</label>\\n          </div>\\n          <hr />\\n          <div class=\\\"form-group\\\">\\n            <label\\n              class=\\\"col-sm-12\\\"\\n              style=\\\"text-align: center; font-weight: bold\\\"\\n              >Engineering</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">engg@sitra.org.in</label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215344, 374</label>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"cc     month\\\"></label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\"></label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\"></label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <label for=\\\"ccmonth\\\"></label>\\n            </div>\\n          </div>\\n          <!--/.row-->\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n    <!-- End Checmistry Department-->\\n\\n    <!-- Start COE Department-->\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong>COE</strong>\\n          <small>&nbsp; Department</small>\\n        </div>\\n        <div class=\\\"card-body\\\" style=\\\"float: left\\\">\\n          <div class=\\\"form-group\\\" class=\\\"col-sm-4\\\" style=\\\"float: left\\\">\\n            <label style=\\\"font-weight: bold\\\" class=\\\"col-sm-12\\\"\\n              >Analytical & Food</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">coelabs@sitra.org.in</label>\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215333. Ext : 365 / 364</label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" class=\\\"col-sm-4\\\" style=\\\"float: left\\\">\\n            <label style=\\\"font-weight: bold\\\" class=\\\"col-sm-12\\\">Polymer</label>\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">sitrameditech@sitra.org.in</label>\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215333. Ext : 363</label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" class=\\\"col-sm-4\\\" style=\\\"float: left\\\">\\n            <label style=\\\"font-weight: bold\\\" class=\\\"col-sm-12\\\">Physics</label>\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">coephy@sitra.org.in</label>\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215349</label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" class=\\\"col-sm-4\\\" style=\\\"float: left\\\">\\n            <label style=\\\"font-weight: bold\\\" class=\\\"col-sm-12\\\"\\n              >Microbiology</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">coebio@sitra.org.in</label>\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215323</label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" class=\\\"col-sm-4\\\" style=\\\"float: left\\\">\\n            <label style=\\\"font-weight: bold\\\" class=\\\"col-sm-12\\\"\\n              >Biotechnology</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">coebio@sitra.org.in</label>\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215333. Ext : 373</label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" class=\\\"col-sm-4\\\" style=\\\"float: left\\\">\\n            <label style=\\\"font-weight: bold\\\" class=\\\"col-sm-12\\\"\\n              >Trainning & Incubation</label\\n            >\\n            <label class=\\\"col-sm-3\\\">E-mail</label>\\n            <label class=\\\"col-sm-8\\\">techtextrg@sitra.org.in</label>\\n            <label class=\\\"col-sm-3\\\">Phone</label>\\n            <label class=\\\"col-sm-8\\\">0422-4215333. Ext : 370</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n    <!-- End COE Department-->\\n  </div>\\n  <!--/.row-->\\n</div>\\n\";","export default \"<p>add-freq-tests works!</p>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <ng-template #template class=\\\"modal modal-lg\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Select Frequent Tests</h4>\\n      <button\\n        style=\\\"outline: none; border: none\\\"\\n        type=\\\"button\\\"\\n        class=\\\"close pull-right text-white\\\"\\n        aria-label=\\\"Close\\\"\\n        (click)=\\\"modalRef.hide()\\\"\\n      >\\n        <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"row d-flex justify-content-end mb-2\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"input-group\\\">\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"searchTestMaster\\\"\\n              id=\\\"frequent-test-search\\\"\\n              placeholder=\\\"Search...\\\"\\n            />\\n            <div class=\\\"input-group-prepend\\\">\\n              <button\\n                (click)=\\\"fetchTestMaster()\\\"\\n                class=\\\"btn btn-primary rounded-right\\\"\\n              >\\n                <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div\\n          class=\\\"table frequentTestList\\\"\\n          style=\\\"height: 40vh; overflow-y: scroll; overflow-x: hidden\\\"\\n        >\\n          <div\\n            class=\\\"row\\\"\\n            style=\\\"\\n              position: sticky;\\n              background-color: #e4e7ea;\\n              border: solid #e4e7ea;\\n            \\\"\\n          >\\n            <div class=\\\"col-md-2\\\"></div>\\n            <div class=\\\"col-md-2\\\">Test ID</div>\\n            <div class=\\\"col-md-4\\\">Test Name</div>\\n            <div class=\\\"col-md-2\\\">Member rate</div>\\n            <div class=\\\"col-md-2\\\">Non-Member rate</div>\\n          </div>\\n\\n          <div *ngFor=\\\"let tml of TestMasterList\\\">\\n            <div\\n              class=\\\"row section-list\\\"\\n              style=\\\"\\n                height: 3rem;\\n                padding: 5px 0px;\\n                border-bottom: 1px solid rgb(192, 191, 191);\\n              \\\"\\n            >\\n              <div class=\\\"col-md-2\\\">\\n                <input\\n                  type=\\\"checkbox\\\"\\n                  class=\\\"ml-5\\\"\\n                  (change)=\\\"testselection($event, tml.testid)\\\"\\n                  name=\\\"\\\"\\n                  id=\\\"{{ tml.testid }}\\\"\\n                />\\n              </div>\\n              <label class=\\\"col-md-2\\\" for=\\\"{{ tml.testid }}\\\">\\n                <div>{{ tml.testid }}</div>\\n              </label>\\n              <label class=\\\"col-md-4\\\" for=\\\"{{ tml.testid }}\\\">\\n                <div>{{ tml.testname }}</div>\\n              </label>\\n              <label class=\\\"col-md-2\\\" for=\\\"{{ tml.testid }}\\\">\\n                <div>{{ tml.mrate }}</div>\\n              </label>\\n              <label class=\\\"col-md-2\\\" for=\\\"{{ tml.testid }}\\\">\\n                <div>{{ tml.nmrate }}</div>\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <div class=\\\"mr-auto\\\">\\n        <p>\\n          No. of Selected Tests:\\n          {{ testList.length === 0 ? 0 : testList.length }}\\n        </p>\\n      </div>\\n      <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modalRef.hide()\\\">Close</button> -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"Modelclose()\\\">\\n        Close\\n      </button>\\n      <button\\n        type=\\\"button\\\"\\n        class=\\\"btn btn-success\\\"\\n        (click)=\\\"StoreNewFreqTestList()\\\"\\n      >\\n        Confirm\\n      </button>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Frequent Used Tests\\n          <button\\n            class=\\\"btn btn-success float-right\\\"\\n            value=\\\"\\\"\\n            (click)=\\\"openModal(template)\\\"\\n          >\\n            <i class=\\\"fa fa-plus\\\"></i> Add New Frequent Test\\n          </button>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row d-flex justify-content-end\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"searchText\\\"\\n                  id=\\\"frequent-test-search\\\"\\n                  placeholder=\\\"Search...\\\"\\n                />\\n                <div class=\\\"input-group-prepend\\\">\\n                  <button\\n                    (click)=\\\"getFrequentTest()\\\"\\n                    class=\\\"btn btn-primary rounded-right\\\"\\n                  >\\n                    <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <br />\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th style=\\\"width: 25%\\\">Test Name</th>\\n                <th style=\\\"width: 15%\\\">Alias</th>\\n                <th style=\\\"width: 20%\\\">NABL Standard</th>\\n                <th style=\\\"width: 10%\\\">Sample size</th>\\n                <th style=\\\"width: 10%\\\">Member rate</th>\\n                <th style=\\\"width: 10%\\\">Non-Member rate</th>\\n                <th style=\\\"width: 10%\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of PaginatedFreqTestList\\\">\\n                <td>{{ item.testname }}</td>\\n                <td>{{ item.alias }}</td>\\n                <td>{{ item.standard }}</td>\\n                <td>{{ item.samplesize }}</td>\\n                <td>{{ item.mrate }}</td>\\n                <td>{{ item.nmrate }}</td>\\n                <td>\\n                  <button\\n                    class=\\\"btn btn-danger\\\"\\n                    tooltip=\\\"Delete Test\\\"\\n                    (click)=\\\"DeleteFreqTest(item.testid)\\\"\\n                  >\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr />\\n          <div class=\\\"row d-flex justify-content-between\\\">\\n            <div class=\\\"col-md-1\\\">\\n              <select\\n                class=\\\"form-control\\\"\\n                name=\\\"\\\"\\n                id=\\\"\\\"\\n                [(ngModel)]=\\\"FreqTestItemperpage\\\"\\n                (ngModelChange)=\\\"itemPerPage()\\\"\\n              >\\n                <option value=\\\"5\\\">5</option>\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"20\\\">20</option>\\n                <option value=\\\"50\\\">50</option>\\n              </select>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n              <pagination\\n                id=\\\"freqTestPagination\\\"\\n                style=\\\"float: right\\\"\\n                [itemsPerPage]=\\\"FreqTestItemperpage\\\"\\n                [totalItems]=\\\"frequentTestList\\\"\\n                (pageChanged)=\\\"freqTestPageChanged($event)\\\"\\n              ></pagination>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/ End Table-->\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            SITRA NABL Certificate\\r\\n            <div class=\\\"card-header-actions\\\">\\r\\n              <!--<a href=\\\"https://valor-software.com/ngx-bootstrap/#/carousel\\\" target=\\\"_blank\\\">\\r\\n                <small className=\\\"text-muted\\\">docs</small>\\r\\n              </a>-->\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n             \\r\\n                <img src=\\\"../../../assets/img/others/nabl.jpg\\\" alt=\\\"First slide\\\" style=\\\"display: block; width: 100%;\\\">\\r\\n              \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            Quick\\r\\n            <small>Links</small>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-2\\\" >\\r\\n                    <a style=\\\"width:100%;\\\" href=\\\"http://cliqinnovations.com/projects/sitra/wp-content/uploads/2020/08/SITRA-Scope-CC-2678-1.pdf\\\">\\r\\n                        <img style=\\\"height:50px;width:50px;\\\" src=\\\"../../../assets/img/others/pdf.png\\\" />\\r\\n                    </a>\\r\\n                    <span style=\\\"width:100%;font-weight: bold;\\\">Scope</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            \\r\\n            <!--<ngx-extended-pdf-viewer\\r\\n             [src]=\\\"'../../../assets/pdfs/sitra-scope.pdf'\\\" [height]=\\\"'90vh'\\\" \\r\\n                [useBrowserLocale]=\\\"true\\\"\\r\\n                [textLayer]=\\\"true\\\"\\r\\n                [showHandToolButton]=\\\"true\\\"\\r\\n                backgroundColor=\\\"black\\\"\\r\\n                >\\r\\n            </ngx-extended-pdf-viewer> -->\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \";","export default \"<style>\\n  .main{\\n  margin-top: 15%;\\n}\\n\\n.st0{fill:#fff}\\n.st2{fill:#5d89af}\\n.st3{fill:#709abf}\\n.st4,.st6{\\n  fill:#fff;\\n  stroke:#b3dcdf;\\n  stroke-miterlimit:10\\n}\\n.st6{\\n  stroke:#5d89af;\\n  stroke-width:2\\n}\\n.st7,.st8,.st9{\\n  stroke:#709abf;\\n  stroke-miterlimit:10\\n}\\n\\n.st7{\\n  stroke-width:5;\\n  stroke-linecap:round;\\n  fill:none\\n}\\n.st8,.st9{\\n  fill:#fff\\n}\\n.st9{\\n  fill:none\\n}\\n\\n#cloud1{\\n  animation: cloud003 15s linear infinite;\\n}\\n\\n#cloud2{\\n  animation: cloud002 25s linear infinite;\\n}\\n\\n#cloud3{\\n  animation: cloud003 20s linear infinite;\\n}\\n\\n#cloud4{\\n  animation: float 4s linear infinite;\\n}\\n\\n#cloud5{\\n  animation: float 8s linear infinite;\\n}\\n\\n#cloud7{\\n  animation: float 5s linear infinite;\\n}\\n\\n#tracks{\\n  animation: slide 650ms linear infinite;\\n}\\n\\n#bumps{\\n  animation: land 10000ms linear infinite;\\n}\\n\\n@keyframes jig {\\n    0% { transform: translateY(0px); }\\n    50% { transform: translateY(1px); }\\n    100% { transform: translateY(0px); }\\n}\\n\\n#car-layers{\\n  animation: jig 0.35s linear infinite;\\n}\\n\\n@keyframes land {\\n    from { transform: translateX(0); }\\n    to { transform: translateX(1000px); }\\n}\\n\\n\\n@keyframes slide {\\n    from { transform: translateX(0px); }\\n    to { transform: translateX(100px); }\\n}\\n\\n/* @keyframes cloudFloat {\\n  0% { transform: translateX(0) translateY(3px); }\\n  100% { transform: translateX(1000px) translateY(0); }\\n} */\\n\\n@keyframes cloud001 {\\n  0% { transform: translateX(-1000px) translateY(3px); }\\n  100% { transform: translateX(1000px) translateY(0); }\\n}\\n\\n@keyframes cloud002 {\\n  0% { transform: translateX(-1000px) translateY(3px); }\\n  100% { transform: translateX(1000px) translateY(0); }\\n}\\n\\n@keyframes cloud003 {\\n  0% { transform: translateX(-1000px) translateY(3px); }\\n  100% { transform: translateX(1000px) translateY(0); }\\n}\\n\\n@keyframes float {\\n    0% { transform: translateY(0px) translateX(0); }\\n    50% { transform: translateY(8px) translateX(5px); }\\n    100% { transform: translateY(0px) translateX(0); }\\n}\\n\\n#bracefront, #braceback{\\n  animation: braces 1s linear infinite;\\n}\\n\\n@keyframes braces {\\n    0% { transform: translateX(-2px); }\\n  25% { transform: translateX(3px); }\\n    50% { transform: translateX(-2px); }\\n    75% { transform: translateX(3px); }\\n  100% { transform: translateX(-2px); }\\n}\\n</style>\\n<div class=\\\"main\\\">\\n  <div>\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1000 355\\\">\\n  <g id=\\\"ocean\\\">\\n    <path id=\\\"sky\\\" class=\\\"st0\\\" d=\\\"M0 0h1000v203.1H0z\\\"/>\\n    <linearGradient id=\\\"water_1_\\\" gradientUnits=\\\"userSpaceOnUse\\\" x1=\\\"500\\\" y1=\\\"354\\\" x2=\\\"500\\\" y2=\\\"200.667\\\">\\n      <stop offset=\\\"0\\\" stop-color=\\\"#fff\\\"/>\\n      <stop offset=\\\"1\\\" stop-color=\\\"#b3dcdf\\\"/>\\n    </linearGradient>\\n    <path id=\\\"water\\\" fill=\\\"url(#water_1_)\\\" d=\\\"M0 200.7h1000V354H0z\\\"/>\\n    <path id=\\\"land\\\" class=\\\"st0\\\" d=\\\"M0 273.4h1000V354H0z\\\"/>\\n    <g id=\\\"bumps\\\">\\n      <path class=\\\"st0\\\" d=\\\"M0 275.2s83.8-28 180-28 197 28 197 28H0z\\\"/>\\n    <path class=\\\"st0\\\" d=\\\"M377 275.2s54.7-28 117.5-28 128.6 28 128.6 28H377z\\\"/>\\n    <path class=\\\"st0\\\" d=\\\"M623.2 275.2s83.7-28 179.9-28 196.9 28 196.9 28H623.2z\\\"/>\\n      <path class=\\\"st0\\\" d=\\\"M-998 275.2s83.8-28 180-28 197 28 197 28h-377z\\\"/>\\n      <path class=\\\"st0\\\" d=\\\"M-621 275.2s54.7-28 117.5-28 128.6 28 128.6 28H-621z\\\"/>\\n      <path class=\\\"st0\\\" d=\\\"M-374.8 275.2s83.7-28 179.9-28S2 275.2 2 275.2h-376.8z\\\"/>\\n    </g>\\n  </g>\\n  <g id=\\\"tracks\\\">\\n    <path class=\\\"st2\\\" d=\\\"M9.8 282.4h-3L0 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M19.8 282.4h-3L10 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M29.8 282.4h-3L20 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M39.8 282.4h-3L30 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M49.8 282.4h-3L40 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M59.8 282.4h-3L50 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M69.8 282.4h-3L60 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M79.8 282.4h-3L70 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M89.8 282.4h-3L80 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M99.8 282.4h-3L90 307.6h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M109.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M119.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M129.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M139.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M149.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M159.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M169.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M179.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M189.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M199.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M209.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M219.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M229.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M239.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M249.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M259.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M269.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M279.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M289.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M299.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M309.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M319.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M329.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M339.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M349.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M359.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M369.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M379.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M389.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M399.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M409.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M419.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M429.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M439.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M449.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M459.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M469.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M479.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M489.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M499.8 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M1000 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M990 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M980 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M970 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M960 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M950 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M940 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M930 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M920 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M910 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M900 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M890 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M880 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M870 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M860 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M850 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M840 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M830 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M820 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M810 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M800 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M790 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M780 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M770 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M760 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M750 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M740 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M730 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M720 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M710 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M700 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M690 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M680 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M670 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M660 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M650 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M640 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M630 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M620 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M610 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M600 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M590 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M580 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M570 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M560 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <g>\\n      <path class=\\\"st2\\\" d=\\\"M-490.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-480.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-470.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-460.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-450.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-440.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-430.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-420.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-410.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-400.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-390.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-380.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-370.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-360.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-350.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-340.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-330.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-320.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-310.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-300.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-290.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-280.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-270.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-260.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-250.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-240.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-230.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-220.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-210.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-200.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-190.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-180.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-170.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-160.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-150.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-140.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-130.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-120.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-110.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-100.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-90.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-80.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-70.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-60.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-50.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-40.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-30.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-20.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-10.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M-.2 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M500 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M490 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M480 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M470 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M460 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M450 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M440 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M430 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M420 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M410 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M400 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M390 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M380 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M370 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M360 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M350 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M340 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M330 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M320 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M310 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M300 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M290 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M280 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M270 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M260 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M250 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M240 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M230 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M220 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M210 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M200 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M190 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M180 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M170 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M160 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M150 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M140 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M130 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M120 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M110 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M100 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M90 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M80 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M70 282.4h-3l-6.8 25.2h3z\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M60 282.4h-3l-6.8 25.2h3z\\\"/>\\n    </g>\\n    <path class=\\\"st2\\\" d=\\\"M550 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M540 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M530 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M520 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M510 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M550 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M540 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M530 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M520 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st2\\\" d=\\\"M510 282.4h-3l-6.8 25.2h3z\\\"/>\\n    <path class=\\\"st3\\\" d=\\\"M-499.5 300.2H1000v5.1H-499.5z\\\"/>\\n    <path class=\\\"st3\\\" d=\\\"M-499.5 283.8H1000v2.8H-499.5z\\\"/>\\n  </g>\\n  <g id=\\\"cloudsAll\\\">\\n    <path id=\\\"cloud1\\\" class=\\\"st4\\\" d=\\\"M19.5 69.7s-21.3.5-25-12.2c0 0-4.3-21.3 16-21.8 0 0-2.1-12.2 12.2-14.9 0 0 15-3.2 21.3 6.9 0 0 3.6-20.7 17.8-22.3 0 0 24-3 26.6 13.1 0 0 .1 9.5-2.8 13.5 0 0 9.5-15 26.5-4.8 0 0 12.1 7.9 7 20.2 0 0 16 4.8 10.1 18.1 0 0-10.2 8.5-17.1-1.1 0 0-5.5 16-32.5 16 0 0-19.1 2.1-27-13.3 0 0 .5 10.1-13.3 10.6-.1 0-20.3 3.2-19.8-8z\\\"/>\\n    <path id=\\\"cloud3\\\" class=\\\"st4\\\" d=\\\"M836 132s-18.3 2.1-22.2-4.9c0 0-4.9-11.8 12.5-13.8 0 0-2.5-6.8 9.7-9.6 0 0 12.7-3.1 18.7 2.1 0 0 2-12.2 14-14.3 0 0 16.6-3.3 23.7 2.1 0 0 4.8 3.9 2.4 6.5 0 0 3.1-4.8 18.4-.4 0 0 10.9 3.5 7.2 11 0 0 13.8-1.5 9.7 9.5 0 0-4.1 10.8-15.5 4.8 0 0-3.1 5.6-26.4 7.9 0 0-16.3 2.8-24-5.3 0 0 1 5.7-10.8 7.2-.1.1-17.2 3.6-17.4-2.8z\\\"/>\\n    <path id=\\\"cloud2\\\" class=\\\"st4\\\" d=\\\"M19.3 159.5s-15.9.6-18.8-5.1c0 0-3.4-9.5 11.7-10.1 0 0-1.7-5.5 9-6.9 0 0 11.2-1.7 16 2.8 0 0 2.5-9.4 13.1-10.3 0 0 17.9-1.8 20 5.4 0 0 .2 4.3-2 6.1 0 0 6.9-6.9 19.8-2.6 0 0 9.1 3.4 5.5 9 0 0 6.5 0 4.5 6.7 0 0-2.6 5.6-9.6 1 0 0-4 7.3-24.2 7.7 0 0-14.2 1.3-20.4-5.5 0 0 .5 4.5-9.8 5 0 .1-15 1.8-14.8-3.2z\\\"/>\\n    <path id=\\\"cloud4\\\" class=\\\"st4\\\" d=\\\"M370.3 109.5s15.9.6 18.8-5.1c0 0 3.4-9.5-11.7-10.1 0 0 1.7-5.5-9-6.9 0 0-11.2-1.7-16 2.8 0 0-2.5-9.4-13.1-10.3 0 0-17.9-1.8-20 5.4 0 0-.2 4.3 2 6.1 0 0-6.9-6.9-19.8-2.6 0 0-9.1 3.4-5.5 9 0 0-12 1.9-7.7 8 0 0 7.5 4 12.8-.2 0 0 4 7.3 24.2 7.7 0 0 14.2 1.3 20.4-5.5 0 0-.5 4.5 9.8 5 0 0 15.1 1.7 14.8-3.3z\\\"/>\\n    <path id=\\\"cloud5\\\" class=\\\"st4\\\" d=\\\"M511.7 12.4s-21.3-.3-25 7c0 0-4.3 12.2 16 12.5 0 0-2.1 7 12.2 8.6 0 0 15 1.8 21.3-4 0 0 3.6 11.9 17.8 12.8 0 0 19.5 1.6 27-4.4 0 0 5-4.4 2.1-6.7 0 0 4.1 4.4 21.2-1.5 0 0 12.1-4.6 7-11.6 0 0 16-2.8 10.1-10.4 0 0-10.2-4.9-17.1.6 0 0-5.5-9.2-32.5-9.2 0 0-19.1-1.2-27 7.6 0 0 .5-5.8-13.3-6.1-.1.2-20.3-1.6-19.8 4.8z\\\"/>\\n  </g>\\n  <g id=\\\"train\\\">\\n    <path fill=\\\"#b3dcdf\\\" d=\\\"M344.5 248.5h507.2v37.8H344.5z\\\"/>\\n    <g id=\\\"wheels\\\">\\n      <circle class=\\\"st6\\\" cx=\\\"384.1\\\" cy=\\\"285.6\\\" r=\\\"15.1\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M384.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\\\"/>\\n      <circle class=\\\"st6\\\" cx=\\\"416.1\\\" cy=\\\"285.6\\\" r=\\\"15.1\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M416.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\\\"/>\\n      <circle class=\\\"st6\\\" cx=\\\"469.1\\\" cy=\\\"285.6\\\" r=\\\"15.1\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M469.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\\\"/>\\n      <circle class=\\\"st6\\\" cx=\\\"734.1\\\" cy=\\\"285.6\\\" r=\\\"15.1\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M734.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\\\"/>\\n      <circle class=\\\"st6\\\" cx=\\\"766.1\\\" cy=\\\"285.6\\\" r=\\\"15.1\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M766.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\\\"/>\\n      <circle class=\\\"st6\\\" cx=\\\"821.1\\\" cy=\\\"285.6\\\" r=\\\"15.1\\\"/>\\n      <path class=\\\"st2\\\" d=\\\"M821.1 295.7c-5.6 0-10.1-4.5-10.1-10.1s4.5-10.1 10.1-10.1 10.1 4.5 10.1 10.1c0 5.5-4.6 10.1-10.1 10.1z\\\"/>\\n    </g>\\n    <path id=\\\"bracefront\\\" class=\\\"st7\\\" d=\\\"M383.2 285.6h88.1\\\"/>\\n    <path id=\\\"braceback\\\" class=\\\"st7\\\" d=\\\"M733.2 285.6h88.1\\\"/>\\n    <g id=\\\"car-layers\\\">\\n      <path id=\\\"car\\\" class=\\\"st8\\\" d=\\\"M321.8 300.7v-32.4s1.2.7-1.5-2.4v-29.1s3.1-11.6 10.7-21.1c0 0 7.6-12 15.5-17.5h1.3s10.2-4.9 30.9-28h.6s-.9-1.4 0-2.7c0 0 10.1-10.5 21-12.3 0 0 9.4-1.8 20.2-1.8h47.7V151H492v-1.1h10.1v1.1h19v2.2s8.2.9 19.2-4.2c0 0 1.4-1.1 28.8-1.1h291.5v6.8h7.5v2.2s12.2-.6 12.2 9.8V177l-10-.1v57.9s14.9-.5 14.9 10.2c0 0 1 9-14.9 8.9v3.8H719.5s-2.4.1-4.3 3l-15 29s-2.9 5.1-10.8 5.1H504.3s-2.9.1-6.1-5l-13.1-25s-4.5-7.1-11.8-7.1H369v2.4s-3.2 1.3-7.1 8.7L351.4 289s-2.9 6.3-6.9 6.4h-17.8l-4.9 5.3z\\\"/>\\n      <path id=\\\"streamline-outine\\\" class=\\\"st8\\\" d=\\\"M320.3 236.6s1.4-6.8 4.4-11.3c0 0 .1-2.3 23.2-6.3l78-16.6s103.3-21.1 134.9-26.1c0 0 93.3-16 120.5-17.9 0 0 57.6-4.3 100-4.1h88.9v63.4s-10.3 5.4-17.1 5.3c0 0-305.6 4.9-366.3 8.1 0 0-100.3 4.8-119.1 6.8 0-.1-46.6 1.2-47.4-1.3z\\\"/>\\n      <g id=\\\"window-grate\\\">\\n        <path class=\\\"st9\\\" d=\\\"M739.5 182.6H854\\\"/>\\n        <path class=\\\"st9\\\" d=\\\"M739.5 177.6H854\\\"/>\\n        <path class=\\\"st9\\\" d=\\\"M739.5 172.6H854\\\"/>\\n        <path class=\\\"st9\\\" d=\\\"M739.5 167.6H854\\\"/>\\n        <path class=\\\"st9\\\" d=\\\"M739.5 161.4H854v26.1H739.5z\\\"/>\\n      </g>\\n      <path class=\\\"st9\\\" d=\\\"M320.3 257.8h549.9\\\"/>\\n      <g id=\\\"Text\\\">\\n        <text transform=\\\"translate(377.037 230.025)\\\" class=\\\"st8 st10\\\" font-size=\\\"21\\\">\\n          Error Code : 404\\n        </text>\\n        <text transform=\\\"translate(659.5 213.994)\\\" class=\\\"st8 st10\\\" font-size=\\\"24.025\\\">\\n        Page not found.\\n        </text>\\n      </g>\\n      <g id=\\\"ladders\\\">\\n        <g id=\\\"ladder-f\\\">\\n          <path id=\\\"front-ladder\\\" class=\\\"st8\\\" d=\\\"M433.8 258.4h17.8v34.8h-17.8z\\\"/>\\n          <path id=\\\"fb-rung\\\" class=\\\"st9\\\" d=\\\"M433.8 281.1h17.7\\\"/>\\n          <path id=\\\"ft-rung\\\" class=\\\"st9\\\" d=\\\"M433.8 268.6h17.7\\\"/>\\n        </g>\\n        <g id=\\\"ladder-b\\\">\\n          <path id=\\\"ladder-back\\\" class=\\\"st8\\\" d=\\\"M851.8 257.8h17.8v34.8h-17.8z\\\"/>\\n          <path id=\\\"bt-rung\\\" class=\\\"st9\\\" d=\\\"M851.8 268.6h17.7\\\"/>\\n          <path id=\\\"bb-rung\\\" class=\\\"st9\\\" d=\\\"M851.8 281.1h17.7\\\"/>\\n        </g>\\n      </g>\\n      <path id=\\\"window-front\\\" class=\\\"st8\\\" d=\\\"M350.5 196.4s-.4 3.9 15.2 4.3l32.3-30.3s-18.2 1.1-19-.8l-28.5 26.8z\\\"/>\\n    </g>\\n  </g>\\n</svg>\\n  </div>\\n</div>\";","export default \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"clearfix\\\">\\n          <h1 class=\\\"float-left display-3 mr-4\\\">500</h1>\\n          <h4 class=\\\"pt-3\\\">Houston, we have a problem!</h4>\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\n        </div>\\n        <div class=\\\"input-prepend input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n          </div>\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\n          <span class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<h2>Coming Soon..,</h2>\";","export default \"<p>fileupload works!</p>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <!-- <app-viewinward></app-viewinward>      -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"font-weight: bold\\\">\\n          {{ tableHeading }}\\n          <div\\n            *ngIf=\\\"loaderFlag == true\\\"\\n            class=\\\"spinner-border text-primary\\\"\\n            role=\\\"status\\\"\\n          >\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div *ngIf=\\\"searchText == ''\\\" style=\\\"width: 10%; float: left\\\">\\n            <select\\n              (change)=\\\"changeDisplayCount()\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"apiParams.tablerowlimit\\\"\\n            >\\n              <option value=\\\"10\\\">10</option>\\n              <option value=\\\"25\\\">25</option>\\n              <option value=\\\"50\\\">50</option>\\n              <option value=\\\"100\\\">100</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 30%\\\">\\n            <input\\n              (keyup)=\\\"getData()\\\"\\n              [(ngModel)]=\\\"searchText\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"exampleFormControlInput1\\\"\\n              placeholder=\\\"Type Inwardno to Search\\\"\\n            />\\n          </div>\\n          <br />\\n          <nav\\n            style=\\\"width: 100%; float: left\\\"\\n            *ngIf=\\\"searchText == ''\\\"\\n            aria-label=\\\"Page navigation example\\\"\\n          >\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n          <div *ngIf=\\\"spinnerFlag === true\\\" class=\\\"spinner\\\"></div>\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th style=\\\"width: 5%\\\">S.No</th>\\n                <th style=\\\"width: 15%\\\">Inward No</th>\\n                <th style=\\\"width: 15%\\\">Inward Date</th>\\n                <th style=\\\"width: 20%; text-align: center\\\">Request No</th>\\n                <th style=\\\"width: 20%; text-align: center\\\">Type</th>\\n                <th style=\\\"width: 15%\\\">No of Sample(s)</th>\\n                <th style=\\\"width: 15%\\\">Status</th>\\n                <th style=\\\"width: 5%\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let inward of inwardList; index as j\\\">\\n                <td>\\n                  <div>{{ j + 1 }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ inward.inwardno }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ inward.inward_date.slice(0, 11) }}</div>\\n                </td>\\n                <td style=\\\"text-align: center\\\">\\n                  <div>{{ inward.reqno }}</div>\\n                </td>\\n                <td style=\\\"text-align: center\\\">\\n                  <div>{{ inward.sample_type }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ inward.noofsamples }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ inward.status_string }}</div>\\n                </td>\\n                <td>\\n                  <div style=\\\"float: left\\\">\\n                    <i\\n                      class=\\\"fa fa-eye\\\"\\n                      style=\\\"font-size: 1.3em; cursor: pointer; color: green\\\"\\n                      title=\\\"View Inward\\\"\\n                      (click)=\\\"viewInward(inward.inwardno)\\\"\\n                    ></i>\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr />\\n          <nav *ngIf=\\\"searchText == ''\\\" aria-label=\\\"Page navigation example\\\">\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \" <div style=\\\"width:100%;float:left;background-color: #E4E5E6;\\\">\\n    <div style=\\\"width:80%;float:left;\\\">\\n        <ul style=\\\"width:40%;float:left;\\\">\\n            <li><a (click)=\\\"changeTabIndex(1)\\\" [ngClass]=\\\"{'active': tabIndex === 1 }\\\" href=\\\"#inwardview/{{SessionInwardno}}\\\">Inward Details</a></li>\\n            <li><a (click)=\\\"changeTabIndex(2)\\\" [ngClass]=\\\"{'active': tabIndex === 2 }\\\" href=\\\"#inwardview/{{SessionInwardno}}\\\">Sample(s) & Test Result</a></li>\\n        </ul>\\n        \\n    </div>\\n    \\n    \\n</div>\\n<div *ngIf=\\\"loaderFlag === true\\\" class=\\\"spinner\\\"></div>\\n<div style=\\\"width:100%;float:left;height:89vh;\\\">\\n    <app-inwardviewinwarddetails *ngIf=\\\"tabIndex === 1\\\"></app-inwardviewinwarddetails>  \\n    <app-inwardviewsampletests *ngIf=\\\"tabIndex === 2\\\"></app-inwardviewsampletests>  \\n    <!-- <app-inwardview-inwarddetails *ngIf=\\\"tabIndex === 1\\\"></app-inwardview-inwarddetails>\\n    <app-inwardview-sampletests *ngIf=\\\"tabIndex === 2\\\"></app-inwardview-sampletests> -->\\n</div>\\n<!-- <div style=\\\"width:100%;float:left;height:3vh;background-color: #0ba360;\\\">\\n    Footer\\n</div> -->\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"card\\\" style=\\\"border: 0px solid red; background-color: #e4e5e6\\\">\\n      <div class=\\\"card-body\\\" style=\\\"border: 0px solid red\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"border1 col-sm-4\\\" style=\\\"border: 1px solid green\\\">\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Inward No</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.inwardno\\n              }}</label>\\n            </div>\\n            <!-- <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\">Inward No</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.inwardno }}</label>\\n            </div> -->\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Inward Date</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.inward_date.slice(0, 11)\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Sample rerturn</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label\\n                *ngIf=\\\"inwardPageDetails.samplesreturn === 'Y'\\\"\\n                class=\\\"fullwidth\\\"\\n                style=\\\"width: 20%; text-align: left\\\"\\n                >Yes</label\\n              >\\n              <label\\n                *ngIf=\\\"inwardPageDetails.samplesreturn !== 'Y'\\\"\\n                class=\\\"fullwidth\\\"\\n                style=\\\"width: 20%; text-align: left\\\"\\n                >No</label\\n              >\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Express Testing</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.exp_testing\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Comments</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.nablcomment\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Customer Type</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.custtype\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Sample Received on</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.sample_received_date\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Combo Selection</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.is_combo\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Test Condition</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.test_condition_based\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Sample Received Condition</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.sample_received_condition\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\">Customer</label>\\n              <label class=\\\"fullwidth fontbold\\\">{{\\n                inwardPageDetails.name\\n              }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.address1 }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.address2 }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.city }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.state }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.pincode }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Contact details</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.phoneno }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.mobile }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.emailid }}</label>\\n              <label class=\\\"fullwidth\\\"></label>\\n              <label class=\\\"fullwidth\\\"></label>\\n\\n              <!-- <label class=\\\"fullwidth fontbold fontunderline\\\">Sample Statistics</label>\\n                        <div class=\\\"chart-wrapper\\\">\\n                            <canvas baseChart class=\\\"chart\\\"\\n                            [data]=\\\"pieChartData\\\"\\n                            [labels]=\\\"pieChartLabels\\\"\\n                            [chartType]=\\\"pieChartType\\\"\\n                            (chartHover)=\\\"chartHovered($event)\\\"\\n                            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n                          </div> -->\\n            </div>\\n          </div>\\n          <div class=\\\"border2 col-sm-3\\\" style=\\\"border: 1px solid green\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\">Request.No</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.reqno }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Reference.No</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.refno }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Request. Date</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.reqdate.slice(0, 11)\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Amount Received</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.receiptno }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Receipt Date</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.receiptdate.slice(0, 11)\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Inward Comments</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.comments }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Invoice Comments</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.invoicecomment\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >No of Sample(s)</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.noofsamples\\n              }}</label>\\n            </div>\\n            <!-- <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Sample Received on</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.sample_received_date\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Combo Selection\\n              </label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.is_combo }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Test Condition</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.test_condition_based\\n              }}</label>\\n            </div>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Sample Received Condition</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.sample_received_condition\\n              }}</label>\\n            </div> -->\\n            <!-- <div class=\\\"col-sm-12\\\">\\n                        <label class=\\\"fullwidth fontbold fontunderline\\\">Sample Statistics</label>\\n                        <div class=\\\"chart-wrapper\\\">\\n                            <canvas baseChart class=\\\"chart\\\"\\n                            [data]=\\\"pieChartData\\\"\\n                            [labels]=\\\"pieChartLabels\\\"\\n                            [chartType]=\\\"pieChartType\\\"\\n                            (chartHover)=\\\"chartHovered($event)\\\"\\n                            (chartClick)=\\\"chartClicked($event)\\\"\\n                            [colors]=\\\"colors\\\"></canvas>\\n                          </div>\\n                    </div> -->\\n          </div>\\n          <div class=\\\"border3 col-sm-4\\\" style=\\\"border: 1px solid green\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label class=\\\"fontbold\\\" style=\\\"width: 45%\\\">Invoice No</label>\\n                <!-- <label style=\\\"width:10%;\\\">:</label> -->\\n                <label class=\\\"fontbold\\\" style=\\\"width: 30%; text-align: right\\\">{{\\n                  inwardPageDetails.invoiceno\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Charge Details</label\\n              >\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Testing Charge</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.testcharges\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Discount (-)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.discount\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Sub total (A)</label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.subtotal_a\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Other Charges (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.other_charge\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Additional Charges (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.additional_charge\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Taxable Value (B)</label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.taxable_charge\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">CGST (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.cgst\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">SGST (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.sgst\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">IGST (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.igst\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Sub Total (B)</label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.subtotal_b\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Rounded Off (+ / -)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.rounded_off\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label class=\\\"fontbold\\\" style=\\\"width: 45%\\\"\\n                  >Net Bill value</label\\n                >\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.netamt\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!--/.row-->\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"col-md-12\\\" style=\\\"float: left\\\">\\n    <div style=\\\"float: left\\\">\\n      <div\\n        style=\\\"float: left; height: 10px; width: 10px; background-color: green\\\"\\n      >\\n        &nbsp;\\n      </div>\\n      <span style=\\\"float: left; padding-left: 2px\\\">Published</span>\\n    </div>\\n    <div style=\\\"float: left; margin-left: 10px\\\">\\n      <div\\n        style=\\\"\\n          float: left;\\n          height: 10px;\\n          width: 10px;\\n          background-color: #4f93c6;\\n        \\\"\\n      >\\n        &nbsp;\\n      </div>\\n      <span style=\\\"float: left; padding-left: 2px\\\">In-Progress</span>\\n    </div>\\n    <div style=\\\"float: left; margin-left: 10px\\\">\\n      <div\\n        style=\\\"\\n          float: left;\\n          height: 10px;\\n          width: 10px;\\n          background-color: #f28091;\\n        \\\"\\n      >\\n        &nbsp;\\n      </div>\\n      <span style=\\\"float: left; padding-left: 2px\\\">Pending</span>\\n    </div>\\n  </div>\\n  <div\\n    *ngIf=\\\"inwardDetail.descritiveType !== 'Y'\\\"\\n    class=\\\"col-md-12\\\"\\n    style=\\\"margin-top: 10px\\\"\\n  >\\n    <div *ngFor=\\\"let sample of inwardSampleLists; index as a\\\" class=\\\"card\\\">\\n      <div\\n        class=\\\"card-header\\\"\\n        style=\\\"float: left\\\"\\n        [style.background]=\\\"sample.color\\\"\\n      >\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          {{ sample.sampleno }}\\n        </div>\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          Count : {{ sample.count }}\\n        </div>\\n        <div style=\\\"width: 35%; border: 0px solid white; float: left\\\">\\n          Sample. Type : {{ sample.samplename }}\\n        </div>\\n        <div style=\\\"width: 15%; border: 0px solid white; float: left\\\">\\n          No of Test(s) : {{ sample.nooftests }}\\n        </div>\\n        <div style=\\\"width: 50%; border: 0px solid white; float: left\\\">\\n          Description : {{ sample.description }}\\n        </div>\\n        <div style=\\\"width: 49%; border: 0px solid white; float: left\\\">\\n          Remarks : {{ sample.remark }}\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\" *ngFor=\\\"let test of sample.tests\\\">\\n        <table\\n          *ngIf=\\\"test.test_status == 'Published'\\\"\\n          style=\\\"width: 100%; font-size: 0.9em\\\"\\n          class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n        >\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th style=\\\"width: 25%\\\">Test Name</th>\\n              <th style=\\\"width: 48%\\\">Result</th>\\n              <th style=\\\"width: 12%\\\">Completed Date</th>\\n              <th style=\\\"width: 10%\\\">Status</th>\\n              <th style=\\\"width: 5%\\\">PDF</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <!-- [ngStyle]=\\\"{\\n              'background-color': \\n                test.test_status == 'Published' ? '#73c7af' : '#ffffff'\\n            }\\\" -->\\n              <!-- <td>{{ test.testname }}</td> -->\\n\\n              <td><span [innerHTML]=\\\"test.testname\\\"></span></td>\\n              <td>\\n                <div style=\\\"width: 100%; float: left\\\">\\n                  <table>\\n                    <tr>\\n                      <th style=\\\"border: none\\\">Parameter</th>\\n                      <th *ngIf=\\\"test.res1 === ''\\\" style=\\\"border: none\\\">\\n                        Result\\n                      </th>\\n                      <th *ngIf=\\\"test.res1 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res1 }}\\n                      </th>\\n                      <th *ngIf=\\\"test.res2 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res2 }}\\n                      </th>\\n                      <th *ngIf=\\\"test.res3 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res3 }}\\n                      </th>\\n                      <th *ngIf=\\\"test.res4 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res4 }}\\n                      </th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let result of test.results\\\">\\n                      <td><span [innerHTML]=\\\"result.paraname\\\"></span></td>\\n                      <td *ngIf=\\\"result.res1 !== ''\\\">{{ result.res1 }}</td>\\n                      <td *ngIf=\\\"result.res2 !== ''\\\">{{ result.res2 }}</td>\\n                      <td *ngIf=\\\"result.res3 !== ''\\\">{{ result.res3 }}</td>\\n                      <td *ngIf=\\\"result.res4 !== ''\\\">{{ result.res4 }}</td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </td>\\n              <td>{{ test.publish_date }}</td>\\n              <td>{{ test.test_status }}</td>\\n              <td>\\n                <!-- <a href=\\\"{{pdfUrl}}X123456.pdf\\\" target=\\\"_self\\\">View</a> -->\\n                <a\\n                  *ngIf=\\\"test.file1 !== ''\\\"\\n                  href=\\\"http://lab.sitraonline.org.in/pdf/{{ test.file1 }}\\\"\\n                  target=\\\"new\\\"\\n                  >View</a\\n                >\\n                <a\\n                  *ngIf=\\\"test.file2 !== ''\\\"\\n                  href=\\\"http://lab.sitraonline.org.in/pdf/{{ test.file2 }}\\\"\\n                  target=\\\"new\\\"\\n                  >View</a\\n                >\\n                <!-- <button (click)=\\\"downloadPdfFile()\\\" >View</button> -->\\n                <!-- <span>{{pdfUrl}}</span> -->\\n              </td>\\n            </tr>\\n\\n            <!-- <div *ngIf=\\\"inwardSampleTests[sample.sampleno]\\\">\\n                        <tr *ngFor=\\\"let sample of inwardSampleTests[sample.sampleno]; index as b;\\\" >\\n                            <td>{{inwardSampleTests[sample.sampleno][b].testname}}</td>\\n                          </tr>\\n                    </div>       -->\\n            <!-- <tr  >\\n                    <td>{{inwardSampleTests[sample.sampleno][a].testname}}</td>\\n                  </tr> -->\\n          </tbody>\\n        </table>\\n        <table\\n          *ngIf=\\\"test.test_status != 'Published'\\\"\\n          style=\\\"width: 100%; font-size: 0.9em\\\"\\n          class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n        >\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th style=\\\"width: 25%\\\">Test Name</th>\\n\\n              <th style=\\\"width: 12%\\\">Completed Date</th>\\n              <th style=\\\"width: 10%\\\">Status</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <!-- [ngStyle]=\\\"{\\n              'background-color': \\n                test.test_status == 'Published' ? '#73c7af' : '#ffffff'\\n            }\\\" -->\\n              <!-- <td>{{ test.testname }}</td> -->\\n\\n              <td><span [innerHTML]=\\\"test.testname\\\"></span></td>\\n\\n              <td>{{ test.publish_date }}</td>\\n              <td>{{ test.test_status }}</td>\\n            </tr>\\n\\n            <!-- <div *ngIf=\\\"inwardSampleTests[sample.sampleno]\\\">\\n                        <tr *ngFor=\\\"let sample of inwardSampleTests[sample.sampleno]; index as b;\\\" >\\n                            <td>{{inwardSampleTests[sample.sampleno][b].testname}}</td>\\n                          </tr>\\n                    </div>       -->\\n            <!-- <tr  >\\n                    <td>{{inwardSampleTests[sample.sampleno][a].testname}}</td>\\n                  </tr> -->\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  <!--/.row; End Descriptive No Type-->\\n\\n  <!-- Start Descriptive No Type -->\\n  <div\\n    *ngIf=\\\"inwardDetail.descritiveType === 'Y'\\\"\\n    class=\\\"col-md-12\\\"\\n    style=\\\"margin-top: 10px\\\"\\n  >\\n    <div *ngFor=\\\"let sample of inwardSampleLists; index as a\\\" class=\\\"card\\\">\\n      <div class=\\\"card-header\\\" style=\\\"float: left\\\">\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          {{ sample.sampleno }}\\n        </div>\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          Count : {{ sample.count }}\\n        </div>\\n        <div style=\\\"width: 35%; border: 0px solid white; float: left\\\">\\n          Sample. Type : {{ sample.samplename }}\\n        </div>\\n        <div style=\\\"width: 15%; border: 0px solid white; float: left\\\">\\n          No of Test(s) : {{ sample.nooftests }}\\n        </div>\\n        <div style=\\\"width: 50%; border: 0px solid white; float: left\\\">\\n          Description : {{ sample.description }}\\n        </div>\\n        <div style=\\\"width: 49%; border: 0px solid white; float: left\\\">\\n          Remarks : {{ sample.remark }}\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <table\\n          style=\\\"width: 100%; font-size: 0.9em\\\"\\n          class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n        >\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th style=\\\"width: 45%\\\">Test Name</th>\\n              <th style=\\\"width: 25%\\\">Instrument</th>\\n              <th style=\\\"width: 15%\\\">Completed Date</th>\\n              <th style=\\\"width: 10%\\\">Status</th>\\n              <th style=\\\"width: 5%\\\">PDF</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let test of sample.tests\\\">\\n              <td>\\n                <p>{{ test.testname }}</p>\\n              </td>\\n              <td>\\n                <p *ngIf=\\\"test.instrumentname == ''\\\">-NA-</p>\\n                <p *ngIf=\\\"test.instrumentname !== ''\\\">\\n                  {{ test.instrumentname }}\\n                </p>\\n              </td>\\n              <td>{{ test.publish_date }}</td>\\n\\n              <td>{{ test.test_status }}</td>\\n              <td>\\n                <a\\n                  *ngIf=\\\"test.file1 !== ''\\\"\\n                  href=\\\"{{ pdfUrl }}{{ test.file1 }}\\\"\\n                  target=\\\"_new\\\"\\n                  >View</a\\n                >\\n                <!-- <span>{{pdfUrl}}{{test.file1}}</span> -->\\n                <!-- <span>{{inwardDetail.documentRoot}}</span> -->\\n                <span *ngIf=\\\"test.file1 === ''\\\">NA</span>\\n\\n                <a\\n                  *ngIf=\\\"test.file2 !== ''\\\"\\n                  href=\\\"{{ pdfUrl }}{{ test.file2 }}\\\"\\n                  target=\\\"_new\\\"\\n                  >View</a\\n                >\\n                <!-- <span>{{pdfUrl}}{{test.file1}}</span> -->\\n                <!-- <span>{{inwardDetail.documentRoot}}</span> -->\\n                <span *ngIf=\\\"test.file2 === ''\\\">NA</span>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n    <!-- Descriptive type Result -->\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\" style=\\\"float: left\\\">Result</div>\\n      <div class=\\\"card-body\\\">\\n        <p [innerHTML]=\\\"inwardDetail.descriptiveResult\\\"></p>\\n        <p *ngFor=\\\"let standardnarration of inwardStandardNarration\\\">\\n          {{ standardnarration }}\\n        </p>\\n      </div>\\n    </div>\\n    <!-- End Descriptive type Result -->\\n  </div>\\n  <!-- End Descriptive No Type-->\\n</div>\\n\";","export default \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div\\n          bsModal\\n          #primaryModal=\\\"bs-modal\\\"\\n          class=\\\"modal fade\\\"\\n          tabindex=\\\"-1\\\"\\n          role=\\\"dialog\\\"\\n          aria-labelledby=\\\"myModalLabel\\\"\\n          aria-hidden=\\\"true\\\"\\n        >\\n          <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\" style=\\\"width: 100%\\\">\\n                <h4 style=\\\"width: 100%; float: left\\\" class=\\\"modal-title\\\">\\n                  Reset Password\\n                </h4>\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"close\\\"\\n                  (click)=\\\"primaryModal.hide()\\\"\\n                  aria-label=\\\"Close\\\"\\n                >\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div *ngIf=\\\"resetPasswordLoader === true\\\" class=\\\"loader\\\"></div>\\n              <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"ccmonth\\\">Enter Registred mobile no</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      maxlength=\\\"10\\\"\\n                      (keyup)=\\\"enableSendOtpButtonFunction()\\\"\\n                      class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"passwordReset.registeredMoileNo\\\"\\n                    />\\n                  </div>\\n                  <div\\n                    *ngIf=\\\"passwordReset.status === true\\\"\\n                    class=\\\"form-group col-sm-6\\\"\\n                  >\\n                    <label for=\\\"ccmonth\\\">Enter OTP</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      maxlength=\\\"6\\\"\\n                      (keyup)=\\\"enableVerifyOtpButtonFunction()\\\"\\n                      [(ngModel)]=\\\"passwordReset.enteredOtp\\\"\\n                      class=\\\"form-control\\\"\\n                    />\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"enableNewPassword === true\\\" class=\\\"row\\\">\\n                  <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"ccmonth\\\">Enter New password</label>\\n                    <input\\n                      type=\\\"password\\\"\\n                      class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"resetPasswordFormData.newpassword\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"ccmonth\\\">Re-Enter New password</label>\\n                    <input\\n                      type=\\\"password\\\"\\n                      [(ngModel)]=\\\"resetPasswordFormData.confirmpassword\\\"\\n                      class=\\\"form-control\\\"\\n                    />\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <span\\n                  *ngIf=\\\"passwordReset.status === true\\\"\\n                  style=\\\"color: #3ea662\\\"\\n                  >{{ passwordReset.msg }}</span\\n                >\\n                <span\\n                  *ngIf=\\\"passwordReset.status === false\\\"\\n                  style=\\\"color: #e45532\\\"\\n                  >{{ passwordReset.msg }}</span\\n                >\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary\\\"\\n                  (click)=\\\"primaryModal.hide()\\\"\\n                >\\n                  Close\\n                </button>\\n                <button\\n                  *ngIf=\\\"\\n                    enableSendOtpButton === false &&\\n                    passwordReset.status === false\\n                  \\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-primary\\\"\\n                  (click)=\\\"validateRegistreredMobileNoForResetPassword()\\\"\\n                  disabled\\n                >\\n                  Send OTP\\n                </button>\\n                <button\\n                  *ngIf=\\\"\\n                    enableSendOtpButton === true &&\\n                    passwordReset.status === false\\n                  \\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-primary\\\"\\n                  (click)=\\\"validateRegistreredMobileNoForResetPassword()\\\"\\n                >\\n                  Send OTP\\n                </button>\\n\\n                <button\\n                  *ngIf=\\\"\\n                    enableVerifyOtpButton === false &&\\n                    passwordReset.status === true &&\\n                    enableSubmitButton !== true\\n                  \\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-success\\\"\\n                  (click)=\\\"validateOtpForResetPassword()\\\"\\n                  disabled\\n                >\\n                  Verify OTP\\n                </button>\\n                <button\\n                  *ngIf=\\\"\\n                    enableVerifyOtpButton === true &&\\n                    passwordReset.status === true &&\\n                    enableSubmitButton !== true\\n                  \\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-success\\\"\\n                  (click)=\\\"validateOtpForResetPassword()\\\"\\n                >\\n                  Verify OTP\\n                </button>\\n\\n                <button\\n                  *ngIf=\\\"enableSubmitButton === true\\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-warning\\\"\\n                  (click)=\\\"validateNewPassword()\\\"\\n                >\\n                  Submit\\n                </button>\\n              </div>\\n            </div>\\n            <!-- /.modal-content -->\\n          </div>\\n          <!-- /.modal-dialog -->\\n        </div>\\n        <!-- /.modal -->\\n\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div style=\\\"width: 100%\\\">\\n            <div style=\\\"width: 80%; margin-left: 20%\\\">\\n              <img\\n                style=\\\"width: 80px; height: 80px\\\"\\n                src=\\\"assets/img/others/sitralogo.png\\\"\\n              />\\n              <img style=\\\"width: 60%\\\" src=\\\"assets/img/others/title-trans.png\\\" />\\n            </div>\\n          </div>\\n          <div class=\\\"card-group\\\">\\n            <div class=\\\"card p-4\\\">\\n              <div class=\\\"card-body\\\">\\n                <form>\\n                  <h1>Login</h1>\\n                  <p class=\\\"text-muted\\\">Sign In to your account</p>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"\\n                        ><i class=\\\"icon-user\\\"></i\\n                      ></span>\\n                    </div>\\n                    <input\\n                      [(ngModel)]=\\\"loginFormData.email\\\"\\n                      type=\\\"text\\\"\\n                      name=\\\"username\\\"\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"Username/Email Id/Custid\\\"\\n                      autocomplete=\\\"username\\\"\\n                      required\\n                    />\\n                  </div>\\n                  <div class=\\\"input-group mb-4\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"\\n                        ><i class=\\\"icon-lock\\\"></i\\n                      ></span>\\n                    </div>\\n                    <input\\n                      [(ngModel)]=\\\"loginFormData.password\\\"\\n                      type=\\\"password\\\"\\n                      name=\\\"password\\\"\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"Password\\\"\\n                      autocomplete=\\\"current-password\\\"\\n                      required\\n                    />\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                      <button\\n                        (click)=\\\"doLogin()\\\"\\n                        type=\\\"button\\\"\\n                        class=\\\"btn px-12\\\"\\n                        style=\\\"\\n                          background-color: #127b6e;\\n                          color: white;\\n                          font-weight: bold;\\n                        \\\"\\n                      >\\n                        Login\\n                        <div\\n                          *ngIf=\\\"spinnerFlag == true\\\"\\n                          class=\\\"spinner-border text-info\\\"\\n                          style=\\\"width: 2rem; height: 2rem\\\"\\n                          role=\\\"status\\\"\\n                        >\\n                          <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                      </button>\\n                      <!--<span style=\\\"float:right;text-decoration: underline;cursor: pointer;\\\">Forgot password?</span>-->\\n\\n                      <br />\\n                    </div>\\n                    <div *ngIf=\\\"returnFlag == true\\\">\\n                      <span\\n                        style=\\\"\\n                          font-size: 14px;\\n                          color: green;\\n                          padding: 10px;\\n                          font-weight: bold;\\n                        \\\"\\n                        >{{ returnMessage }}</span\\n                      >\\n                    </div>\\n                    <div *ngIf=\\\"returnFlag == false\\\">\\n                      <span\\n                        style=\\\"\\n                          font-size: 14px;\\n                          color: red;\\n                          padding: 10px;\\n                          font-weight: bold;\\n                        \\\"\\n                        >{{ returnMessage }}</span\\n                      >\\n                    </div>\\n\\n                    <!-- <div class=\\\"col-6 text-right\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-link px-0\\\">Forgot password?</button>\\n                    </div> -->\\n                  </div>\\n\\n                  <!-- <div class=\\\"row\\\" style=\\\"float:left;width:100%;\\\" (click)=\\\"goToRegisteration()\\\">\\n                    <span  style=\\\"text-decoration:underline;width:40%;float:right;cursor:pointer;font-weight: bold;font-size: 0.9em;color:#127b6e;\\\">Forgot password ?</span>\\n                  </div>\\n                  <div  style=\\\"float:right;width:100%;\\\" (click)=\\\"goToRegisteration()\\\">\\n                    <span  style=\\\"text-decoration:underline;width:100%;float:right;cursor:pointer;font-weight: bold;font-size: 0.9em;color:#127b6e;\\\">New Registration</span>\\n                  </div> -->\\n                </form>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"float: left; border: 0px solid red\\\">\\n                <div\\n                  style=\\\"width: 50%; float: left\\\"\\n                  (click)=\\\"clearResetPasswordParams(); primaryModal.show()\\\"\\n                >\\n                  <span\\n                    style=\\\"\\n                      text-decoration: underline;\\n                      width: 100%;\\n                      cursor: pointer;\\n                      font-weight: bold;\\n                      font-size: 0.9em;\\n                      color: #127b6e;\\n                    \\\"\\n                    >Forgot password ?</span\\n                  >\\n                </div>\\n                <div\\n                  style=\\\"width: 50%; text-align: right\\\"\\n                  (click)=\\\"goToRegisteration()\\\"\\n                >\\n                  <span\\n                    style=\\\"\\n                      text-decoration: underline;\\n                      width: 100%;\\n                      cursor: pointer;\\n                      font-weight: bold;\\n                      font-size: 0.9em;\\n                      color: #127b6e;\\n                    \\\"\\n                    >New Registration</span\\n                  >\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"card p-4\\\">\\n              <div\\n                class=\\\"card text-white py-5\\\"\\n                style=\\\"float: left; width: 100%; background-color: #127b6e\\\"\\n              >\\n                <div class=\\\"card-body text-center\\\">\\n                  <p class=\\\"text-muted\\\">View Report</p>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"\\n                        ><i class=\\\"icon-pencil\\\"></i\\n                      ></span>\\n                    </div>\\n                    <input\\n                      [(ngModel)]=\\\"reportParams.inwardno\\\"\\n                      type=\\\"text\\\"\\n                      name=\\\"inwardno\\\"\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"Inwardno\\\"\\n                      autocomplete=\\\"username\\\"\\n                      required\\n                    />\\n                  </div>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"\\n                        ><i class=\\\"icon-lock\\\"></i\\n                      ></span>\\n                    </div>\\n                    <input\\n                      [(ngModel)]=\\\"reportParams.accesscode\\\"\\n                      type=\\\"text\\\"\\n                      name=\\\"accesscode\\\"\\n                      class=\\\"form-control\\\"\\n                      placeholder=\\\"Access code\\\"\\n                      autocomplete=\\\"username\\\"\\n                      required\\n                    />\\n                  </div>\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-block btn-outline-success\\\">Success</button> -->\\n                  <button\\n                    type=\\\"button\\\"\\n                    (click)=\\\"gotoInwardViewPage()\\\"\\n                    class=\\\"btn btn-block btn-success\\\"\\n                  >\\n                    Get Report\\n                  </button>\\n                  <div\\n                    *ngIf=\\\"spinnerFlag1 == true\\\"\\n                    class=\\\"spinner-border text-info\\\"\\n                    style=\\\"width: 2rem; height: 2rem\\\"\\n                    role=\\\"status\\\"\\n                  >\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                  </div>\\n                  <!-- <button (click)=\\\"doLogin()\\\" type=\\\"button\\\" class=\\\"btn  px-12\\\" style=\\\"background-color: #19a08e;color:white;font-weight:bold;\\\">\\n                        Get Report\\n                        <div *ngIf=\\\"spinnerFlag==true\\\" class=\\\"spinner-border text-info\\\" style=\\\"width: 2rem; height: 2rem;\\\" role=\\\"status\\\">\\n                          <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                    </button>            -->\\n                  <!-- <div>\\n                      <h2>Sign up</h2>\\n                      <p></p>\\n                      <button (click)=\\\"goToRegisteration()\\\" type=\\\"button\\\" class=\\\"btn active mt-3\\\" style=\\\"background-color: #6dd6ca;\\\">Register here</button>                  \\n                    </div> -->\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- <svg id=\\\"clouds\\\" alt=\\\"Gray Clouds Background\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"2611.084\\\" height=\\\"285.677\\\" viewBox=\\\"0 0 2611.084 485.677\\\">\\n          <path id=\\\"Path_39\\\" data-name=\\\"Path 39\\\" d=\\\"M2379.709,863.793c10-93-77-171-168-149-52-114-225-105-264,15-75,3-140,59-152,133-30,2.83-66.725,9.829-93.5,26.25-26.771-16.421-63.5-23.42-93.5-26.25-12-74-77-130-152-133-39-120-212-129-264-15-54.084-13.075-106.753,9.173-138.488,48.9-31.734-39.726-84.4-61.974-138.487-48.9-52-114-225-105-264,15a162.027,162.027,0,0,0-103.147,43.044c-30.633-45.365-87.1-72.091-145.206-58.044-52-114-225-105-264,15-75,3-140,59-152,133-53,5-127,23-130,83-2,42,35,72,70,86,49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33,61.112,8.015,113.854-5.72,150.492-29.764a165.62,165.62,0,0,0,110.861-3.236c47,94,178,113,251,33,31.385,4.116,60.563,2.495,86.487-3.311,25.924,5.806,55.1,7.427,86.488,3.311,73,80,204,61,251-33a165.625,165.625,0,0,0,120,0c51,13,108,15,157-5a147.188,147.188,0,0,0,33.5-18.694,147.217,147.217,0,0,0,33.5,18.694c49,20,106,18,157,5a165.625,165.625,0,0,0,120,0c47,94,178,113,251,33C2446.709,1093.793,2554.709,922.793,2379.709,863.793Z\\\" transform=\\\"translate(142.69 -634.312)\\\" fill=\\\"#eee\\\"/>\\n        </svg> -->\\n    </div>\\n  </main>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div\\n    bsModal\\n    #primaryModal=\\\"bs-modal\\\"\\n    class=\\\"modal fade\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"dialog\\\"\\n    aria-labelledby=\\\"myModalLabel\\\"\\n    aria-hidden=\\\"true\\\"\\n  >\\n    <div class=\\\"modal-dialog modal-success\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\" style=\\\"width: 100%\\\">\\n          <h4 style=\\\"width: 100%; float: left\\\" class=\\\"modal-title\\\">\\n            New payment\\n          </h4>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"close\\\"\\n            (click)=\\\"primaryModal.hide()\\\"\\n            aria-label=\\\"Close\\\"\\n          >\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"popupLoaderState === true\\\" class=\\\"popup_loader\\\"></div>\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"col-sm-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Amount to Pay</label>\\n              <input\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"newPaymentFormData.amountToPay\\\"\\n              />\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Payment Against</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"newPaymentFormData.paymentAgainst\\\"\\n              >\\n                <option value=\\\"\\\">-SELECT-</option>\\n                <option value=\\\"1\\\">Advance</option>\\n                <option value=\\\"2\\\">Bill</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Payment Type</label>\\n              <select\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"newPaymentFormData.paymentType\\\"\\n              >\\n                <option value=\\\"\\\">-SELECT-</option>\\n                <option\\n                  *ngFor=\\\"let paymenttype of paymentTypeList; index as a\\\"\\n                  value=\\\"{{ paymentTypeList[a].id }}\\\"\\n                >\\n                  {{ paymentTypeList[a].type }}\\n                </option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-sm-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">Comments</label>\\n              <textarea\\n                class=\\\"form-control\\\"\\n                [(ngModel)]=\\\"newPaymentFormData.paymentComments\\\"\\n              >\\n              </textarea>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-secondary\\\"\\n            (click)=\\\"primaryModal.hide()\\\"\\n          >\\n            Cancel\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-success\\\"\\n            (click)=\\\"\\n              paymentOptionOpen(\\n                paymentType,\\n                newPaymentFormData.amountToPay,\\n                newPaymentFormData.paymentAgainst,\\n                newPaymentFormData.paymentType\\n              )\\n            \\\"\\n          >\\n            Proceed\\n          </button>\\n        </div>\\n      </div>\\n      <!-- /.modal-content -->\\n    </div>\\n    <!-- /.modal-dialog -->\\n  </div>\\n  <!-- /.modal -->\\n  <ng-template #paymentType class=\\\"modal\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Select payment Type</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row px-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"totalAmount\\\">Total Amount: </label>\\n            <span style=\\\"font-weight: bold\\\">&nbsp;{{ Amount }}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"1\\\"\\n              id=\\\"rdoCCcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoCCcard\\\">\\n              Credit Card\\n            </label>\\n            <div *ngIf=\\\"bankCharges.credit_card !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.credit_card }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"2\\\"\\n              id=\\\"rdoDRcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDRcard\\\">\\n              Debit Rupay\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_rupay !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_rupay }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"3\\\"\\n              id=\\\"rdoDLTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDLTcard\\\">\\n              Debit lt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_lt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_lt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"4\\\"\\n              id=\\\"rdoDGTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDGTcard\\\">\\n              Debit gt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_gt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_gt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"5\\\"\\n              id=\\\"rdoUPI\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoUPI\\\"> UPI </label>\\n            <div *ngIf=\\\"bankCharges.upi !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.upi }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"6\\\"\\n              id=\\\"rdoNetBanking\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoNetBanking\\\">\\n              NetBanking\\n            </label>\\n            <div *ngIf=\\\"bankCharges.nb !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.nb }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"paymentTypeSelection(Amount, quatatioNO)\\\"\\n        >\\n          Proceed To Pay\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\">\\n    <!-- <div class=\\\"col-xs-3\\\">\\n        <input\\n          type=\\\"text\\\"\\n          placeholder=\\\"Choose date\\\"\\n          class=\\\"form-control\\\"\\n          bsDatepicker\\n          bsDaterangepicker\\n          [bsConfig]=\\\"{ isAnimated: true }\\\">\\n      </div> -->\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"font-weight: bold\\\">\\n          My Payment History\\n          <div\\n            *ngIf=\\\"loaderFlag == true\\\"\\n            class=\\\"spinner-border text-primary\\\"\\n            role=\\\"status\\\"\\n          >\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n          </div>\\n          <div style=\\\"float: right\\\">\\n            <button\\n              (click)=\\\"primaryModal.show()\\\"\\n              type=\\\"button\\\"\\n              style=\\\"font-size: 1.2em\\\"\\n              class=\\\"btn btn-sm btn-success\\\"\\n            >\\n              <i class=\\\"fa fa-plus\\\"></i> New Payment\\n            </button>\\n          </div>\\n          <!-- <form   (ngSubmit)=\\\"consoleLogUploadFiles()\\\">\\n              <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-3 col-form-label\\\" for=\\\"file-input\\\">File input</label>\\n                <div class=\\\"col-md-9\\\">\\n                   <input type=\\\"file\\\" id=\\\"file-input\\\"  name=\\\"file-input\\\" (change)=\\\"handleFileInput($event.target.files)\\\" > \\n                  <input type=\\\"file\\\" id=\\\"file-input\\\"  name=\\\"file-input\\\" (change)=\\\"handleFileInput($event)\\\" >\\n                   \\n                </div>\\n                <button (click)=\\\"consoleLogUploadFiles()\\\" type=\\\"button\\\" style=\\\"font-size:1.2em;\\\"  class=\\\"btn btn-sm btn-primary\\\">               \\n                  <i class=\\\"fa fa-dot-circle-o\\\"></i> Check\\n                </button>\\n              </div>\\n            </form> -->\\n          <!-- <div style=\\\"float:right;\\\">\\n              <button (click)=\\\"checkPaymentStatus()\\\" type=\\\"button\\\" style=\\\"font-size:1.2em;\\\"  class=\\\"btn btn-sm btn-primary\\\">               \\n                <i class=\\\"fa fa-dot-circle-o\\\"></i> Pay Now\\n              </button>\\n            </div> -->\\n          <!-- <div style=\\\"float:right;\\\">\\n              <button (click)=\\\"payWithRazor()\\\" type=\\\"button\\\" style=\\\"font-size:1.2em;\\\"  class=\\\"btn btn-sm btn-success\\\">               \\n                <i class=\\\"fa fa-dot-circle-o\\\"></i> Pay with Razorpay\\n              </button>\\n              \\n            </div> -->\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div *ngIf=\\\"searchText == ''\\\" style=\\\"width: 10%; float: left\\\">\\n            <select\\n              (change)=\\\"changeDisplayCount()\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"apiParams.tablerowlimit\\\"\\n            >\\n              <option value=\\\"10\\\">10</option>\\n              <option value=\\\"25\\\">25</option>\\n              <option value=\\\"50\\\">50</option>\\n              <option value=\\\"100\\\">100</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 30%\\\">\\n            <input\\n              (keyup)=\\\"getData()\\\"\\n              [(ngModel)]=\\\"searchText\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"exampleFormControlInput1\\\"\\n              placeholder=\\\"Search Order Id / Bank Reference no\\\"\\n            />\\n          </div>\\n          <br />\\n          <nav\\n            style=\\\"width: 100%; float: left\\\"\\n            *ngIf=\\\"searchText == ''\\\"\\n            aria-label=\\\"Page navigation example\\\"\\n          >\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n          <div *ngIf=\\\"spinnerFlag === true\\\" class=\\\"spinner\\\"></div>\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th style=\\\"width: 5%\\\">S.No</th>\\n                <th style=\\\"width: 15%\\\">Transaction Date</th>\\n                <th style=\\\"width: 20%\\\">Order Id</th>\\n                <th style=\\\"width: 20%\\\">Bank Reference no</th>\\n                <th style=\\\"width: 10%\\\">Transaction amount</th>\\n                <th style=\\\"width: 10%\\\">Status</th>\\n                <th style=\\\"width: 15%\\\">Payment Mode</th>\\n                <th style=\\\"width: 5%\\\" colspan=\\\"3\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let payment of myPayments; index as j\\\">\\n                <td>\\n                  <div>{{ j + 1 }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ payment.transactiondate }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ payment.orderid }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ payment.bankrefno }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ payment.amount }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ payment.status }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ payment.paymentmode }}</div>\\n                </td>\\n                <td>\\n                  <div style=\\\"float: left\\\">\\n                    <i\\n                      class=\\\"icon-cloud-download\\\"\\n                      style=\\\"font-size: 1.3em; cursor: pointer\\\"\\n                      title=\\\"Download Receipt\\\"\\n                      (click)=\\\"\\n                        downloadPaymentTranscation(payment.id, payment.tid)\\n                      \\\"\\n                    ></i>\\n                  </div>\\n                </td>\\n                <td>\\n                  <div\\n                    *ngIf=\\\"\\n                      payment.status === 'Success' && payment.order_type === '1'\\n                    \\\"\\n                    style=\\\"float: left\\\"\\n                  >\\n                    <i\\n                      class=\\\"icon-layers\\\"\\n                      style=\\\"color: green; font-size: 1.3em; cursor: pointer\\\"\\n                      (click)=\\\"downloadCountDetails(payment.id, payment.tid)\\\"\\n                      title=\\\"Download Convertion Factors\\\"\\n                    ></i>\\n                  </div>\\n                </td>\\n                <td>\\n                  <div\\n                    *ngIf=\\\"\\n                      payment.status === 'Success' && payment.order_type === '1'\\n                    \\\"\\n                    style=\\\"float: left\\\"\\n                  >\\n                    <i\\n                      class=\\\"icon-layers\\\"\\n                      style=\\\"color: green; font-size: 1.3em; cursor: pointer\\\"\\n                      (click)=\\\"downloadInvoice(payment.id, payment.tid)\\\"\\n                      title=\\\"Download Invoice\\\"\\n                    ></i>\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr />\\n          <nav *ngIf=\\\"searchText == ''\\\" aria-label=\\\"Page navigation example\\\">\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <ng-template #AddPackages class=\\\"modal modal-xl\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">New Request</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"packagename\\\">Package Rate</label>\\n              <p>{{ packageRate }}</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"packagename\\\">Package Name</label>\\n              <select\\n                name=\\\"packagename\\\"\\n                [(ngModel)]=\\\"packid\\\"\\n                id=\\\"packagename\\\"\\n                class=\\\"form-control\\\"\\n                (change)=\\\"getPrice(packid)\\\"\\n              >\\n                <option value=\\\"\\\">--select--</option>\\n                <option *ngFor=\\\"let pm of packageMaster\\\" [value]=\\\"pm.PackId\\\">\\n                  {{ pm.PackageName }}\\n                </option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"noOfSamples\\\">No. of Sample</label>\\n\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\" (click)=\\\"decreseSample()\\\">\\n                  <span class=\\\"input-group-text bg-danger\\\">-</span>\\n                </div>\\n                <input\\n                  type=\\\"text\\\"\\n                  style=\\\"text-align: center\\\"\\n                  class=\\\"form-control bg-white\\\"\\n                  disabled\\n                  [(ngModel)]=\\\"noOfSamples\\\"\\n                  aria-label=\\\"Amount (to the nearest dollar)\\\"\\n                />\\n                <div class=\\\"input-group-append\\\" (click)=\\\"increseSamples()\\\">\\n                  <span class=\\\"input-group-text bg-success\\\">+</span>\\n                </div>\\n              </div>\\n\\n              <!-- <input type=\\\"text\\\" maxlength=\\\"2\\\" pattern=\\\"[0-9]\\\"  class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"noofsamples\\\" (ngModelChange)=\\\"sampleChange($event)\\\" id=\\\"noOfSamples\\\"> -->\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"samplename\\\">Sample Name</label>\\n            <select\\n              name=\\\"samplename\\\"\\n              [(ngModel)]=\\\"sampleid\\\"\\n              id=\\\"samplename\\\"\\n              class=\\\"form-control\\\"\\n            >\\n              <option value=\\\"\\\">--select--</option>\\n              <option *ngFor=\\\"let s of samples\\\" [value]=\\\"s.sampleid\\\">\\n                {{ s.samplename }}\\n              </option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngFor=\\\"let sdc of sampleDescCreate; let i = index\\\">\\n          <div class=\\\"col-md\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"sampledesc\\\">Sample {{ i + 1 }} Description</label>\\n              <textarea\\n                class=\\\"form-control\\\"\\n                name=\\\"description\\\"\\n                [(ngModel)]=\\\"sdc.sampledesc\\\"\\n                id=\\\"sampleDesc\\\"\\n                cols=\\\"30\\\"\\n                rows=\\\"3\\\"\\n              ></textarea>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"insertPackage()\\\">\\n          Submit\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-template #SampleDescription class=\\\"modal modal-xl\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Update Sample Description</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <table class=\\\"table table-bordered mx-2\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Sample No.</th>\\n                <!-- <th scope=\\\"col\\\">Sample Type</th> -->\\n                <th scope=\\\"col\\\">Count</th>\\n                <th scope=\\\"col\\\">Description</th>\\n                <th scope=\\\"col\\\">Remarks</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let usd of UpdateSampleDesc\\\">\\n                <th scope=\\\"row\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    [value]=\\\"usd.sampleno\\\"\\n                    readonly\\n                    class=\\\"form-control bg-white\\\"\\n                    style=\\\"\\n                      outline: none;\\n                      border: none;\\n                      font-weight: bold;\\n                      color: black;\\n                    \\\"\\n                  />\\n                  <!-- {{sd.sampleno}} -->\\n                </th>\\n                <!-- <td>\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"usd.sampleid\\\">\\n                    <option value=\\\"\\\">-SELECT-</option>\\n                    <option *ngFor=\\\"let std of sampleTypeData\\\" [value]=\\\"std.sampleid\\\">{{std.samplename}}</option>\\n                  </select>\\n                </td> -->\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.countcode\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.description\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.remarks\\\"\\n                  />\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"Updatesampledescription()\\\"\\n        >\\n          Confirm\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-template #packageDetailsList class=\\\"modal modal-xl\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Package Details</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md\\\">\\n            <table\\n              style=\\\"width: 100%\\\"\\n              class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n            >\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"width: 15%\\\">Pack Id</th>\\n                  <th style=\\\"width: 20%\\\">Test Name</th>\\n                  <th style=\\\"width: 20%\\\">Lab Name</th>\\n                  <th style=\\\"width: 15%\\\">Standard</th>\\n                  <th style=\\\"width: 15%\\\">Material Quantity</th>\\n                  <th style=\\\"width: 15%\\\">Rate</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let pd of packageDetails\\\">\\n                  <td>{{ pd.PackId }}</td>\\n                  <td>{{ pd.testname }}</td>\\n                  <td>{{ pd.labname }}</td>\\n                  <td>{{ pd.standard }}</td>\\n                  <td>{{ pd.material_qty }}</td>\\n                  <td>{{ pd.rate }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-template #paymentType class=\\\"modal\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Select payment Type</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row px-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"totalAmount\\\">Total Amount: </label>\\n            <span style=\\\"font-weight: bold\\\">&nbsp;{{ Amount }}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"1\\\"\\n              id=\\\"rdoCCcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoCCcard\\\">\\n              Credit Card\\n            </label>\\n            <div *ngIf=\\\"bankCharges.credit_card !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.credit_card }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"2\\\"\\n              id=\\\"rdoDRcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDRcard\\\">\\n              Debit Rupay\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_rupay !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_rupay }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"3\\\"\\n              id=\\\"rdoDLTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDLTcard\\\">\\n              Debit lt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_lt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_lt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"4\\\"\\n              id=\\\"rdoDGTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDGTcard\\\">\\n              Debit gt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_gt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_gt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"5\\\"\\n              id=\\\"rdoUPI\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoUPI\\\"> UPI </label>\\n            <div *ngIf=\\\"bankCharges.upi !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.upi }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"6\\\"\\n              id=\\\"rdoNetBanking\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoNetBanking\\\">\\n              NetBanking\\n            </label>\\n            <div *ngIf=\\\"bankCharges.nb !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.nb }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"paymentTypeSelection(Amount, requestNo)\\\"\\n        >\\n          Proceed To Pay\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\"></div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md\\\">\\n              <h4>Package Testing Request</h4>\\n            </div>\\n            <div class=\\\"col-md\\\">\\n              <div class=\\\"float-right\\\">\\n                <button\\n                  class=\\\"btn btn-success\\\"\\n                  (click)=\\\"AddNewPackages(AddPackages)\\\"\\n                >\\n                  New Request\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row d-flex justify-content-end\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"frequent-test-search\\\"\\n                  placeholder=\\\"Search...\\\"\\n                  [(ngModel)]=\\\"searchText\\\"\\n                />\\n                <div class=\\\"input-group-prepend\\\">\\n                  <button\\n                    class=\\\"btn btn-primary rounded-right\\\"\\n                    (click)=\\\"getPackageList()\\\"\\n                  >\\n                    <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <br />\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\" style=\\\"text-align: center\\\">\\n              <tr>\\n                <th style=\\\"width: 10%\\\">RNo</th>\\n                <th style=\\\"width: 15%\\\">Date</th>\\n                <th style=\\\"width: 20%\\\">Package Name</th>\\n                <th style=\\\"width: 20%\\\">Material</th>\\n\\n                <th style=\\\"width: 10%\\\">No. of Sample</th>\\n                <th style=\\\"width: 10%\\\">Total Amount</th>\\n                <th style=\\\"width: 10%\\\">Package Details</th>\\n\\n                <th style=\\\"width: 15%\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let pl of PaginatedList\\\" style=\\\"text-align: center\\\">\\n                <td>{{ pl.RNO }}</td>\\n                <td>{{ this.datepipe.transform(pl.RDate, \\\"yyyy-MM-dd\\\") }}</td>\\n                <td>{{ pl.PackageName }}</td>\\n                <td>{{ pl.material }}</td>\\n\\n                <td>{{ pl.noofsamples }}</td>\\n                <td>\\n                  {{ pl.netamt }}\\n                </td>\\n                <td>\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-info text-white\\\"\\n                    tooltip=\\\"Package details\\\"\\n                    (click)=\\\"getPackageDetails(packageDetailsList, pl.PackId)\\\"\\n                  >\\n                    <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </td>\\n\\n                <td style=\\\"margin: 0 auto\\\">\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" tooltip=\\\"Pay Now\\\"\\n                    (click)=\\\"packageTestPayNow(pl.netamt)\\\"> -->\\n                  <button\\n                    *ngIf=\\\"pl.RequestGenerated == 'N'\\\"\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-primary\\\"\\n                    tooltip=\\\"Delete Request\\\"\\n                    (click)=\\\"deletepackage(pl.reqid)\\\"\\n                  >\\n                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></button\\n                  >&nbsp; &nbsp;\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-primary\\\"\\n                    tooltip=\\\"Pay Now\\\"\\n                    (click)=\\\"openPaymentOption(paymentType, pl.netamt, pl.RNO)\\\"\\n                  >\\n                    <i class=\\\"fa fa-credit-card\\\" aria-hidden=\\\"true\\\"></i></button\\n                  >&nbsp;\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-warning\\\"\\n                    tooltip=\\\"Generate Testing Request\\\"\\n                    [disabled]=\\\"pl.RequestGenerated === 'Y'\\\"\\n                    (click)=\\\"genrateRequest(pl.RNO)\\\"\\n                  >\\n                    <i class=\\\"fa fa-file-text-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" tooltip=\\\"Update Sample Description\\\"\\n                  (click)=\\\"getSampleData(SampleDescription, pl.RNO, pl.labid)\\\" >\\n                    <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button> -->\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr />\\n          <div class=\\\"row d-flex justify-content-between\\\">\\n            <div class=\\\"col-md-1\\\">\\n              <select\\n                class=\\\"form-control\\\"\\n                name=\\\"itemperpage\\\"\\n                id=\\\"itemperpage\\\"\\n                [(ngModel)]=\\\"packageTestitemperpage\\\"\\n                (ngModelChange)=\\\"itemChange()\\\"\\n              >\\n                <option value=\\\"5\\\">5</option>\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"20\\\">20</option>\\n                <option value=\\\"50\\\">50</option>\\n              </select>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n              <pagination\\n                style=\\\"float: right\\\"\\n                [itemsPerPage]=\\\"itemperpage\\\"\\n                [totalItems]=\\\"packageList.length\\\"\\n                (pageChanged)=\\\"PackageTestPageChanged($event)\\\"\\n              ></pagination>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/ End Table-->\\n</div>\\n\";","export default \"<h1>This is Child one page</h1>\\r\\n<app-parentcomp></app-parentcomp>\\r\\n\";","export default \"<p>parentcomp works!</p>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\" >       \\n      <div class=\\\"col-sm-6 col-md-8\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            Payment Transcation Details are\\n            <div class=\\\"card-header-actions\\\">\\n              <span *ngIf=\\\"paymentResponseData.res_order_status === 'Success'\\\" style=\\\"font-size:1.5em;\\\" class=\\\"badge badge-success\\\">Success</span>\\n              <span *ngIf=\\\"paymentResponseData.res_order_status === 'Failure'\\\" style=\\\"font-size:1.5em;\\\" class=\\\"badge badge-danger\\\">Failure</span>\\n              <span *ngIf=\\\"paymentResponseData.res_order_status === 'Aborted'\\\" style=\\\"font-size:1.5em;\\\" class=\\\"badge badge-warning\\\">Aborted</span>\\n              <span *ngIf=\\\"paymentResponseData.res_order_status === ''\\\" style=\\\"font-size:1.5em;\\\" class=\\\"badge badge-info\\\">-NA-</span>\\n            </div>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"col-sm-6 col-md-4\\\" style=\\\"text-align:right;float:left;border:0px solid red;padding:10px;font-weight:bold;\\\">\\n                <span style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">Sitra Order No</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">Transaction No</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">PG Order Id</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">Payment Status</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">Amount</span>\\n                <!-- <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">Payment Mode</span> -->\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">Transacation Initiate Time</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">Transacation Completed Time</span>\\n            </div>\\n            <div class=\\\"col-sm-6 col-md-6\\\" style=\\\"float:left;border:0px solid red;padding:10px;\\\">\\n                <span style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentResponseData.order_id}}</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentResponseData.tid }}</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentresponseId }}</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentResponseData.res_order_status }}</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentResponseData.amount }}</span>\\n                <!-- <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentResponseData.res_payment_mode }}</span> -->\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentResponseData.created_date }}</span>\\n                <span  style=\\\"padding-bottom:10px;width:100%;float:left;border:0px solid red;\\\">: {{ paymentResponseData.modified_date }}</span>\\n            </div>\\n            \\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <div class=\\\"col-sm-6 col-md-12\\\" style=\\\"float:right;\\\">\\n                <div class=\\\"col-6 col-sm-4 col-md mb-3 mb-xl-0 text-center\\\">\\n                    <button  type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click) = \\\"downloadPaymentReceiptDetails()\\\"><i class=\\\"fa fa-lightbulb-o\\\"></i>&nbsp;Download Receipt</button>\\n                    <button *ngIf=\\\" paymentResponseData.order_type === 1 && paymentResponseData.res_order_status === 'Success'\\\" (click) = \\\"downloadCountDetails()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-lightbulb-o\\\"></i>&nbsp;Download Count</button>\\n                    <div *ngIf=\\\"spinnerFlag==true\\\" class=\\\"spinner-border text-info\\\" style=\\\"width: 2rem; height: 2rem;\\\" role=\\\"status\\\">\\n                      <span class=\\\"sr-only\\\">Loading...</span>\\n                    </div>\\n                </div>\\n                \\n            </div>\\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n    </div><!--/.row-->\\n  </div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <label for=\\\"name\\\">Profile</label>            \\n          </div>\\n          <div class=\\\"card-body\\\" >\\n            <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"name\\\">Registration Type</label>\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"loggedUserData.regtype\\\"  disabled>\\n                            <option value=\\\"\\\">-SELECT-</option>\\n                            <option value=\\\"1\\\">Registered Mill</option>\\n                            <option value=\\\"2\\\">Organization</option>\\n                            <option value=\\\"3\\\">Individual</option>\\n                            <option value=\\\"4\\\">Other</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Mill / Organization name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"loggedUserData.mill_organization_name\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Contact Person Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.contact_person_name\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Contact No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.contact_person_mobileno\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Alternative No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.alternative_contactnos\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Email</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.email\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Address1</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.address1\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Address2</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.address2\\\"  disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">City</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.city\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">State</label>\\n                    <select class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.state\\\"  disabled>\\n                        <option value=\\\"\\\">-SELECT-</option>\\n                        <option *ngFor=\\\"let state of stateNameLists; index as k;\\\" value={{stateNameLists[k].statename}}>\\n                            {{state.statename}}\\n                          </option>\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">Pincode</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.pincode\\\"   disabled  >\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">GST Registration ?</label>\\n                    <select class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.gstregtype\\\"  disabled>\\n                        <option value=\\\"\\\">-SELECT-</option>\\n                        <option  value=\\\"Y\\\">Registered</option>\\n                        <option   value=\\\"N\\\">Un-Registered</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\">GST No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"loggedUserData.gstno\\\"   disabled  >\\n                </div>\\n                </div><!--/.row-->\\n            </div><!--End Left panel-->\\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <label for=\\\"name\\\">Password Change</label>            \\n          </div>\\n          <div class=\\\"card-body\\\" >\\n            <div class=\\\"col-sm-12\\\"  style=\\\"float:left;\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"form-group col-sm-12\\\">\\n                        <label for=\\\"ccmonth\\\"><span style=\\\"color:red;\\\">*</span>Current Password</label>\\n                        <input type=\\\"password\\\" [(ngModel)] = \\\"passwordchange.currentpassword\\\" class=\\\"form-control\\\" >\\n                    </div>\\n                    <div class=\\\"form-group col-sm-12\\\">\\n                        <label for=\\\"ccmonth\\\"><span style=\\\"color:red;\\\">*</span>New Password</label>\\n                        <input type=\\\"password\\\" [(ngModel)] = \\\"passwordchange.newpassword\\\" class=\\\"form-control\\\"    >\\n                    </div>\\n                    <div class=\\\"form-group col-sm-12\\\">\\n                        <label for=\\\"ccmonth\\\"><span style=\\\"color:red;\\\">*</span>Confirm New Password</label>\\n                        <input type=\\\"password\\\" [(ngModel)] = \\\"passwordchange.confirmpassword\\\" class=\\\"form-control\\\"   >\\n                    </div>\\n                    <div class=\\\"form-group col-sm-12\\\">\\n                        <span style=\\\"font-size:12px;color:#a5a5a5;\\\">{{ passwordchangeMsg }}</span>\\n                    </div>\\n                    <div class=\\\"form-group col-sm-12\\\">\\n                        <div *ngIf=\\\"spinnerFlag === true\\\" class=\\\"spinner\\\"></div>\\n                        <div style=\\\"margin-top:30px;\\\">\\n                            <button type=\\\"button\\\" style=\\\"font-size:1em;\\\" (click)=\\\"doPasswordUpdate()\\\"  class=\\\"btn btn-sm btn-primary\\\">               \\n                                <i class=\\\"fa fa-dot-circle-o\\\"></i> Update\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n    </div><!--/.row-->\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <ng-template #SampleDescription class=\\\"modal modal-xl\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Update Sample Description</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <table class=\\\"table table-bordered mx-2\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\" style=\\\"width: 15%\\\">Sample No.</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sample Type</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 15%\\\">Count</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Description</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Remarks</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let usd of UpdateSampleDesc\\\">\\n                <th scope=\\\"row\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    [value]=\\\"usd.sampleno\\\"\\n                    readonly\\n                    class=\\\"form-control bg-white\\\"\\n                    style=\\\"\\n                      outline: none;\\n                      border: none;\\n                      font-weight: bold;\\n                      color: black;\\n                    \\\"\\n                  />\\n                  <!-- {{sd.sampleno}} -->\\n                </th>\\n                <td>\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"usd.sampleid\\\">\\n                    <option value=\\\"0\\\">-SELECT-</option>\\n                    <option\\n                      *ngFor=\\\"let std of sampleTypeData\\\"\\n                      [value]=\\\"std.sampleid\\\"\\n                    >\\n                      {{ std.samplename }}\\n                    </option>\\n                  </select>\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.countcode\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.description\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.remarks\\\"\\n                  />\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <!-- <div class=\\\"row\\\" *ngFor=\\\"let sd of sampleData\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Sample No.</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\">\\n                <font color=\\\"red\\\">*</font>Sample Type\\n              </label>\\n              <select class=\\\"form-control\\\">\\n                <option value=\\\"\\\">-SELECT-</option>\\n                <option value=\\\"\\\">1</option>\\n                <option value=\\\"\\\">2</option>\\n                <option value=\\\"\\\">3</option>\\n\\n              </select>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"ccmonth\\\">Count</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"ccmonth\\\">\\n                <font color=\\\"red\\\">*</font>Description\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"ccmonth\\\">Remarks</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n        </div> -->\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"Updatesampledescription()\\\"\\n        >\\n          Confirm\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n\\n  <ng-template #paymentType class=\\\"modal\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Select payment Type</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row px-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"totalAmount\\\">Total Amount: </label>\\n            <span style=\\\"font-weight: bold\\\">&nbsp;{{ Amount }}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"1\\\"\\n              id=\\\"rdoCCcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoCCcard\\\">\\n              Credit Card\\n            </label>\\n            <div *ngIf=\\\"bankCharges.credit_card !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.credit_card }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"2\\\"\\n              id=\\\"rdoDRcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDRcard\\\">\\n              Debit Rupay\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_rupay !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_rupay }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"3\\\"\\n              id=\\\"rdoDLTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDLTcard\\\">\\n              Debit lt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_lt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_lt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"4\\\"\\n              id=\\\"rdoDGTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDGTcard\\\">\\n              Debit gt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_gt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_gt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"5\\\"\\n              id=\\\"rdoUPI\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoUPI\\\"> UPI </label>\\n            <div *ngIf=\\\"bankCharges.upi !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.upi }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"6\\\"\\n              id=\\\"rdoNetBanking\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoNetBanking\\\">\\n              NetBanking\\n            </label>\\n            <div *ngIf=\\\"bankCharges.nb !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.nb }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"paymentTypeSelection(Amount, quatatioNO)\\\"\\n        >\\n          Proceed To Pay\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-template #testname class=\\\"modal\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Your Quotation tests</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div>\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\">\\n              <th>Test Name</th>\\n              <th>Test Qty</th>\\n              <th>Test Rate</th>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let t of ProformaTestName\\\">\\n                <td>\\n                  <span [innerHTML]=\\\"t.testname\\\"></span>\\n                </td>\\n                <td>\\n                  {{ t.qty }}\\n                </td>\\n                <td>\\n                  {{ t.rate }}\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">Proforma List</div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row d-flex justify-content-end\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"input-group\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"proformaSearchText\\\"\\n                  id=\\\"frequent-test-search\\\"\\n                  placeholder=\\\"Search...\\\"\\n                />\\n                <div class=\\\"input-group-prepend\\\">\\n                  <button\\n                    (click)=\\\"getProformaList()\\\"\\n                    class=\\\"btn btn-primary rounded-right\\\"\\n                  >\\n                    <i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <br />\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th style=\\\"width: 10%\\\">Quotation No.</th>\\n                <th style=\\\"width: 10%\\\">Request Number</th>\\n\\n                <th style=\\\"width: 15%\\\">Date</th>\\n                <th style=\\\"width: 15%\\\">Lab Name</th>\\n                <th style=\\\"width: 20%\\\">Sample Description</th>\\n                <th style=\\\"width: 10%\\\">Test Name</th>\\n                <th style=\\\"width: 10%\\\">Net Amount</th>\\n                <th style=\\\"width: 10%\\\">Payment Status</th>\\n\\n                <th style=\\\"width: 20%\\\">\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                    tooltip=\\\"Pay Now\\\">\\n                    <i class=\\\"fa fa-credit-card\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-warning\\\"\\n                    tooltip=\\\"Genrate Request\\\">\\n                    <i class=\\\"fa fa-file-text-o\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"\\n                    tooltip=\\\"Update Sample Description\\\">\\n                   <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\n                    </button> -->\\n                  Action\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let pl of PaginatedList\\\">\\n                <td>{{ pl.quotationno }}</td>\\n\\n                <td>{{ pl.reqno }}</td>\\n\\n                <td>{{ this.datapipe.transform(pl.date, \\\"dd/MM/yyyy\\\") }}</td>\\n                <td>{{ pl.lab_name }}</td>\\n                <td>{{ pl.sampdesc }}</td>\\n                <td>\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-warning\\\"\\n                    tooltip=\\\"Test Details\\\"\\n                    (click)=\\\"testnameOpen(testname, pl.quotationno)\\\"\\n                  >\\n                    <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </td>\\n                <td>{{ pl.netamt }}</td>\\n                <td>\\n                  {{\\n                    pl.paymentstatus == \\\"captured\\\"\\n                      ? \\\"Sucess\\\"\\n                      : \\\"Not yet done Payment or Failure \\\"\\n                  }}\\n                </td>\\n\\n                <td>\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" tooltip=\\\"Pay Now\\\" (click)=\\\"proformaPayNow(pl.netamt)\\\"> -->\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-primary\\\"\\n                    tooltip=\\\"Pay Now\\\"\\n                    [disabled]=\\\"pl.paymentstatus === 'captured'\\\"\\n                    (click)=\\\"\\n                      paymentOptionOpen(paymentType, pl.netamt, pl.quotationno)\\n                    \\\"\\n                  >\\n                    <i class=\\\"fa fa-credit-card\\\" aria-hidden=\\\"true\\\"></i></button\\n                  >&nbsp;\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-warning\\\"\\n                    tooltip=\\\"Generate Testing Request\\\"\\n                    [disabled]=\\\"pl.RequestGenerated === 'Y'\\\"\\n                    (click)=\\\"genrateRequest(pl.quotationno)\\\"\\n                  >\\n                    <i class=\\\"fa fa-file-text-o\\\" aria-hidden=\\\"true\\\"></i></button\\n                  >&nbsp;\\n                  <!-- <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-danger\\\"\\n                    tooltip=\\\"Update Sample Description\\\"\\n                    (click)=\\\"\\n                      getSampleData(SampleDescription, pl.quotationno, pl.labid)\\n                    \\\"\\n                  >\\n                    <i class=\\\"fa fa-pencil-square\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button> -->\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr />\\n          <div class=\\\"row d-flex justify-content-between\\\">\\n            <div class=\\\"col-md-1\\\">\\n              <select\\n                class=\\\"form-control\\\"\\n                name=\\\"\\\"\\n                id=\\\"\\\"\\n                [(ngModel)]=\\\"proformaitemperpage\\\"\\n                (ngModelChange)=\\\"itemChange()\\\"\\n              >\\n                <option value=\\\"5\\\">5</option>\\n                <option value=\\\"10\\\">10</option>\\n                <option value=\\\"20\\\">20</option>\\n                <option value=\\\"50\\\">50</option>\\n              </select>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n              <pagination\\n                style=\\\"float: right\\\"\\n                [itemsPerPage]=\\\"itemperpage\\\"\\n                [totalItems]=\\\"ProformaList.length\\\"\\n                (pageChanged)=\\\"ProformaPageChanged($event)\\\"\\n              ></pagination>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/ End Table-->\\n</div>\\n\";","export default \"<p>publications works!</p>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <ng-template #Checkoutpage class=\\\"modal\\\">\\r\\n    <div class=\\\"model-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <div class=\\\"modal-title\\\">\\r\\n          <h3>Check Out</h3>\\r\\n        </div>\\r\\n        <button style=\\\"outline: none; border: none;\\\" type=\\\"button\\\" class=\\\"close pull-right\\\"\\r\\n          aria-label=\\\"Close\\\" (click)=\\\"modalref.hide()\\\">\\r\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n\\r\\n\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h3>Deliver To</h3>\\r\\n            <hr>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <label for=\\\"CustName\\\">Full Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Name\\\" id=\\\"CustName\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <label for=\\\"phoneNo\\\">Phone No.</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"phoneNumber\\\" id=\\\"phoneNo\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"pincode\\\">PIN code</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"6\\\" [(ngModel)]=\\\"PINcode\\\" id=\\\"pincode\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mt-1\\\">\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"custAddress\\\">Address</label>\\r\\n                  <textarea class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"Address\\\" id=\\\"custAddress\\\" cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h3>Select Quantity</h3>\\r\\n            <hr>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                  <thead style=\\\"text-align: center;\\\">\\r\\n                    <tr>\\r\\n                      <td style=\\\"width: 10%;\\\">Item Code</td>\\r\\n                      <td style=\\\"width: 25%;\\\">Publication Name</td>\\r\\n                      <td style=\\\"width: 20%;\\\" *ngIf=\\\"!IsMember\\\">Rate</td>\\r\\n                      <td style=\\\"width: 20%;\\\" *ngIf=\\\"IsMember\\\">Rate</td>\\r\\n                      <td style=\\\"width: 10%;\\\">quantity</td>\\r\\n                      <td style=\\\"width: 20%;\\\" *ngIf=\\\"!IsMember\\\">total</td>\\r\\n                      <td style=\\\"width: 20%;\\\" *ngIf=\\\"IsMember\\\">total</td>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody style=\\\"text-align: center;\\\">\\r\\n                    <tr *ngFor=\\\"let ps of publicationFocusSelected\\\">\\r\\n                      <td>{{ps.itemcode}}</td>\\r\\n                      <td>{{ps.title}}</td>\\r\\n                      <td *ngIf=\\\"!IsMember\\\">{{ps.nmamount}}</td>\\r\\n                      <td *ngIf=\\\"IsMember\\\">{{ps.mamount}}</td>\\r\\n                      <td><input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"0\\\" width=\\\"50%\\\" [(ngModel)]=\\\"ps.quantity\\\"></td>\\r\\n                      <td *ngIf=\\\"!IsMember\\\">{{ps.nmamount * ps.quantity}}</td>\\r\\n                      <td *ngIf=\\\"IsMember\\\">{{ps.mamount * ps.quantity}}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <span class=\\\"text-danger mr-auto\\\">* Courier charges will be added to the above value</span>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modalref.hide()\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"paymentOptionOpen(paymentType)\\\">Proceed To Pay</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #paymentType class=\\\"modal\\\">\\r\\n    <div class=\\\"model-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title pull-left\\\">Select payment Type</h4>\\r\\n        <button style=\\\"outline: none; border: none;\\\" type=\\\"button\\\" class=\\\"close pull-right text-white\\\"\\r\\n          aria-label=\\\"Close\\\" (click)=\\\"modalref.hide()\\\">\\r\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Net Amount: </label>\\r\\n            <span style=\\\"font-weight: bold;\\\">&nbsp;{{totalvalue}}</span>\\r\\n          </div>          \\r\\n        </div>\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\"> Total Weight: </label>\\r\\n            <span style=\\\"font-weight: bold;\\\">&nbsp;{{curierWeight}}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\"> PIN code: </label>\\r\\n            <span style=\\\"font-weight: bold;\\\">&nbsp;{{curierPincode}}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\"> Courier Charges: </label>\\r\\n            <span style=\\\"font-weight: bold;\\\">&nbsp;{{curierCharges +' Rs.'+'( total weight in kg: '+curierWeight+'; pincode: '+curierPincode}}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"paymentMode\\\" [value]=\\\"1\\\" id=\\\"rdoCCcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoCCcard\\\">\\r\\n              Credit Card\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.credit_card !== '0'\\\"><small class=\\\"text-danger\\\">({{bankCharges.credit_card}}% of tax\\r\\n                will be charaged on total amount)</small></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"paymentMode\\\" [value]=\\\"2\\\" id=\\\"rdoDRcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDRcard\\\">\\r\\n              Debit Rupay\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.debit_rupay !== '0'\\\"><small class=\\\"text-danger\\\">({{bankCharges.debit_rupay}}% of tax\\r\\n                will be charaged on total amount)</small></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"paymentMode\\\" [value]=\\\"3\\\" id=\\\"rdoDLTcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDLTcard\\\">\\r\\n              Debit lt 2000\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.debit_lt_2000 !== '0'\\\"><small class=\\\"text-danger\\\">({{bankCharges.debit_lt_2000}}% of\\r\\n                tax will be charaged on total amount)</small></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"paymentMode\\\" [value]=\\\"4\\\" id=\\\"rdoDGTcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDGTcard\\\">\\r\\n              Debit gt 2000\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.debit_gt_2000 !== '0'\\\"><small class=\\\"text-danger\\\">({{bankCharges.debit_gt_2000}}% of\\r\\n                tax will be charaged on total amount)</small></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"paymentMode\\\" [value]=\\\"5\\\" id=\\\"rdoUPI\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoUPI\\\">\\r\\n              UPI\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.upi !== '0'\\\"><small class=\\\"text-danger\\\">({{bankCharges.upi}}% of tax will be\\r\\n                charaged on total amount)</small></div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"paymentMode\\\" [value]=\\\"6\\\" id=\\\"rdoNetBanking\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoNetBanking\\\">\\r\\n              NetBanking\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.nb !== '0'\\\"><small class=\\\"text-danger\\\">({{bankCharges.nb}}% of tax will be charaged\\r\\n                on total amount)</small></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"modalref.hide()\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"PublicationPayment()\\\">Proceed To Pay</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\" style=\\\"font-weight:bold;\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\">\\r\\n              {{ tableHeading }}\\r\\n              <div *ngIf=\\\"loaderFlag == true\\\" class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\r\\n                <span class=\\\"sr-only\\\">Loading...</span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n              <div class=\\\"float-right\\\">\\r\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"showCheckOut(Checkoutpage)\\\">Buy Now</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div *ngIf=\\\"searchText == ''\\\" style=\\\"width:10%;float:left;\\\">\\r\\n            <select (change)=\\\"changeDisplayCount()\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"apiParams.tablerowlimit\\\">\\r\\n              <option value=\\\"10\\\">10</option>\\r\\n              <option value=\\\"25\\\">25</option>\\r\\n              <option value=\\\"50\\\">50</option>\\r\\n              <option value=\\\"100\\\">100</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"form-group\\\" style=\\\"float:right;width:auto;\\\">\\r\\n            <button class=\\\"btn btn-success\\\">search</button>\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group\\\" style=\\\"float:right;width:30%;padding-right: 12px;\\\">\\r\\n            <input (keyup)=\\\"getData()\\\" [(ngModel)]=\\\"searchText\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\r\\n              id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Search Code / Serialno/ Title\\\">\\r\\n          </div>\\r\\n          <!-- <div class=\\\"form-group\\\" style=\\\"float:right; width: 20%; padding-right:12px;\\\">\\r\\n            <select class=\\\"form-control\\\" name=\\\"category\\\" id=\\\"category-combo\\\">\\r\\n              <option value=\\\"\\\">-- SELECT --</option>\\r\\n              <option value=\\\"1\\\">Monograph</option>\\r\\n              <option value=\\\"2\\\">Research Report</option>\\r\\n              <option value=\\\"3\\\">Focus</option>\\r\\n            </select>\\r\\n          </div> -->\\r\\n          <br>\\r\\n          <nav style=\\\"width:100%;float:left;\\\" *ngIf=\\\"searchText == ''\\\" aria-label=\\\"Page navigation example\\\">\\r\\n            <div style=\\\"float:left;\\\">\\r\\n              <span style=\\\"color:#212529;font-weight:bold;\\\">Page {{ pagenationConfiguration.currentPageNo }} of {{\\r\\n                pageCount }}</span>\\r\\n            </div>\\r\\n            <ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"false\\\">\\r\\n              <li *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1;\\\" style=\\\"cursor: pointer;\\\" class=\\\"page-item\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\">Previous</span>\\r\\n              </li>\\r\\n              <li *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1;\\\" style=\\\"cursor: pointer;\\\"\\r\\n                class=\\\"page-item disabled\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\">Previous</span>\\r\\n              </li>\\r\\n              <li style=\\\"cursor: pointer;\\\" *ngFor='let pageno of pagenationConfiguration.pageNos;let i = index'\\r\\n                class=\\\"page-item\\\" (click)=\\\"pagenationEvent(1, pageno)\\\">\\r\\n                <span *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\" style=\\\"color:white;\\\"\\r\\n                  class=\\\"page-link page-link-active\\\" (click)=\\\"pagenationEvent('1', pageno)\\\">\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"pageno != pagenationConfiguration.currentPageNo &&  pageno != undefined\\\" class=\\\"page-link\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\">\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n              </li>\\r\\n              <li *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\" class=\\\"page-item\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\">Next</span>\\r\\n              </li>\\r\\n              <li *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\" class=\\\"page-item disabled\\\"\\r\\n                style=\\\"cursor: pointer;\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\">Next</span>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n          <table style=\\\"width:100%;\\\" class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th style=\\\"width:5%;\\\"></th>\\r\\n                <th style=\\\"width:7%;\\\">Item Code</th>\\r\\n                <th style=\\\"width:7%;\\\">Serial No</th>\\r\\n                <th style=\\\"width:41%;\\\">Title</th>\\r\\n                <th style=\\\"width:5%;\\\">Volume</th>\\r\\n                <th style=\\\"width:5%;\\\">Month</th>\\r\\n                <th style=\\\"width:5%;\\\">Year</th>\\r\\n                <th style=\\\"width:5%;\\\">No</th>\\r\\n                <th style=\\\"width:10%;\\\">Mem. Rate</th>\\r\\n                <th style=\\\"width:10%;\\\">Non-Mem. Rate</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let publicationFocus of publicationFocusLists; index as j;\\\">\\r\\n                <!--<option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}></option>-->\\r\\n                <td>\\r\\n                  <!-- {{ (j+1) }} -->\\r\\n                  <input type=\\\"checkbox\\\" name=\\\"ChkPublication\\\"\\r\\n                    (click)=\\\"PublicationSelection(publicationFocus.itemcode, publicationFocus.nonmeber_rate,publicationFocus.member_rate,publicationFocus.title,publicationFocus.weight)\\\"\\r\\n                    [checked]=\\\"publicationFocus.cheked\\\" [id]=\\\"'check'+publicationFocus.itemcode\\\">\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.itemcode}}</label>\\r\\n\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.serialno}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.title}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.volume}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.month}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.year}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.no}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.member_rate}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{'check'+publicationFocus.itemcode}}\\\">\\r\\n                    {{publicationFocus.nonmeber_rate}}\\r\\n                  </label>\\r\\n                </td>\\r\\n                <!--<td>\\r\\n                    <div style=\\\"float:left;\\\"><i class=\\\"icon-cloud-download\\\" style=\\\"font-size:1.3em;cursor:pointer;\\\" title=\\\"Download Receipt\\\"></i></div>                    \\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div style=\\\"float:left;\\\"><i class=\\\"icon-layers\\\" style=\\\"color:green;font-size:1.3em;cursor:pointer;\\\" title=\\\"Download Convertion Factors\\\"></i></div>\\r\\n                  </td>-->\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr />\\r\\n          <nav *ngIf=\\\"searchText == ''\\\" aria-label=\\\"Page navigation example\\\">\\r\\n            <div style=\\\"float:left;\\\">\\r\\n              <span style=\\\"color:#212529;font-weight:bold;\\\">Page {{ pagenationConfiguration.currentPageNo }} of {{\\r\\n                pageCount }}</span>\\r\\n            </div>\\r\\n            <ul class=\\\"pagination justify-content-center\\\">\\r\\n              <li *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1;\\\" style=\\\"cursor: pointer;\\\" class=\\\"page-item\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\">Previous</span>\\r\\n              </li>\\r\\n              <li *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1;\\\" style=\\\"cursor: pointer;\\\"\\r\\n                class=\\\"page-item disabled\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\">Previous</span>\\r\\n              </li>\\r\\n              <li style=\\\"cursor: pointer;\\\" *ngFor='let pageno of pagenationConfiguration.pageNos;let i = index'\\r\\n                class=\\\"page-item\\\" (click)=\\\"pagenationEvent(1, pageno)\\\">\\r\\n                <span *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\" style=\\\"color:white;\\\"\\r\\n                  class=\\\"page-link page-link-active\\\" (click)=\\\"pagenationEvent('1', pageno)\\\">\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"pageno != pagenationConfiguration.currentPageNo &&  pageno != undefined\\\" class=\\\"page-link\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\">\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n              </li>\\r\\n              <li *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\" class=\\\"page-item\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\">Next</span>\\r\\n              </li>\\r\\n              <li *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\" class=\\\"page-item disabled\\\"\\r\\n                style=\\\"cursor: pointer;\\\">\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\">Next</span>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/ End Table-->\\r\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <ng-template #Checkoutpage class=\\\"modal\\\">\\r\\n    <div class=\\\"model-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <div class=\\\"modal-title\\\">\\r\\n          <h3>Check Out</h3>\\r\\n        </div>\\r\\n        <button\\r\\n          style=\\\"outline: none; border: none\\\"\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close pull-right\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"modalRef.hide()\\\"\\r\\n        >\\r\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h3>Deliver To</h3>\\r\\n            <hr />\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <label for=\\\"CustName\\\">Full Name</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  [(ngModel)]=\\\"Name\\\"\\r\\n                  id=\\\"CustName\\\"\\r\\n                />\\r\\n              </div>\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <label for=\\\"phoneNo\\\">Phone No.</label>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  class=\\\"form-control\\\"\\r\\n                  maxlength=\\\"10\\\"\\r\\n                  [(ngModel)]=\\\"phoneNumber\\\"\\r\\n                  id=\\\"phoneNo\\\"\\r\\n                />\\r\\n              </div>\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"pincode\\\">PIN code</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    maxlength=\\\"6\\\"\\r\\n                    [(ngModel)]=\\\"PINcode\\\"\\r\\n                    id=\\\"pincode\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mt-1\\\">\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"custAddress\\\">Address</label>\\r\\n                  <textarea\\r\\n                    class=\\\"form-control\\\"\\r\\n                    name=\\\"address\\\"\\r\\n                    [(ngModel)]=\\\"Address\\\"\\r\\n                    id=\\\"custAddress\\\"\\r\\n                    cols=\\\"30\\\"\\r\\n                    rows=\\\"5\\\"\\r\\n                  ></textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h3>Select Quantity</h3>\\r\\n            <hr />\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md\\\">\\r\\n                <table class=\\\"table table-striped\\\">\\r\\n                  <thead style=\\\"text-align: center\\\">\\r\\n                    <tr>\\r\\n                      <td style=\\\"width: 10%\\\">Item Code</td>\\r\\n                      <td style=\\\"width: 25%\\\">Publication Name</td>\\r\\n                      <td style=\\\"width: 20%\\\" *ngIf=\\\"!IsMember\\\">Rate</td>\\r\\n                      <td style=\\\"width: 20%\\\" *ngIf=\\\"IsMember\\\">Rate</td>\\r\\n                      <td style=\\\"width: 10%\\\">quantity</td>\\r\\n                      <td style=\\\"width: 20%\\\" *ngIf=\\\"!IsMember\\\">total</td>\\r\\n                      <td style=\\\"width: 20%\\\" *ngIf=\\\"IsMember\\\">total</td>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody style=\\\"text-align: center\\\">\\r\\n                    <tr *ngFor=\\\"let ps of publicationSelected\\\">\\r\\n                      <td>{{ ps.itemcode }}</td>\\r\\n                      <td>{{ ps.title }}</td>\\r\\n                      <td *ngIf=\\\"!IsMember\\\">{{ ps.nmamount }}</td>\\r\\n                      <td *ngIf=\\\"IsMember\\\">{{ ps.mamount }}</td>\\r\\n                      <td>\\r\\n                        <input\\r\\n                          type=\\\"number\\\"\\r\\n                          class=\\\"form-control\\\"\\r\\n                          min=\\\"0\\\"\\r\\n                          width=\\\"50%\\\"\\r\\n                          [(ngModel)]=\\\"ps.quantity\\\"\\r\\n                        />\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"!IsMember\\\">{{ ps.nmamount * ps.quantity }}</td>\\r\\n                      <td *ngIf=\\\"IsMember\\\">{{ ps.mamount * ps.quantity }}</td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <span class=\\\"text-danger mr-auto\\\"\\r\\n          >* Courier charges will be added to the above value</span\\r\\n        >\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"modalRef.hide()\\\"\\r\\n        >\\r\\n          Close\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-success\\\"\\r\\n          (click)=\\\"paymentOptionOpen(paymentType)\\\"\\r\\n        >\\r\\n          Proceed To Pay\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #paymentType class=\\\"modal\\\">\\r\\n    <div class=\\\"model-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title pull-left\\\">Select payment Type</h4>\\r\\n        <button\\r\\n          style=\\\"outline: none; border: none\\\"\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"close pull-right text-white\\\"\\r\\n          aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"modalRef.hide()\\\"\\r\\n        >\\r\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Net Amount: </label>\\r\\n            <span style=\\\"font-weight: bold\\\"\\r\\n              >&nbsp;{{ totalvalue + \\\" Rs.\\\" }}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\"> Total Weight: </label>\\r\\n            <span style=\\\"font-weight: bold\\\">&nbsp;{{ curierWeight }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\"> PIN code: </label>\\r\\n            <span style=\\\"font-weight: bold\\\">&nbsp;{{ curierPincode }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\"> Courier Charges: </label>\\r\\n            <span style=\\\"font-weight: bold\\\"\\r\\n              >&nbsp;{{\\r\\n                curierCharges +\\r\\n                  \\\" Rs.\\\" +\\r\\n                  \\\"( total weight in kg: \\\" +\\r\\n                  curierWeight +\\r\\n                  \\\"; pincode: \\\" +\\r\\n                  curierPincode\\r\\n              }}</span\\r\\n            >\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input\\r\\n              class=\\\"form-check-input\\\"\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"paymentMode\\\"\\r\\n              [value]=\\\"1\\\"\\r\\n              id=\\\"rdoCCcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\"\\r\\n            />\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoCCcard\\\">\\r\\n              Credit Card\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.credit_card !== '0'\\\">\\r\\n              <small class=\\\"text-danger\\\"\\r\\n                >({{ bankCharges.credit_card }}% of tax will be charaged on\\r\\n                total amount)</small\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input\\r\\n              class=\\\"form-check-input\\\"\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"paymentMode\\\"\\r\\n              [value]=\\\"2\\\"\\r\\n              id=\\\"rdoDRcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\"\\r\\n            />\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDRcard\\\">\\r\\n              Debit Rupay\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.debit_rupay !== '0'\\\">\\r\\n              <small class=\\\"text-danger\\\"\\r\\n                >({{ bankCharges.debit_rupay }}% of tax will be charaged on\\r\\n                total amount)</small\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input\\r\\n              class=\\\"form-check-input\\\"\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"paymentMode\\\"\\r\\n              [value]=\\\"3\\\"\\r\\n              id=\\\"rdoDLTcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\"\\r\\n            />\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDLTcard\\\">\\r\\n              Debit lt 2000\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.debit_lt_2000 !== '0'\\\">\\r\\n              <small class=\\\"text-danger\\\"\\r\\n                >({{ bankCharges.debit_lt_2000 }}% of tax will be charaged on\\r\\n                total amount)</small\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input\\r\\n              class=\\\"form-check-input\\\"\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"paymentMode\\\"\\r\\n              [value]=\\\"4\\\"\\r\\n              id=\\\"rdoDGTcard\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\"\\r\\n            />\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDGTcard\\\">\\r\\n              Debit gt 2000\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.debit_gt_2000 !== '0'\\\">\\r\\n              <small class=\\\"text-danger\\\"\\r\\n                >({{ bankCharges.debit_gt_2000 }}% of tax will be charaged on\\r\\n                total amount)</small\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input\\r\\n              class=\\\"form-check-input\\\"\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"paymentMode\\\"\\r\\n              [value]=\\\"5\\\"\\r\\n              id=\\\"rdoUPI\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\"\\r\\n            />\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoUPI\\\"> UPI </label>\\r\\n            <div *ngIf=\\\"bankCharges.upi !== '0'\\\">\\r\\n              <small class=\\\"text-danger\\\"\\r\\n                >({{ bankCharges.upi }}% of tax will be charaged on total\\r\\n                amount)</small\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row px-5 py-3\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <input\\r\\n              class=\\\"form-check-input\\\"\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"paymentMode\\\"\\r\\n              [value]=\\\"6\\\"\\r\\n              id=\\\"rdoNetBanking\\\"\\r\\n              [(ngModel)]=\\\"paymentMode\\\"\\r\\n            />\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoNetBanking\\\">\\r\\n              NetBanking\\r\\n            </label>\\r\\n            <div *ngIf=\\\"bankCharges.nb !== '0'\\\">\\r\\n              <small class=\\\"text-danger\\\"\\r\\n                >({{ bankCharges.nb }}% of tax will be charaged on total\\r\\n                amount)</small\\r\\n              >\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-secondary\\\"\\r\\n          (click)=\\\"modalRef.hide()\\\"\\r\\n        >\\r\\n          Close\\r\\n        </button>\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-success\\\"\\r\\n          (click)=\\\"PublicationPayment()\\\"\\r\\n        >\\r\\n          Proceed To Pay\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <div class=\\\"row\\\">\\r\\n    <a\\r\\n      href=\\\"http://sitraonline.org.in/onlineserviceapi/download/Publicationmenu.pdf\\\"\\r\\n      target=\\\"_blank\\\"\\r\\n      style=\\\"width: 100%; text-align: right; margin-right: 10px\\\"\\r\\n      title=\\\"Help Link Pdf\\\"\\r\\n      download\\r\\n      ><svg\\r\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n        style=\\\"width: 30px; height: 30px\\\"\\r\\n        viewBox=\\\"0 0 20 20\\\"\\r\\n        fill=\\\"currentColor\\\"\\r\\n      >\\r\\n        <path\\r\\n          fill-rule=\\\"evenodd\\\"\\r\\n          d=\\\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\\\"\\r\\n          clip-rule=\\\"evenodd\\\"\\r\\n        /></svg\\r\\n    ></a>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header text-white\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\">\\r\\n              <h4>{{ tableHeading }}</h4>\\r\\n              <div\\r\\n                *ngIf=\\\"loaderFlag == true\\\"\\r\\n                class=\\\"spinner-border text-primary\\\"\\r\\n                role=\\\"status\\\"\\r\\n              >\\r\\n                <span class=\\\"sr-only\\\">Loading...</span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n              <div class=\\\"float-right\\\">\\r\\n                <button\\r\\n                  class=\\\"btn btn-success\\\"\\r\\n                  (click)=\\\"showCheckOut(Checkoutpage)\\\"\\r\\n                >\\r\\n                  Buy Now\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div *ngIf=\\\"searchText == ''\\\" style=\\\"width: auto; float: left\\\">\\r\\n            <select\\r\\n              (change)=\\\"changeDisplayCount()\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"apiParams.tablerowlimit\\\"\\r\\n            >\\r\\n              <option value=\\\"10\\\">10</option>\\r\\n              <option value=\\\"25\\\">25</option>\\r\\n              <option value=\\\"50\\\">50</option>\\r\\n              <option value=\\\"100\\\">100</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: auto\\\">\\r\\n            <button (click)=\\\"getData()\\\" class=\\\"btn btn-success\\\">search</button>\\r\\n          </div>\\r\\n          <div\\r\\n            class=\\\"form-group\\\"\\r\\n            style=\\\"float: right; width: 30%; padding-right: 12px\\\"\\r\\n          >\\r\\n            <input\\r\\n              [(ngModel)]=\\\"searchText\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"exampleFormControlInput1\\\"\\r\\n              placeholder=\\\"Search Code / Serialno/ Title\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div\\r\\n            class=\\\"form-group\\\"\\r\\n            style=\\\"float: right; width: 15%; padding-right: 12px\\\"\\r\\n          >\\r\\n            <select\\r\\n              class=\\\"form-control\\\"\\r\\n              name=\\\"category\\\"\\r\\n              id=\\\"category-combo\\\"\\r\\n              [(ngModel)]=\\\"Category\\\"\\r\\n            >\\r\\n              <option value=\\\"\\\">--SELECT--</option>\\r\\n              <option value=\\\"Monograph\\\">Monograph</option>\\r\\n              <option value=\\\"Research Report\\\">Research Report</option>\\r\\n              <option value=\\\"SITRA Focus\\\">SITRA Focus</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <br />\\r\\n          <nav\\r\\n            style=\\\"width: 100%; float: left\\\"\\r\\n            *ngIf=\\\"searchText == ''\\\"\\r\\n            aria-label=\\\"Page navigation example\\\"\\r\\n          >\\r\\n            <div style=\\\"float: left\\\">\\r\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\r\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\r\\n                {{ pageCount }}</span\\r\\n              >\\r\\n            </div>\\r\\n            <ul class=\\\"pagination justify-content-center\\\" *ngIf=\\\"false\\\">\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                *ngFor=\\\"\\r\\n                  let pageno of pagenationConfiguration.pageNos;\\r\\n                  let i = index\\r\\n                \\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\r\\n              >\\r\\n                <span\\r\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\r\\n                  style=\\\"color: white\\\"\\r\\n                  class=\\\"page-link page-link-active\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n                <span\\r\\n                  *ngIf=\\\"\\r\\n                    pageno != pagenationConfiguration.currentPageNo &&\\r\\n                    pageno != undefined\\r\\n                  \\\"\\r\\n                  class=\\\"page-link\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n          <table\\r\\n            style=\\\"width: 100%\\\"\\r\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\r\\n          >\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th style=\\\"width: 5%\\\">Select</th>\\r\\n                <th style=\\\"width: 10%\\\">Item Code</th>\\r\\n                <th style=\\\"width: 10%\\\">Serial No</th>\\r\\n                <th style=\\\"width: 55%\\\">Title</th>\\r\\n                <th style=\\\"width: 10%\\\">Mem. Rate</th>\\r\\n                <th style=\\\"width: 10%\\\">Non-Mem. Rate</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let publication of publicationLists; index as j\\\">\\r\\n                <!--<option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}></option>-->\\r\\n                <td>\\r\\n                  <div>\\r\\n                    <!-- {{ (j+1) }} -->\\r\\n                    <input\\r\\n                      type=\\\"checkbox\\\"\\r\\n                      name=\\\"ChkPublication\\\"\\r\\n                      (click)=\\\"\\r\\n                        PublicationSelection(\\r\\n                          publication.itemcode,\\r\\n                          publication.nonmeberrate,\\r\\n                          publication.memberrate,\\r\\n                          publication.title,\\r\\n                          publication.Weight\\r\\n                        )\\r\\n                      \\\"\\r\\n                      [checked]=\\\"publication.cheked\\\"\\r\\n                      [id]=\\\"'check' + publication.itemcode\\\"\\r\\n                    />\\r\\n                  </div>\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label for=\\\"{{ 'check' + publication.itemcode }}\\\">\\r\\n                    <div>{{ publication.itemcode }}</div>\\r\\n                  </label>\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label for=\\\"{{ 'check' + publication.itemcode }}\\\">\\r\\n                    <div>{{ publication.serialno }}</div>\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{ 'check' + publication.itemcode }}\\\">\\r\\n                    <div>{{ publication.title }}</div>\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{ 'check' + publication.itemcode }}\\\">\\r\\n                    <div>{{ publication.memberrate }}</div>\\r\\n                  </label>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <label for=\\\"{{ 'check' + publication.itemcode }}\\\">\\r\\n                    <div>{{ publication.nonmeberrate }}</div>\\r\\n                  </label>\\r\\n                </td>\\r\\n                <!--<td>\\r\\n                    <div style=\\\"float:left;\\\"><i class=\\\"icon-cloud-download\\\" style=\\\"font-size:1.3em;cursor:pointer;\\\" title=\\\"Download Receipt\\\"></i></div>                    \\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div style=\\\"float:left;\\\"><i class=\\\"icon-layers\\\" style=\\\"color:green;font-size:1.3em;cursor:pointer;\\\" title=\\\"Download Convertion Factors\\\"></i></div>\\r\\n                  </td>-->\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr />\\r\\n          <nav *ngIf=\\\"searchText == ''\\\" aria-label=\\\"Page navigation example\\\">\\r\\n            <div style=\\\"float: left\\\">\\r\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\r\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\r\\n                {{ pageCount }}</span\\r\\n              >\\r\\n            </div>\\r\\n            <ul class=\\\"pagination justify-content-center\\\">\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                *ngFor=\\\"\\r\\n                  let pageno of pagenationConfiguration.pageNos;\\r\\n                  let i = index\\r\\n                \\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\r\\n              >\\r\\n                <span\\r\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\r\\n                  style=\\\"color: white\\\"\\r\\n                  class=\\\"page-link page-link-active\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n                <span\\r\\n                  *ngIf=\\\"\\r\\n                    pageno != pagenationConfiguration.currentPageNo &&\\r\\n                    pageno != undefined\\r\\n                  \\\"\\r\\n                  class=\\\"page-link\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/ End Table-->\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"app-body\\\">\\n  <main class=\\\"main d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n\\t\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8 mx-auto\\\">\\n          <div class=\\\"card mx-4\\\">\\n            <div class=\\\"card-body\\\">\\n                <h1>SITRA Online Registeration</h1>\\n                <p class=\\\"text-muted\\\">Create one account and use it our multiple services. (Testing, Consultancy, Traning, Webinar, UKG, Auditorium booking, etc.,)</p>                          \\n                <p style=\\\"color:red; width:100%;float:right;\\\">* fields are required</p>\\n                  <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>Registration Type</label>\\n                      <select class=\\\"form-control\\\"  [(ngModel)] = \\\"RegFormData.regtype\\\" required id=\\\"regtype\\\" name=\\\"regtype\\\" >\\n                        <option value=\\\"\\\">-SELECT-</option>\\n                        <option value=\\\"1\\\">Mill</option>\\n                        <option value=\\\"2\\\">Organization</option>\\n                        <option value=\\\"3\\\">Individual</option>\\n                        <option value=\\\"4\\\">Other</option>\\n                      </select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>Mill / Organization Name</label>\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-home\\\"></i></span>\\n                      </div>\\n                      <input [(ngModel)] = \\\"RegFormData.mill_organization_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Mill / Organization name\\\" autocomplete=\\\"millname\\\" required>\\n                  </div>\\n                  </div>\\n                <!-- End First Row-->\\n                          \\n                  <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                      <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>Cotntact person name</label>\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                      </div>\\n                      <input [(ngModel)] = \\\"RegFormData.contact_person_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cotntact person name\\\" autocomplete=\\\"contact_person_name\\\" id=\\\"contact_person_name\\\" name=\\\"contact_person_name\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">                    \\n                    <div class=\\\"input-group mb-3\\\">\\n                      <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>Mobile no</label>\\n                      <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\"><i class=\\\"icon-screen-smartphone\\\"></i></span>\\n                      </div>\\n                      <input [(ngModel)] = \\\"RegFormData.contact_person_mobileno\\\" maxLength=\\\"10\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Mobileno\\\" autocomplete=\\\"username\\\" required>\\n                    </div>\\n                 </div>\\n                 \\n                <!-- End Second Row -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\">Alternative contact no(s)</label>                    \\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-phone\\\"></i></span>\\n                    </div>\\n                    <input [(ngModel)] = \\\"RegFormData.alternative_contactnos\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Alternative contact no(s)\\\" autocomplete=\\\"email\\\" required>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>Email</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">@</span>\\n                    </div>\\n                    <input [(ngModel)] = \\\"RegFormData.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" autocomplete=\\\"email\\\" required>\\n                  </div>\\n                </div>\\n                <!-- End Third Row -->\\n                <div class=\\\"col-sm-12\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>Address 1</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\">\\n                        <i class=\\\"icon-envelope-letter\\\"></i>\\n                      </span>\\n                    </div>\\n                    <input [(ngModel)] = \\\"RegFormData.address1\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Address 1\\\" autocomplete=\\\"email\\\" required>\\n                  </div>\\n                </div>\\n                <!-- End Fourth Row-->\\n                <div class=\\\"col-sm-12\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\">Address 2</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-envelope-letter\\\"></i></span>\\n                    </div>\\n                    <input [(ngModel)] = \\\"RegFormData.address2\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Address 2\\\" autocomplete=\\\"email\\\" required>\\n                  </div>\\n                </div>\\n                <!-- End Fifth Row -->\\n                <div class=\\\"col-sm-12\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>City</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-location-pin\\\"></i></span>\\n                    </div>\\n                    <input [(ngModel)] = \\\"RegFormData.city\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City\\\" autocomplete=\\\"email\\\" required>\\n                  </div>\\n                </div>\\n                <!-- End Sixth Row -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>State</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-speech\\\"></i></span>\\n                    </div>\\n                    <select class=\\\"form-control\\\"  [(ngModel)] = \\\"RegFormData.state\\\" >\\n                      <option selected=\\\"selected\\\" value=\\\"\\\">-SELECT-</option>\\n                      <option *ngFor=\\\"let state of stateNameLists; index as k;\\\" value={{stateNameLists[k].statename}}>\\n                        {{state.statename}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>Pincode</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-pin\\\"></i></span>\\n                    </div>\\n                    <input [(ngModel)] = \\\"RegFormData.pincode\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Pincode\\\" autocomplete=\\\"email\\\" required>\\n                  </div> \\n                </div>\\n                <!-- End Seventh Row-->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>GST Registration Type</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-speech\\\"></i></span>\\n                    </div>\\n                    <select class=\\\"form-control\\\"  [(ngModel)] = \\\"RegFormData.gstregtype\\\" >\\n                      <option    value=\\\"\\\">-SELECT-</option>\\n                      <option  value=\\\"Y\\\">Registered</option>\\n                      <option   value=\\\"N\\\">Un-Registered</option>\\n                    </select>\\n                  </div>\\n                </div>\\n                <div *ngIf=\\\"RegFormData.gstregtype === 'Y'\\\" class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <label style=\\\"width:100%;\\\"><span style=\\\"color:red\\\">*</span>GST No</label>\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-pin\\\"></i></span>\\n                    </div>\\n                    <input [(ngModel)] = \\\"RegFormData.gstno\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"GST No\\\" autocomplete=\\\"email\\\" required>\\n                  </div> \\n                </div>\\n                <!-- End Eighth Row -->\\n                \\n                <div *ngIf=\\\"RegFormData.cloud_customer_id !== ''\\\" class=\\\"col-sm-8\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Enter OTP</label>\\n                      <input [(ngModel)] = \\\"RegFormData.mobile_otp\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter OTP\\\" autocomplete=\\\"email\\\" required>\\n                    </div>\\n                  </div> \\n                  <!-- <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Enter E-Mail OTP</label>\\n                      <input [(ngModel)] = \\\"RegFormData.email_otp\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"E-Mail OTP\\\" autocomplete=\\\"email\\\" required>\\n                    </div>\\n                  </div>  -->\\n                </div>\\n                <div *ngIf=\\\"errorMessages !== '' \\\" class=\\\"col-sm-8\\\" style=\\\"float:left;padding-bottom: 10px;\\\">\\n                  <span style=\\\"font-size:14px;color:red;padding:10px;font-weight: bold;\\\">{{errorMessages}}</span>\\n                </div>\\n                <div class=\\\"input-group mb-3\\\">                                                    \\n                  <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"backToLoginPage()\\\">                   \\n                    Back to Login\\n                  </button>\\n                  \\n                  <button *ngIf=\\\"RegFormData.cloud_customer_id === ''\\\" style=\\\"margin-left:10px;\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"validateFormData()\\\">\\n                    <span style=\\\"font-size:14px;\\\" *ngIf=\\\"spinnerFlag==true\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n                    Create Account                   \\n                  </button>\\n                  <button *ngIf=\\\"RegFormData.cloud_customer_id !== ''\\\"  style=\\\"margin-left:10px;\\\" class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"validateOtp()\\\">\\n                    <span style=\\\"font-size:14px;\\\" *ngIf=\\\"spinnerFlag==true\\\" class=\\\"spinner-grow spinner-grow-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\n                    Verify OTP(s)                   \\n                  </button>\\n                  \\n                  <div *ngIf=\\\"returnFlag ==true\\\">\\n                    <span style=\\\"font-size:14px;color:green;padding:10px;font-weight: bold;\\\" >{{returnMessage}}</span>\\n                  </div>\\n                  <div *ngIf=\\\"returnFlag ==false\\\">\\n                    <span style=\\\"font-size:14px;color:red;padding:10px;font-weight: bold;\\\" >{{returnMessage}}</span>\\n                  </div>\\n                </div>\\n            </div>          \\n          </div>\\n        </div>\\n      </div>      \\n    </div>    \\n  </main>\\n</div>\\n\\n\";","export default \"<p>reports works!</p>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div\\r\\n      bsModal\\r\\n      #primaryModal=\\\"bs-modal\\\"\\r\\n      class=\\\"modal fade\\\"\\r\\n      tabindex=\\\"-1\\\"\\r\\n      role=\\\"dialog\\\"\\r\\n      aria-labelledby=\\\"myModalLabel\\\"\\r\\n      aria-hidden=\\\"true\\\"\\r\\n    >\\r\\n      <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\" style=\\\"width: 100%\\\">\\r\\n            <h4 style=\\\"width: 100%; float: left\\\" class=\\\"modal-title\\\">\\r\\n              {{ testDetails.testname }}\\r\\n            </h4>\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"close\\\"\\r\\n              (click)=\\\"primaryModal.hide()\\\"\\r\\n              aria-label=\\\"Close\\\"\\r\\n            >\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div style=\\\"width: 100%; float: left\\\">\\r\\n              <p style=\\\"float: left; width: 30%\\\">Standard</p>\\r\\n              <p style=\\\"float: left; width: 70%; font-weight: bold\\\">\\r\\n                {{ testDetails.standard }}\\r\\n              </p>\\r\\n            </div>\\r\\n            <div style=\\\"width: 100%; float: left\\\">\\r\\n              <p style=\\\"float: left; width: 30%\\\">NABL</p>\\r\\n              <p style=\\\"float: left; width: 70%; font-weight: bold\\\">\\r\\n                {{ testDetails.nabl }}\\r\\n              </p>\\r\\n            </div>\\r\\n            <div style=\\\"width: 100%; float: left\\\">\\r\\n              <p style=\\\"float: left; width: 30%\\\">Sample Size</p>\\r\\n              <p style=\\\"float: left; width: 70%; font-weight: bold\\\">\\r\\n                {{ testDetails.samplesize }}\\r\\n              </p>\\r\\n            </div>\\r\\n            <div style=\\\"width: 100%; float: left\\\">\\r\\n              <p style=\\\"float: left; width: 30%\\\">Member Rate</p>\\r\\n              <p style=\\\"float: left; width: 70%; font-weight: bold\\\">\\r\\n                {{ testDetails.memrate }}\\r\\n              </p>\\r\\n            </div>\\r\\n            <div style=\\\"width: 100%; float: left\\\">\\r\\n              <p style=\\\"float: left; width: 30%\\\">Non Member Rate</p>\\r\\n              <p style=\\\"float: left; width: 70%; font-weight: bold\\\">\\r\\n                {{ testDetails.nonmemrate }}\\r\\n              </p>\\r\\n            </div>\\r\\n\\r\\n            <!-- <p>NABL : </p>\\r\\n              <p>Standard : </p>\\r\\n              <p>Sample Size : </p>\\r\\n              <p>Member Rate : </p>\\r\\n              <p>Non-Member Rate : </p> -->\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              class=\\\"btn btn-secondary\\\"\\r\\n              (click)=\\\"primaryModal.hide()\\\"\\r\\n            >\\r\\n              Close\\r\\n            </button>\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- /.modal-content -->\\r\\n      </div>\\r\\n      <!-- /.modal-dialog -->\\r\\n    </div>\\r\\n    <!-- /.modal -->\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <label for=\\\"name\\\">Add / Update Request Analysis</label>\\r\\n          <div style=\\\"float: right\\\">\\r\\n            <button\\r\\n              type=\\\"button\\\"\\r\\n              style=\\\"font-size: 1.2em\\\"\\r\\n              class=\\\"btn btn-sm btn-primary\\\"\\r\\n            >\\r\\n              <i class=\\\"fa fa-plus\\\"></i> Add / Update\\r\\n            </button>\\r\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary mr-1\\\" data-toggle=\\\"modal\\\" (click)=\\\"getTestDetails();primaryModal.show()\\\">\\r\\n                    Primary modal\\r\\n                  </button> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- <button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\r\\n              {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\r\\n            </button> -->\\r\\n\\r\\n          <div class=\\\"col-sm-6\\\" style=\\\"float: left\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Department</label>\\r\\n                  <select\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.deptid\\\"\\r\\n                    (change)=\\\"loadLabList()\\\"\\r\\n                  >\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option\\r\\n                      *ngFor=\\\"let dept of departmentList; index as a\\\"\\r\\n                      value=\\\"{{ departmentList[a].deptid }}\\\"\\r\\n                    >\\r\\n                      {{ departmentList[a].deptname }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Lab</label>\\r\\n                  <select\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.labid\\\"\\r\\n                    (change)=\\\"loadTestList()\\\"\\r\\n                  >\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option\\r\\n                      *ngFor=\\\"let lab of labList; index as b\\\"\\r\\n                      value=\\\"{{ labList[b].labid }}\\\"\\r\\n                    >\\r\\n                      {{ labList[b].labname }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Sample Retun</label>\\r\\n                  <select class=\\\"form-control\\\">\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option value=\\\"Y\\\">Yes</option>\\r\\n                    <option value=\\\"N\\\">No</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Mode of Payment</label>\\r\\n                  <select class=\\\"form-control\\\">\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option value=\\\"1\\\">Cheque</option>\\r\\n                    <option value=\\\"2\\\">DD</option>\\r\\n                    <option value=\\\"3\\\">Cash</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Despatch Date</label>\\r\\n                  <input\\r\\n                    type=\\\"date\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                   \\r\\n                   \\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"ccmonth\\\">Mill Reference no</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"ccmonth\\\">Comments</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!--/.row-->\\r\\n          </div>\\r\\n          <!--End Left panel-->\\r\\n          <div class=\\\"col-sm-6\\\" style=\\\"float: left\\\">\\r\\n            <div style=\\\"width: 100%; float: left\\\">\\r\\n              <div style=\\\"width: 60%; float: left\\\">Test Name</div>\\r\\n              <div style=\\\"width: 15%; float: left\\\">Mem. Rate</div>\\r\\n              <div style=\\\"width: 15%; float: left\\\">Non. Mem.Rate</div>\\r\\n              <div style=\\\"width: 10%; float: left\\\">Size</div>\\r\\n            </div>\\r\\n            <div style=\\\"width: 100%; height: 35vh; overflow: scroll\\\">\\r\\n              <div\\r\\n                *ngFor=\\\"let test of testList; index as a\\\"\\r\\n                style=\\\"\\r\\n                  font-size: 0.9em;\\r\\n                  width: 100%;\\r\\n                  float: left;\\r\\n                  line-height: 20px;\\r\\n                  padding: 5px;\\r\\n                  border-bottom: 0.1px solid gray;\\r\\n                \\\"\\r\\n              >\\r\\n                <div style=\\\"width: 60%; float: left\\\">\\r\\n                  <span\\r\\n                    style=\\\"\\r\\n                      text-decoration: underline;\\r\\n                      color: #00a5de;\\r\\n                      cursor: pointer;\\r\\n                    \\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    (click)=\\\"getTestDetails(test.testid); primaryModal.show()\\\"\\r\\n                    >{{ test.testname }}</span\\r\\n                  >\\r\\n                  <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary mr-1\\\" >\\r\\n                      Primary modal\\r\\n                    </button> -->\\r\\n                </div>\\r\\n                <div style=\\\"width: 15%; float: left\\\">{{ test.memrate }}</div>\\r\\n                <div style=\\\"width: 15%; float: left\\\">{{ test.nonmemrate }}</div>\\r\\n                <div style=\\\"width: 10%; float: left\\\">{{ test.samplesize }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <hr />\\r\\n          <!-- End Header -->\\r\\n          <div class=\\\"col-sm-12\\\" style=\\\"float: left\\\">\\r\\n            <div style=\\\"width: 100%; height: 20px\\\">\\r\\n              <div\\r\\n                style=\\\"\\r\\n                  font-weight: bold;\\r\\n                  font-size: 1.2em;\\r\\n                  text-align: center;\\r\\n                  width: 100%;\\r\\n                  height: 30px;\\r\\n                  background-color: #127b6e;\\r\\n                  color: white;\\r\\n                \\\"\\r\\n              >\\r\\n                <span>Sample Details</span>\\r\\n              </div>\\r\\n              <div style=\\\"width: 100%; height: 40vh\\\">\\r\\n                <div class=\\\"col-sm-12\\\" style=\\\"float: left; margin-top: 10px\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Sample Type</label>\\r\\n                        <select class=\\\"form-control\\\">\\r\\n                          <option value=\\\"\\\">-SELECT-</option>\\r\\n                        </select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Count</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Desc 1</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Desc 2</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Desc 3</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">remarks</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-3\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <button\\r\\n                          type=\\\"button\\\"\\r\\n                          style=\\\"font-size: 1.2em\\\"\\r\\n                          class=\\\"btn btn-sm btn-success\\\"\\r\\n                        >\\r\\n                          <i class=\\\"fa fa-plus\\\"></i> Add\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!-- End Samples Heade-->\\r\\n                <div class=\\\"col-sm-12\\\" style=\\\"float: left; margin-top: 10px\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <table\\r\\n                      style=\\\"width: 100%\\\"\\r\\n                      class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\r\\n                    >\\r\\n                      <thead class=\\\"thead-light\\\">\\r\\n                        <tr>\\r\\n                          <th style=\\\"width: 5%\\\">S.No</th>\\r\\n                          <th style=\\\"width: 15%\\\">Sample Type</th>\\r\\n                          <th style=\\\"width: 15%\\\">Count</th>\\r\\n                          <th style=\\\"width: 15%\\\">Desc 1</th>\\r\\n                          <th style=\\\"width: 15%\\\">Desc 2</th>\\r\\n                          <th style=\\\"width: 15%\\\">Desc 3</th>\\r\\n                          <th style=\\\"width: 15%\\\">Remarks</th>\\r\\n                          <th style=\\\"width: 5%\\\">Action</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody></tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- End Samples block-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/.row-->\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <ng-template #SampleDescription class=\\\"modal modal-xl\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Update Sample Description</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row\\\">\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\" style=\\\"width: 15%\\\">Sample No.</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 20%\\\">Sample Type</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 15%\\\" *ngIf=\\\"type === 'Yarn'\\\">\\n                  Count\\n                </th>\\n                <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Description</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 25%\\\">Remarks</th>\\n                <th scope=\\\"col\\\" style=\\\"width: 25%\\\" *ngIf=\\\"type === 'Yarn'\\\">\\n                  Ply\\n                </th>\\n                <th scope=\\\"col\\\" style=\\\"width: 25%\\\" *ngIf=\\\"type === 'Yarn'\\\">\\n                  Blend\\n                </th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let usd of UpdateSampleDesc\\\">\\n                <th scope=\\\"row\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    [value]=\\\"usd.sampleno\\\"\\n                    readonly\\n                    class=\\\"form-control bg-white\\\"\\n                    style=\\\"\\n                      outline: none;\\n                      border: none;\\n                      font-weight: bold;\\n                      color: black;\\n                    \\\"\\n                  />\\n                  <!-- {{sd.sampleno}} -->\\n                </th>\\n                <td>\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"usd.sampleid\\\">\\n                    <option value=\\\"0\\\">-SELECT-</option>\\n                    <option\\n                      *ngFor=\\\"let std of sampleTypeData\\\"\\n                      [value]=\\\"std.sampleid\\\"\\n                    >\\n                      {{ std.samplename }}\\n                    </option>\\n                  </select>\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.description\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.remarks\\\"\\n                  />\\n                </td>\\n                <td *ngIf=\\\"type === 'Yarn'\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.countcode\\\"\\n                  />\\n                </td>\\n                <td *ngIf=\\\"type === 'Yarn'\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.ply\\\"\\n                  />\\n                </td>\\n                <td *ngIf=\\\"type === 'Yarn'\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"usd.blend\\\"\\n                  />\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"Updatesampledescription()\\\"\\n        >\\n          Confirm\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\" style=\\\"font-weight: bold\\\">\\n          {{ tableHeading }}\\n          <div\\n            *ngIf=\\\"loaderFlag == true\\\"\\n            class=\\\"spinner-border text-primary\\\"\\n            role=\\\"status\\\"\\n          >\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n          </div>\\n          <div *ngIf=\\\"SessionLimsCustomerId > 0\\\" style=\\\"float: right\\\">\\n            <button\\n              (click)=\\\"addupdateRequestAnalysis(0)\\\"\\n              *ngIf=\\\"IsEligible\\\"\\n              type=\\\"button\\\"\\n              style=\\\"font-size: 1.2em\\\"\\n              class=\\\"btn btn-sm btn-success\\\"\\n            >\\n              <i class=\\\"fa fa-plus\\\"></i> Add New\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div *ngIf=\\\"searchText == ''\\\" style=\\\"width: 10%; float: left\\\">\\n            <select\\n              (change)=\\\"changeDisplayCount()\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"apiParams.tablerowlimit\\\"\\n            >\\n              <option value=\\\"10\\\">10</option>\\n              <option value=\\\"25\\\">25</option>\\n              <option value=\\\"50\\\">50</option>\\n              <option value=\\\"100\\\">100</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 30%\\\">\\n            <input\\n              (keyup)=\\\"getData()\\\"\\n              [(ngModel)]=\\\"searchText\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"exampleFormControlInput1\\\"\\n              placeholder=\\\"Type Request no to Search\\\"\\n            />\\n          </div>\\n          <br />\\n          <nav\\n            style=\\\"width: 100%; float: left\\\"\\n            *ngIf=\\\"searchText == ''\\\"\\n            aria-label=\\\"Page navigation example\\\"\\n          >\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n          <div *ngIf=\\\"spinnerFlag === true\\\" class=\\\"spinner\\\"></div>\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th style=\\\"width: 5%\\\">S.No</th>\\n                <th style=\\\"width: 10%\\\">Request No</th>\\n                <th style=\\\"width: 10%\\\">Request Date</th>\\n                <th style=\\\"width: 15%; text-align: center\\\">Lab</th>\\n                <th style=\\\"width: 10%\\\">No of Sample(s)</th>\\n                <th style=\\\"width: 10%\\\">Inward No</th>\\n                <th style=\\\"width: 10%\\\">Inward Date</th>\\n                <th style=\\\"width: 10%\\\">Status</th>\\n                <th style=\\\"width: 10%\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let request of requestAnalysis; index as j\\\">\\n                <td>\\n                  <div>{{ j + 1 }}</div>\\n                </td>\\n                <td>\\n                  <div\\n                    tooltip=\\\"{{\\n                      request.quotationno != ' '\\n                        ? request.quotationno\\n                        : 'No Data'\\n                    }}\\\"\\n                  >\\n                    {{ request.reqno }}\\n                  </div>\\n                </td>\\n                <td>\\n                  <div>{{ request.request_date.slice(0, 11) }}</div>\\n                </td>\\n                <td style=\\\"text-align: center\\\">\\n                  <div>{{ request.sample_type }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ request.noofsamples }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ request.inwardno }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ request.inwarddate }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ request.status_string }}</div>\\n                </td>\\n                <td>\\n                  <div style=\\\"float: left; padding-right: 10px\\\">\\n                    <i\\n                      class=\\\"fa fa-pencil\\\"\\n                      style=\\\"font-size: 1.3em; cursor: pointer\\\"\\n                      title=\\\"Sample Update\\\"\\n                      (click)=\\\"\\n                        getSampleData(\\n                          SampleDescription,\\n                          request.reqno,\\n                          request.labid,\\n                          request.sample_type\\n                        )\\n                      \\\"\\n                    ></i>\\n                  </div>\\n                  <div style=\\\"float: left\\\">\\n                    <i\\n                      class=\\\"icon-cloud-download\\\"\\n                      style=\\\"font-size: 1.3em; cursor: pointer; color: green\\\"\\n                      title=\\\"Download Receipt\\\"\\n                      (click)=\\\"downloadAnalysisRequest(request.reqno)\\\"\\n                    ></i>\\n                  </div>\\n                  <div style=\\\"float: left; padding-left: 10px\\\">\\n                    <i\\n                      class=\\\"icon-trash\\\"\\n                      style=\\\"font-size: 1.3em; cursor: pointer; color: red\\\"\\n                      title=\\\"Delete\\\"\\n                      (click)=\\\"deleteAnalysisRequest(request.reqno)\\\"\\n                    ></i>\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr />\\n          <nav *ngIf=\\\"searchText == ''\\\" aria-label=\\\"Page navigation example\\\">\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<!-- <button mat-raised-button (click)=\\\"subscribe()\\\">SUBSCRIBE TO FOOBAR TOPIC</button>\\r\\n<button mat-raised-button (click)=\\\"sendMsg()\\\">SEND FOOBAR MESSAGE</button>\\r\\n<button mat-raised-button (click)=\\\"unsubscribe()\\\">UNSUBSCRIBE FROM FOOBAR TOPIC</button>\\r\\n\\r\\n<div fxLayout>\\r\\n    <div fxFlex=\\\"20\\\">\\r\\n        <h1>Messages:</h1>\\r\\n        <p *ngFor=\\\"let message of messages\\\">\\r\\n            {{message | json}}\\r\\n        </p>\\r\\n    </div>\\r\\n    <div>\\r\\n        <h1>Status info:</h1>\\r\\n        <p *ngFor=\\\"let statusMessage of status\\\">\\r\\n            {{statusMessage}}\\r\\n        </p>\\r\\n    </div>\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"animated fadeIn\\\">\\r\\n  <!--Start Test selection model popup -->\\r\\n  <div\\r\\n    id=\\\"btnPopupClose\\\"\\r\\n    bsModal\\r\\n    #testSelectionModel=\\\"bs-modal\\\"\\r\\n    class=\\\"modal modal-lg\\\"\\r\\n    style=\\\"margin-left: 10%\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div\\r\\n      class=\\\"modal-dialog modal-success modal-lg\\\"\\r\\n      style=\\\"width: 100%\\\"\\r\\n      role=\\\"document\\\"\\r\\n    >\\r\\n      <div class=\\\"modal-content modal-lg\\\" style=\\\"width: 100%\\\">\\r\\n        <div class=\\\"modal-header\\\" style=\\\"width: 100%\\\">\\r\\n          <h5 style=\\\"width: 30%; float: left\\\" class=\\\"modal-title\\\">\\r\\n            Sample No : {{ SamplePopupProperty.sampleno }}\\r\\n          </h5>\\r\\n          <h5 style=\\\"width: 50%; float: left\\\" class=\\\"modal-title\\\">\\r\\n            No of Test(s) Selected : {{ SamplePopupProperty.nooftests }}\\r\\n          </h5>\\r\\n          <h5 style=\\\"width: 50%; float: left\\\" class=\\\"modal-title\\\">\\r\\n            Copy selected Test(s)\\r\\n            <input\\r\\n              type=\\\"checkbox\\\"\\r\\n              [checked]=\\\"selectAllTest\\\"\\r\\n              (change)=\\\"selectAll()\\\"\\r\\n            />\\r\\n          </h5>\\r\\n          <!-- <h5 style=\\\"width: 50%; float: left\\\" class=\\\"modal-title\\\">\\r\\n            Copy to All Sample(s)\\r\\n            <input\\r\\n              type=\\\"checkbox\\\"\\r\\n              [checked]=\\\"selectAllTest\\\"\\r\\n              (change)=\\\"selectAll()\\\"\\r\\n            />\\r\\n          </h5>  -->\\r\\n\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            id=\\\"btnPopupClose();\\\"\\r\\n            class=\\\"close\\\"\\r\\n            (click)=\\\"testSelectionModel.hide()\\\"\\r\\n            aria-label=\\\"Close\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div style=\\\"float: left; width: 100%\\\">\\r\\n            <div class=\\\"input-group mb-3\\\" style=\\\"width: 80%\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\"\\r\\n                  ><i class=\\\"fa fa-search\\\" style=\\\"color: green\\\"></i\\r\\n                ></span>\\r\\n              </div>\\r\\n              <input\\r\\n                [(ngModel)]=\\\"txtTestSearch\\\"\\r\\n                (keyup)=\\\"loadTestList()\\\"\\r\\n                type=\\\"text\\\"\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Search Test\\\"\\r\\n              />\\r\\n              <svg\\r\\n                *ngIf=\\\"testPopupLoader === true\\\"\\r\\n                xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\r\\n                xmlns=\\\"http://www.w3.org/2000/svg\\\"\\r\\n                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n                version=\\\"1.0\\\"\\r\\n                width=\\\"158px\\\"\\r\\n                height=\\\"24px\\\"\\r\\n                viewBox=\\\"0 0 158 24\\\"\\r\\n                xml:space=\\\"preserve\\\"\\r\\n              >\\r\\n                <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"#FFFFFF\\\" />\\r\\n                <path\\r\\n                  fill=\\\"#e3e3e3\\\"\\r\\n                  d=\\\"M64 4h10v10H64V4zm20 0h10v10H84V4zm20 0h10v10h-10V4zm20 0h10v10h-10V4zm20 0h10v10h-10V4zM4 4h10v10H4V4zm20 0h10v10H24V4zm20 0h10v10H44V4z\\\"\\r\\n                />\\r\\n                <path\\r\\n                  fill=\\\"#bdbdbd\\\"\\r\\n                  d=\\\"M144 14V4h10v10h-10zm9-9h-8v8h8V5zm-29 9V4h10v10h-10zm9-9h-8v8h8V5zm-29 9V4h10v10h-10zm9-9h-8v8h8V5zm-29 9V4h10v10H84zm9-9h-8v8h8V5zm-29 9V4h10v10H64zm9-9h-8v8h8V5zm-29 9V4h10v10H44zm9-9h-8v8h8V5zm-29 9V4h10v10H24zm9-9h-8v8h8V5zM4 14V4h10v10H4zm9-9H5v8h8V5z\\\"\\r\\n                />\\r\\n                <g>\\r\\n                  <path\\r\\n                    fill=\\\"#d9d9d9\\\"\\r\\n                    d=\\\"M-58 16V2h14v14h-14zm13-13h-12v12h12V3z\\\"\\r\\n                  />\\r\\n                  <path\\r\\n                    fill=\\\"#9c9c9c\\\"\\r\\n                    fill-opacity=\\\"0.3\\\"\\r\\n                    d=\\\"M-40 0h18v18h-18z\\\"\\r\\n                  />\\r\\n                  <path\\r\\n                    fill=\\\"#b2b2b2\\\"\\r\\n                    d=\\\"M-40 18V0h18v18h-18zm17-17h-16v16h16V1z\\\"\\r\\n                  />\\r\\n                  <path\\r\\n                    fill=\\\"#9c9c9c\\\"\\r\\n                    fill-opacity=\\\"0.7\\\"\\r\\n                    d=\\\"M-20 0h18v18h-18z\\\"\\r\\n                  />\\r\\n                  <path\\r\\n                    fill=\\\"#4c4c4c\\\"\\r\\n                    d=\\\"M-20 18V0h18v18h-18zM-3 1h-16v16h16V1z\\\"\\r\\n                  />\\r\\n                  <animateTransform\\r\\n                    attributeName=\\\"transform\\\"\\r\\n                    type=\\\"translate\\\"\\r\\n                    values=\\\"20 0;40 0;60 0;80 0;100 0;120 0;140 0;160 0;180 0;200 0\\\"\\r\\n                    calcMode=\\\"discrete\\\"\\r\\n                    dur=\\\"1800ms\\\"\\r\\n                    repeatCount=\\\"indefinite\\\"\\r\\n                  />\\r\\n                </g>\\r\\n              </svg>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-12\\\" style=\\\"float: left\\\">\\r\\n            <div\\r\\n              style=\\\"\\r\\n                width: 100%;\\r\\n                float: left;\\r\\n                background-color: #e4e7ea;\\r\\n                border: 1px solid #e4e7ea;\\r\\n              \\\"\\r\\n            >\\r\\n              <div style=\\\"width: 10%; float: left\\\">Test Id</div>\\r\\n              <div style=\\\"width: 55%; float: left\\\">Test Name</div>\\r\\n              <div style=\\\"width: 15%; float: left\\\">Member Test Rate</div>\\r\\n              <div style=\\\"width: 20%; float: left\\\">Non-Member Test Rate</div>\\r\\n            </div>\\r\\n            <div style=\\\"width: 100%; height: 35vh; overflow: scroll\\\">\\r\\n              <div\\r\\n                *ngFor=\\\"let test of testList; index as a\\\"\\r\\n                style=\\\"\\r\\n                  font-size: 0.9em;\\r\\n                  width: 100%;\\r\\n                  float: left;\\r\\n                  line-height: 20px;\\r\\n                  padding: 5px;\\r\\n                  border-bottom: 0.1px solid gray;\\r\\n                \\\"\\r\\n              >\\r\\n                <!-- <div style=\\\"width:60%;float:left;\\\">\\r\\n                      <span style=\\\"text-decoration: underline;color:#00A5DE;cursor: pointer;\\\"  data-toggle=\\\"modal\\\">{{test.testname}}</span>\\r\\n                    </div> -->\\r\\n                <div style=\\\"width: 10%; float: left\\\">\\r\\n                  <input\\r\\n                    *ngIf=\\\"test.selected === 'true'\\\"\\r\\n                    checked=\\\"true\\\"\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    style=\\\"padding: 2px\\\"\\r\\n                    (change)=\\\"\\r\\n                      setTestId(\\r\\n                        test.testid,\\r\\n                        $event,\\r\\n                        custtype === 'M' ? test.mrate : test.nmrate,\\r\\n                        SamplePopupProperty.sampleno\\r\\n                      )\\r\\n                    \\\"\\r\\n                  />\\r\\n                  <input\\r\\n                    *ngIf=\\\"test.selected !== 'true'\\\"\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    style=\\\"padding: 2px\\\"\\r\\n                    (change)=\\\"\\r\\n                      setTestId(\\r\\n                        test.testid,\\r\\n                        $event,\\r\\n                        custtype === 'M' ? test.mrate : test.nmrate,\\r\\n                        SamplePopupProperty.sampleno\\r\\n                      )\\r\\n                    \\\"\\r\\n                  />\\r\\n                  {{ test.testid }}\\r\\n                </div>\\r\\n                <div style=\\\"width: 60%; float: left\\\">{{ test.testname }}</div>\\r\\n                <div style=\\\"width: 15%; float: left\\\">{{ test.mrate }}</div>\\r\\n                <div style=\\\"width: 15%; float: left\\\">{{ test.nmrate }}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"testSelectionModel.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-success\\\"\\r\\n            (click)=\\\"updateSampleArray(testSelectionModel.hide())\\\"\\r\\n          >\\r\\n            Confirm\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n  </div>\\r\\n  <!-- /.modal -->\\r\\n  <!-- End Test selection model popup -->\\r\\n\\r\\n  <!--Start Validation model popup -->\\r\\n  <div\\r\\n    bsModal\\r\\n    #validationModel=\\\"bs-modal\\\"\\r\\n    class=\\\"modal fade\\\"\\r\\n    tabindex=\\\"-1\\\"\\r\\n    role=\\\"dialog\\\"\\r\\n    aria-labelledby=\\\"myModalLabel\\\"\\r\\n    aria-hidden=\\\"true\\\"\\r\\n  >\\r\\n    <div\\r\\n      *ngIf=\\\"pageValidationLoaderState.overall === 0\\\"\\r\\n      class=\\\"modal-dialog modal-primary\\\"\\r\\n      role=\\\"document\\\"\\r\\n    >\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">{{ validationPopupHeaderMessage }}</h4>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"close\\\"\\r\\n            (click)=\\\"validationModel.hide()\\\"\\r\\n            aria-label=\\\"Close\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div style=\\\"width: 100%; float: left\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Header Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <!-- {{pageValidationLoaderState.header}} -->\\r\\n                <!-- <img src=\\\"assets/img/others/check-green.gif\\\" style=\\\"width:40px;height:40px;\\\" /> -->\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Sample Gird Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Tests Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pageValidationLoaderState.overall === 1\\\" class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Database Transcation\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"validationModel.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n    <!-- End Processing Block -->\\r\\n\\r\\n    <div\\r\\n      *ngIf=\\\"pageValidationLoaderState.overall === 1\\\"\\r\\n      class=\\\"modal-dialog modal-success\\\"\\r\\n      role=\\\"document\\\"\\r\\n    >\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">{{ validationPopupHeaderMessage }}</h4>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"close\\\"\\r\\n            (click)=\\\"validationModel.hide()\\\"\\r\\n            aria-label=\\\"Close\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div style=\\\"width: 100%; float: left\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Header Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <!-- {{pageValidationLoaderState.header}} -->\\r\\n                <!-- <img src=\\\"assets/img/others/check-green.gif\\\" style=\\\"width:40px;height:40px;\\\" /> -->\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Sample Gird Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Tests Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pageValidationLoaderState.overall === 1\\\" class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Database Transcation\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            (click)=\\\"validationModel.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n    <!-- End Success block -->\\r\\n\\r\\n    <div\\r\\n      *ngIf=\\\"pageValidationLoaderState.overall === 2\\\"\\r\\n      class=\\\"modal-dialog modal-danger\\\"\\r\\n      role=\\\"document\\\"\\r\\n    >\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">{{ validationPopupHeaderMessage }}</h4>\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"close\\\"\\r\\n            (click)=\\\"validationModel.hide()\\\"\\r\\n            aria-label=\\\"Close\\\"\\r\\n          >\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <div style=\\\"width: 100%; float: left\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Header Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <!-- {{pageValidationLoaderState.header}} -->\\r\\n                <!-- <img src=\\\"assets/img/others/check-green.gif\\\" style=\\\"width:40px;height:40px;\\\" /> -->\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.header === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Sample Gird Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.samplegrid === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Tests Data\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.tests === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"pageValidationLoaderState.overall === 1\\\" class=\\\"row\\\">\\r\\n              <div style=\\\"width: 60%; float: left; padding: 15px\\\">\\r\\n                Database Transcation\\r\\n              </div>\\r\\n              <div style=\\\"width: 20%; float: left; padding: 15px\\\">\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 1\\\"\\r\\n                  src=\\\"assets/img/others/line-loader.svg\\\"\\r\\n                  style=\\\"width: 100%; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 2\\\"\\r\\n                  src=\\\"assets/img/others/tick.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n                <img\\r\\n                  *ngIf=\\\"pageValidationLoaderState.database === 3\\\"\\r\\n                  src=\\\"assets/img/others/remove.png\\\"\\r\\n                  style=\\\"width: 50px; height: 50px\\\"\\r\\n                />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <div style=\\\"width: 100%; float: left\\\">\\r\\n            <span\\r\\n              *ngFor=\\\"let error of validationErrors; index as errorIndex\\\"\\r\\n              style=\\\"width: 100%; color: red\\\"\\r\\n            >\\r\\n              {{ validationErrors[errorIndex].message }} <br />\\r\\n            </span>\\r\\n          </div>\\r\\n\\r\\n          <button\\r\\n            type=\\\"button\\\"\\r\\n            class=\\\"btn btn-secondary\\\"\\r\\n            id=\\\"btnClose\\\"\\r\\n            (click)=\\\"validationModel.hide()\\\"\\r\\n          >\\r\\n            Close\\r\\n          </button>\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- /.modal-content -->\\r\\n    </div>\\r\\n    <!-- /.modal-dialog -->\\r\\n    <!-- End Failure block -->\\r\\n  </div>\\r\\n  <!-- /.modal -->\\r\\n  <!-- End Validataion model popup -->\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <label for=\\\"name\\\">Add / Update Request Analysis</label>\\r\\n          <div style=\\\"float: right\\\">\\r\\n            <button\\r\\n              (click)=\\\"saveUpdateRequestAnalysis(); validationModel.show()\\\"\\r\\n              type=\\\"button\\\"\\r\\n              style=\\\"font-size: 1.2em\\\"\\r\\n              class=\\\"btn btn-sm btn-success\\\"\\r\\n            >\\r\\n              <i class=\\\"fa fa-plus\\\"></i> Save / Update\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- <button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\r\\n              {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\r\\n            </button> -->\\r\\n\\r\\n          <div class=\\\"col-sm-12\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Department</label>\\r\\n                  <select\\r\\n                    [disabled]=\\\"disableInput.deptid === 1\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.deptid\\\"\\r\\n                    (change)=\\\"loadLabList(); loadTestList()\\\"\\r\\n                  >\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option\\r\\n                      *ngFor=\\\"let dept of departmentList; index as a\\\"\\r\\n                      value=\\\"{{ departmentList[a].deptid }}\\\"\\r\\n                    >\\r\\n                      {{ departmentList[a].deptname }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Lab</label>\\r\\n                  <select\\r\\n                    [disabled]=\\\"disableInput.labid === 1\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.labid\\\"\\r\\n                    (change)=\\\"loadTestList(); loadSampleType()\\\"\\r\\n                  >\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option\\r\\n                      *ngFor=\\\"let lab of labList; index as b\\\"\\r\\n                      value=\\\"{{ labList[b].labid }}\\\"\\r\\n                    >\\r\\n                      {{ labList[b].labname }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Sample Return</label>\\r\\n                  <select\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.sample_return\\\"\\r\\n                  >\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option value=\\\"Y\\\">Yes</option>\\r\\n                    <option value=\\\"N\\\">No</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Mode of Payment</label>\\r\\n                  <select\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.mode_of_payment\\\"\\r\\n                  >\\r\\n                    <option value=\\\"\\\">-SELECT-</option>\\r\\n                    <option value=\\\"1\\\">Cheque</option>\\r\\n                    <option value=\\\"2\\\">DD</option>\\r\\n                    <option value=\\\"3\\\">Cash</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"name\\\">Despatch Date</label>\\r\\n                  <input\\r\\n                    type=\\\"date\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.despatch_date\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"ccmonth\\\">Mill Reference no</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.mill_reference_no\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"ccmonth\\\">Comments</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.comments\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div\\r\\n                *ngIf=\\\"\\r\\n                  formData.mode_of_payment === '1' ||\\r\\n                  formData.mode_of_payment === '2'\\r\\n                \\\"\\r\\n                class=\\\"col-sm-3\\\"\\r\\n              >\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"ccmonth\\\">DD / Cheque Reference</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"formData.dd_cheque_reference\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!--/.row-->\\r\\n          </div>\\r\\n          <!--End Left panel-->\\r\\n\\r\\n          <!-- End Header -->\\r\\n          <div class=\\\"col-sm-12\\\" style=\\\"float: left\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-header\\\" style=\\\"width: 100%; float: left\\\">\\r\\n                <span style=\\\"width: 25%; float: left\\\">Sample Details</span>\\r\\n                <!-- <span style=\\\"width:15%;float:left;font-weight: bold;\\\" >Test Charges : {{totalTestingCharge}}</span>\\r\\n                  <span style=\\\"width:25%;float:left;\\\" > Tax : </span> -->\\r\\n                <span style=\\\"width: 15%; float: right; font-weight: bold\\\"\\r\\n                  >Test Charges : {{ totalTestingCharge }}</span\\r\\n                >\\r\\n                <!-- <div style=\\\"float:right;width:85%;\\\">                    \\r\\n                    <input style=\\\"width:6%;float:right;\\\" maxlength=\\\"2\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" (keyup)=\\\"counter()\\\" [(ngModel)] = \\\"formData.noofsamples\\\"  >  \\r\\n                    <label for=\\\"name\\\" style=\\\"float:right;padding:5px;\\\">No of Sample(s)</label>\\r\\n                  </div> -->\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <input\\r\\n                    disabled\\r\\n                    type=\\\"hidden\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    [(ngModel)]=\\\"sampleEntryFormData.index\\\"\\r\\n                  />\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"name\\\"\\r\\n                        ><font color=\\\"red\\\">*</font>Sample Type</label\\r\\n                      >\\r\\n                      <select\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.sampletype\\\"\\r\\n                      >\\r\\n                        <option value=\\\"\\\">-SELECT-</option>\\r\\n                        <option\\r\\n                          *ngFor=\\\"let sampletype of sampleTypeLists; index as z\\\"\\r\\n                          value=\\\"{{ sampleTypeLists[z].sampleid }}\\\"\\r\\n                        >\\r\\n                          {{ sampleTypeLists[z].samplename }}\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\" *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"ccmonth\\\">Count (Ne)</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.count\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"ccmonth\\\"\\r\\n                        ><font color=\\\"red\\\">*</font>Desc 1</label\\r\\n                      >\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.desc1\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"ccmonth\\\">Desc 2</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.desc2\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <!-- <div class=\\\"col-sm-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"ccmonth\\\">Desc 3</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.desc3\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div> -->\\r\\n                  <div class=\\\"col-sm-2\\\" *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"ccmonth\\\">Ply</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.ply\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\" *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"ccmonth\\\">Blend</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.blend\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"ccmonth\\\">Remarks</label>\\r\\n                      <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        [(ngModel)]=\\\"sampleEntryFormData.remarks\\\"\\r\\n                      />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    <button\\r\\n                      type=\\\"button\\\"\\r\\n                      (click)=\\\"addUpdateSampleGrid()\\\"\\r\\n                      style=\\\"float: right; font-size: 0.8em\\\"\\r\\n                      class=\\\"btn btn-sm btn-success\\\"\\r\\n                    >\\r\\n                      <i class=\\\"fa fa-plus\\\"></i> Add / Update Sample\\r\\n                    </button>\\r\\n                    <!-- <button  type=\\\"button\\\" (click)=\\\"prePayloadTestSelectionPopup(0);loadTestList();testSelectionModel.show();\\\" style=\\\"float:right;font-size:0.8em;\\\"  class=\\\"btn btn-sm btn-success\\\">               \\r\\n                          <i class=\\\"fa fa-plus\\\"></i> Add / Update Tests\\r\\n                        </button> -->\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col-sm-12\\\">\\r\\n                    <table\\r\\n                      style=\\\"width: 100%\\\"\\r\\n                      class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\r\\n                    >\\r\\n                      <thead class=\\\"thead-light\\\">\\r\\n                        <tr>\\r\\n                          <th style=\\\"width: 8%\\\">Sample No</th>\\r\\n                          <th style=\\\"width: 15%\\\">Sample Type</th>\\r\\n                          <th style=\\\"width: 15%\\\" *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                            Count (Ne)\\r\\n                          </th>\\r\\n                          <th style=\\\"width: 15%\\\">Desc 1</th>\\r\\n                          <th style=\\\"width: 15%\\\">Desc 2</th>\\r\\n                          <th style=\\\"width: 15%\\\" *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                            Ply\\r\\n                          </th>\\r\\n                          <th style=\\\"width: 15%\\\" *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                            Blend\\r\\n                          </th>\\r\\n                          <th style=\\\"width: 15%\\\">Remarks</th>\\r\\n                          <th style=\\\"width: 3%\\\" colspan=\\\"3\\\">Action</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr\\r\\n                          *ngFor=\\\"\\r\\n                            let gridData of sampleGridData.data;\\r\\n                            index as j\\r\\n                          \\\"\\r\\n                        >\\r\\n                          <td>\\r\\n                            <p>{{ j + 1 }}</p>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <p>\\r\\n                              {{\\r\\n                                sampleTypeListForDisplay[gridData.sampletype]\\r\\n                              }}\\r\\n                            </p>\\r\\n                          </td>\\r\\n                          <td *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                            <p>{{ gridData.count }}</p>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <p>{{ gridData.desc1 }}</p>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <p>{{ gridData.desc2 }}</p>\\r\\n                          </td>\\r\\n                          <td *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                            <p>{{ gridData.ply }}</p>\\r\\n                          </td>\\r\\n                          <td *ngIf=\\\"formData.labid == '1'\\\">\\r\\n                            <p>{{ gridData.blend }}</p>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <p>{{ gridData.remarks }}</p>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <div style=\\\"float: left\\\">\\r\\n                              <i\\r\\n                                class=\\\"icon-pencil\\\"\\r\\n                                style=\\\"\\r\\n                                  color: green;\\r\\n                                  font-size: 1.3em;\\r\\n                                  cursor: pointer;\\r\\n                                \\\"\\r\\n                                (click)=\\\"editSampleGridDataRow(j, gridData)\\\"\\r\\n                                title=\\\"Edit\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <div style=\\\"float: left\\\">\\r\\n                              <i\\r\\n                                class=\\\"icon-trash\\\"\\r\\n                                style=\\\"\\r\\n                                  color: red;z\\r\\n                                  font-size: 1.3em;\\r\\n                                  cursor: pointer;\\r\\n                                \\\"\\r\\n                                (click)=\\\"removeSampleGridDataRow(j)\\\"\\r\\n                                title=\\\"Delete\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                          <td>\\r\\n                            <div style=\\\"float: left\\\">\\r\\n                              <i\\r\\n                                class=\\\"icon-layers\\\"\\r\\n                                style=\\\"\\r\\n                                  color: green;\\r\\n                                  font-size: 1.3em;\\r\\n                                  cursor: pointer;\\r\\n                                \\\"\\r\\n                                (click)=\\\"\\r\\n                                  prePayloadTestSelectionPopup(j);\\r\\n                                  testSelectionModel.show()\\r\\n                                \\\"\\r\\n                                title=\\\"Add / Update Tests\\\"\\r\\n                              ></i>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!--Row end -->\\r\\n                <!-- <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                         <label style=\\\"font-weight: bold;text-decoration: underline;\\\">Sample Type</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-1\\\">\\r\\n                      <div class=\\\"form-group\\\">                            \\r\\n                        <label style=\\\"font-weight: bold;text-decoration: underline;\\\">Count</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                      <div class=\\\"form-group\\\">                            \\r\\n                        <label style=\\\"font-weight: bold;text-decoration: underline;\\\">Desc 1</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label style=\\\"font-weight: bold;text-decoration: underline;\\\">Desc 2</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                      <div class=\\\"form-group\\\">                            \\r\\n                        <label style=\\\"font-weight: bold;text-decoration: underline;\\\">Desc 3</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-2\\\">\\r\\n                      <div class=\\\"form-group\\\">                            \\r\\n                        <label style=\\\"font-weight: bold;text-decoration: underline;\\\">Remarks</label>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  </div>\\r\\n                 <div class=\\\"row\\\"  *ngFor='let sampleno of sampleNoArray;let i = index' >\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div style=\\\"width:5%;float: left;\\\">\\r\\n                              <label style=\\\"font-weight: bold;text-align: left;\\\">{{i+1}}.&nbsp;</label>\\r\\n                            </div>\\r\\n                          \\r\\n                            <div style=\\\"width:94%;float: left;\\\">\\r\\n                              <select class=\\\"form-control\\\"    >\\r\\n                                  <option value=\\\"\\\">-SELECT-</option>\\r\\n                              </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-1\\\">\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  >\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  >\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  >\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  >\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  >\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n\\r\\n                    </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- End Samples block-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/.row-->\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">Physics Tests Rate</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 30%\\\">\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"exampleFormControlInput1\\\"\\r\\n              placeholder=\\\"Search...\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <br />\\r\\n          <table\\r\\n            style=\\\"width: 100%\\\"\\r\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\r\\n          >\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th style=\\\"width: 10%\\\">Lab name</th>\\r\\n                <th style=\\\"width: 30%\\\">Test Name</th>\\r\\n                <th style=\\\"width: 15%\\\">Alias</th>\\r\\n                <th style=\\\"width: 25%\\\">NABL Standar</th>\\r\\n                <th style=\\\"width: 10%\\\">Sample size</th>\\r\\n                <th style=\\\"width: 5%\\\">Member rate</th>\\r\\n                <th style=\\\"width: 5%\\\">Non-Member rate</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let testrate of testRates; index as j\\\">\\r\\n                <!--<option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}></option>-->\\r\\n                <td>\\r\\n                  <div>{{ testrate.labname }}</div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.testname }}</div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.alias }}</div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.standard }}</div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.samplesize }}</div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.memrate }}</div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.nonmemrate }}</div>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr />\\r\\n          <nav aria-label=\\\"Page navigation example\\\">\\r\\n            <ul class=\\\"pagination justify-content-center\\\">\\r\\n              <li class=\\\"page-item\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"logout\\\">Previous</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"logout\\\">1</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"logout\\\">2</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"logout\\\">3</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"logout\\\">Next</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/ End Table-->\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"border: 1px solid #127b6e\\\">\\r\\n        <div\\r\\n          class=\\\"card-header\\\"\\r\\n          style=\\\"color: white; font-weight: bold; background-color: #127b6e\\\"\\r\\n        >\\r\\n          {{ tableHeading }}\\r\\n          <div\\r\\n            *ngIf=\\\"loaderFlag == true\\\"\\r\\n            class=\\\"spinner-border text-primary\\\"\\r\\n            role=\\\"status\\\"\\r\\n          >\\r\\n            <span class=\\\"sr-only\\\">Loading...</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div *ngIf=\\\"searchText == ''\\\" style=\\\"width: 10%; float: left\\\">\\r\\n            <select\\r\\n              (change)=\\\"changeDisplayCount()\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              [(ngModel)]=\\\"apiParams.tablerowlimit\\\"\\r\\n            >\\r\\n              <option value=\\\"10\\\">10</option>\\r\\n              <option value=\\\"25\\\">25</option>\\r\\n              <option value=\\\"50\\\">50</option>\\r\\n              <option value=\\\"100\\\">100</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 30%\\\">\\r\\n            <input\\r\\n              (keyup)=\\\"getData()\\\"\\r\\n              [(ngModel)]=\\\"searchText\\\"\\r\\n              type=\\\"text\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              id=\\\"exampleFormControlInput1\\\"\\r\\n              placeholder=\\\"Search Test name or Standard\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <br />\\r\\n          <nav\\r\\n            style=\\\"width: 100%; float: left\\\"\\r\\n            *ngIf=\\\"searchText == ''\\\"\\r\\n            aria-label=\\\"Page navigation example\\\"\\r\\n          >\\r\\n            <div style=\\\"float: left\\\">\\r\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\r\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\r\\n                {{ pageCount }}</span\\r\\n              >\\r\\n            </div>\\r\\n            <ul class=\\\"pagination justify-content-center\\\">\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                *ngFor=\\\"\\r\\n                  let pageno of pagenationConfiguration.pageNos;\\r\\n                  let i = index\\r\\n                \\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\r\\n              >\\r\\n                <span\\r\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\r\\n                  style=\\\"color: white\\\"\\r\\n                  class=\\\"page-link page-link-active\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n                <span\\r\\n                  *ngIf=\\\"\\r\\n                    pageno != pagenationConfiguration.currentPageNo &&\\r\\n                    pageno != undefined\\r\\n                  \\\"\\r\\n                  class=\\\"page-link\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n          <table\\r\\n            style=\\\"width: 100%\\\"\\r\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\r\\n          >\\r\\n            <thead class=\\\"thead-light\\\">\\r\\n              <tr>\\r\\n                <th style=\\\"width: 10%\\\">Lab name</th>\\r\\n                <th style=\\\"width: 30%\\\">Test Name</th>\\r\\n                <th style=\\\"width: 15%\\\">Alias</th>\\r\\n                <th style=\\\"width: 25%\\\">NABL Standar</th>\\r\\n                <th style=\\\"width: 10%\\\">Sample size</th>\\r\\n                <!-- <th style=\\\"width:5%;\\\">Member rate</th>                  \\r\\n                  <th style=\\\"width:5%;\\\">Non-Member rate</th>                   -->\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let testrate of testRates; index as j\\\">\\r\\n                <!--<option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}></option>-->\\r\\n                <td>\\r\\n                  <div>{{ testrate.labname }}</div>\\r\\n                </td>\\r\\n                <!-- <td>\\r\\n                  <div>{{ testrate.testname }}</div>\\r\\n                </td> -->\\r\\n                <td>\\r\\n                  <div>\\r\\n                    <span [innerHTML]=\\\"testrate.testname\\\"></span>\\r\\n                  </div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div><span [innerHTML]=\\\"testrate.alias\\\"></span></div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.standard }}</div>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <div>{{ testrate.samplesize }}</div>\\r\\n                </td>\\r\\n                <!-- <td>\\r\\n                    <div>{{testrate.memrate}}</div>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <div>{{testrate.nonmemrate}}</div>\\r\\n                  </td> -->\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr />\\r\\n          <nav\\r\\n            style=\\\"width: 100%; float: left\\\"\\r\\n            *ngIf=\\\"searchText == ''\\\"\\r\\n            aria-label=\\\"Page navigation example\\\"\\r\\n          >\\r\\n            <div style=\\\"float: left\\\">\\r\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\r\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\r\\n                {{ pageCount }}</span\\r\\n              >\\r\\n            </div>\\r\\n            <ul class=\\\"pagination justify-content-center\\\">\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\r\\n                  >Previous</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n                *ngFor=\\\"\\r\\n                  let pageno of pagenationConfiguration.pageNos;\\r\\n                  let i = index\\r\\n                \\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\r\\n              >\\r\\n                <span\\r\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\r\\n                  style=\\\"color: white\\\"\\r\\n                  class=\\\"page-link page-link-active\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n                <span\\r\\n                  *ngIf=\\\"\\r\\n                    pageno != pagenationConfiguration.currentPageNo &&\\r\\n                    pageno != undefined\\r\\n                  \\\"\\r\\n                  class=\\\"page-link\\\"\\r\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\r\\n                >\\r\\n                  {{ pageno }}\\r\\n                </span>\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n              <li\\r\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\r\\n                class=\\\"page-item disabled\\\"\\r\\n                style=\\\"cursor: pointer\\\"\\r\\n              >\\r\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\r\\n                  >Next</span\\r\\n                >\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!--/.col-->\\r\\n  </div>\\r\\n  <!--/ End Table-->\\r\\n</div>\\r\\n\";","export default \"<p>testrate works!</p>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <strong>SITRA'S STANDARD 40s UKG CF - Entries</strong>\\n            <small style=\\\"float:right;\\\"><span style=\\\"color:red;\\\">*</span> indicates its mandatory</small>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>Count</label>                  \\n                  <!--<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter Count\\\" [(ngModel)]=\\\"ukgFormData.count\\\">-->\\n                  <select class=\\\"form-control\\\" id=\\\"ccmonth\\\" [(ngModel)]=\\\"ukgFormData.count\\\">\\n                    <option value=\\\"\\\">-SELECT-</option>\\n                    <option *ngFor=\\\"let paidCount of paidCountLists; index as i;\\\" value={{paidCountLists[i].ukgcount}}>\\n                      {{paidCountLists[i].ukgcount}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div><!--/.row-->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-sm-12\\\">\\n                  <label for=\\\"ccmonth\\\"><span style=\\\"color:red;\\\">*</span>Yarn Type</label>\\n                  <select class=\\\"form-control\\\" id=\\\"ccmonth\\\" [(ngModel)]=\\\"ukgFormData.variety\\\">\\n                    <option value=\\\"\\\">-SELECT-</option>\\n                    <option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}>\\n                        {{varietyNameList[i].varietyname}}\\n                    </option>\\n                  </select>\\n                </div>                \\n              </div><!--/.row-->\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <button type=\\\"button\\\" (click)=\\\"getSitraStandardUkgData()\\\" class=\\\"btn btn-sm btn-primary\\\">               \\n              <i class=\\\"fa fa-dot-circle-o\\\"></i> Search\\n            </button>\\n            <button type=\\\"button\\\" (click)=\\\"resetFormData()\\\" class=\\\"btn btn-sm btn-danger\\\"><i class=\\\"fa fa-ban\\\"></i> Reset</button>\\n            <div *ngIf=\\\"spinnerSitraStd == true\\\" class=\\\"spinner-border text-success\\\" role=\\\"status\\\" style=\\\"float:right;\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n            </div>\\n            <span *ngIf=\\\"errorFlag === true\\\" style=\\\"color:red;float:right;\\\">No Record found</span> \\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\" style=\\\"text-align: center;\\\">\\n              <strong>SITRA'S STANDARD 40s UKG CF - Results</strong>\\n              <small></small>\\n            </div>\\n            <div class=\\\"card-body col-sm-12\\\" style=\\\"float:left;\\\">              \\n                <!-- Start Speed data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-primary\\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">Spindle Speed (RPM)</div>\\n                    <i class=\\\"icon-cursor\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{sitraUkgFactors.speed}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End Speed data -->\\n\\n                <!-- Start TM data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-success\\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">TM</div>\\n                    <i class=\\\"icon-layers\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{sitraUkgFactors.tm}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End TM data -->\\n                <!-- Start TPI data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-danger \\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">TPI</div>\\n                    <i class=\\\"icon-graph\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{sitraUkgFactors.tpi}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End TPI data --> \\n                <!-- Start TPI data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-pink\\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">40s UKG CF</div>\\n                    <i class=\\\"icon-calculator\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{sitraUkgFactors.ukgfactor}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End TPI data -->              \\n            </div>\\n          </div>\\n        </div><!--/.col-->        \\n      </div><!--/.col-->\\n    </div><!--/.row-->\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            Previous Transaction(s)\\n          </div>\\n          <div class=\\\"card-body\\\">            \\n            <br>\\n            <table style=\\\"width:100%;\\\" class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"width:5%;\\\" class=\\\"text-center\\\">S.No</th>\\n                  <th style=\\\"width:15%;\\\">Yarn Count(Ne)</th>\\n                  <th style=\\\"width:20%;\\\">Yarn Type</th>\\n                  <th style=\\\"width:15%;\\\">Spindle Speed (RPM)</th>                \\n                  <th style=\\\"width:15%;\\\">TM</th>\\n                  <th style=\\\"width:15%;\\\">TPI</th>\\n                  <th style=\\\"width:15%;\\\">SITRA 40's UKG CF</th>                  \\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let transcation of transcationHistory; index as j;\\\">\\n                <!--<option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}></option>-->\\n                  <td class=\\\"text-center\\\">\\n                    <div>{{ (j+1) }}</div>\\n                  </td>               \\n                  <td >\\n                    <div>{{transcation.count}}</div>                    \\n                  </td>\\n                  <td>\\n                    <div>{{varietyNames[transcation.variety]}}</div>                    \\n                  </td>\\n                  <td>\\n                    <div>{{transcation.speed}}</div>\\n                  </td>\\n                  <td>\\n                    <div>{{transcation.tm}}</div>\\n                  </td>\\n                  <td>\\n                    <div>{{transcation.tpi}}</div>\\n                  </td>\\n                  <td>\\n                    <div>{{transcation.ukgfactor}}</div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n    </div><!--/ End Table-->\\n  </div>\\n  \";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <strong>Mill's Actual Process Parameters</strong>\\n            <small style=\\\"float:right;\\\"><span style=\\\"color:red;\\\">*</span> indicates its mandatory</small>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>Actual Count</label>\\n                  <!--<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter Count\\\" [(ngModel)]=\\\"ukgmillFormData.count\\\">-->\\n                  <select class=\\\"form-control\\\" id=\\\"ccmonth\\\" [(ngModel)]=\\\"ukgmillFormData.count\\\" (change)=\\\"loadUkgmillSpeedsAndTms()\\\">\\n                    <option value=\\\"\\\">-SELECT-</option>\\n                    <option *ngFor=\\\"let paidCount of paidCountLists; index as i;\\\" value={{paidCountLists[i].ukgcount}}>\\n                      {{paidCountLists[i].ukgcount}}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div><!--/.row-->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"form-group col-sm-12\\\">\\n                  <label for=\\\"ccmonth\\\"><span style=\\\"color:red;\\\">*</span>Yarn Type</label>\\n                  <select class=\\\"form-control\\\" id=\\\"ccmonth\\\" [(ngModel)]=\\\"ukgmillFormData.variety\\\" (change)=\\\"loadUkgmillSpeedsAndTms()\\\">\\n                    <option value=\\\"\\\">-SELECT-</option>\\n                    <option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}>\\n                        {{varietyNameList[i].varietyname}}\\n                    </option>\\n                  </select>\\n                </div>                \\n              </div><!--/.row-->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>Spindle Speed (RPM)</label>                    \\n                    <!--<input type=\\\"range\\\" class=\\\"form-range\\\" min=\\\"5000\\\" max=\\\"20000\\\" step=\\\"10\\\" [(ngModel)]=\\\"ukgmillFormData.speed\\\">\\n                    <label for=\\\"name\\\"><span style=\\\"color:red;\\\">(Min: 5000 - Max 20000)</span></label>                    \\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter Speed\\\" disabled [(ngModel)]=\\\"ukgmillFormData.speed\\\"> -->\\n                    <select class=\\\"form-control\\\" id=\\\"ccmonth\\\" [(ngModel)]=\\\"ukgmillFormData.speed\\\">\\n                      <option value=\\\"\\\">-SELECT-</option>\\n                      <option *ngFor=\\\"let paidSpeed of paidSpeeds; index as i;\\\" value={{paidSpeeds[i].speed}}>\\n                        {{paidSpeeds[i].speed}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div><!--End Speed-->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>TM</label>\\n                    <!--<input type=\\\"range\\\" class=\\\"form-range\\\" min=\\\"2.0\\\" max=\\\"10.0\\\" step=\\\"0.1\\\" [(ngModel)]=\\\"ukgmillFormData.tm\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter TM\\\" [(ngModel)]=\\\"ukgmillFormData.tm\\\"> -->\\n                    <select class=\\\"form-control\\\" id=\\\"ccmonth\\\" [(ngModel)]=\\\"ukgmillFormData.tm\\\">\\n                      <option value=\\\"\\\">-SELECT-</option>\\n                      <option *ngFor=\\\"let paidTm of paidTms; index as i;\\\" value={{paidTms[i].tm}}>\\n                        {{paidTms[i].tm}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div><!--End TPI-->\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <button type=\\\"button\\\" (click)=\\\"getMillStandardUkgData()\\\" class=\\\"btn btn-sm btn-primary\\\">               \\n              <i class=\\\"fa fa-dot-circle-o\\\"></i> Search\\n            </button>\\n            <button type=\\\"button\\\" (click)=\\\"resetFormData()\\\" class=\\\"btn btn-sm btn-danger\\\"><i class=\\\"fa fa-ban\\\"></i> Reset</button>\\n            <div *ngIf=\\\"spinnerSitraStd == true\\\" class=\\\"spinner-border text-success\\\" role=\\\"status\\\" style=\\\"float:right;\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n            </div>\\n            <span *ngIf=\\\"errorFlag === true\\\" style=\\\"color:red;float:right;\\\">{{ errorMessage }}</span>  \\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n      <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\" style=\\\"text-align: center;\\\">\\n              <strong>Mill's Actual 40s UKG CF - Results</strong>\\n              <small></small>\\n            </div>\\n            <div class=\\\"card-body col-sm-12\\\" style=\\\"float:left;\\\">              \\n                <!-- Start Speed data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-primary\\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">Spindle Speed (RPM)</div>\\n                    <i class=\\\"icon-cursor\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{ukgmillFormData.speed}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End Speed data -->\\n\\n                <!-- Start TM data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-success\\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">TM</div>\\n                    <i class=\\\"icon-layers\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{ukgmillFormData.tm}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End TM data -->\\n                <!-- Start TPI data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-danger\\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">TPI</div>\\n                    <i class=\\\"icon-graph\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{sitraUkgFactors.tpi}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End TPI data --> \\n                <!-- Start TPI data -->\\n                <div class=\\\"col-sm-6\\\" style=\\\"float:left;\\\">\\n                  <div class=\\\"card text-white bg-pink\\\" style=\\\"text-align: center;\\\">\\n                    <div style=\\\"font-weight: bold;font-size:1.5em;\\\">40s UKG CF</div>\\n                    <i class=\\\"icon-calculator\\\"></i>                   \\n                    <div class=\\\"card-body\\\" style=\\\"text-align: center;\\\">\\n                      <div class=\\\"text-value\\\" style=\\\"font-weight: bold;font-size:1.5em;\\\">{{sitraUkgFactors.ukgfactor}}</div>                      \\n                    </div> \\n                  </div>\\n                </div><!--/.col-->\\n                <!-- End TPI data -->              \\n            </div>\\n          </div>\\n        </div><!--/.col-->        \\n      </div><!--/.col-->\\n    </div><!--/.row-->\\n    <hr />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            Previous Transaction(s)\\n          </div>\\n          <div class=\\\"card-body\\\">            \\n            <br>\\n            <table style=\\\"width:100%;\\\" class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\n              <thead class=\\\"thead-light\\\">\\n                <tr>\\n                  <th style=\\\"width:5%;\\\" class=\\\"text-center\\\">S.No</th>\\n                  <th style=\\\"width:15%;\\\">Yarn Count(Ne)</th>\\n                  <th style=\\\"width:20%;\\\">Yarn Type</th>\\n                  <th style=\\\"width:15%;\\\">Spindle Speed (RPM)</th>                \\n                  <th style=\\\"width:15%;\\\">TM</th>\\n                  <th style=\\\"width:15%;\\\">TPI</th>\\n                  <th style=\\\"width:15%;\\\">Mill's actual 40's UKG CF</th>                  \\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let transcation of transcationHistory; index as j;\\\">\\n                <!--<option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}></option>-->\\n                  <td class=\\\"text-center\\\">\\n                    <div>{{ (j+1) }}</div>\\n                  </td>               \\n                  <td >\\n                    <div>{{transcation.count}}</div>                    \\n                  </td>\\n                  <td>\\n                    <div>{{varietyNames[transcation.variety]}}</div>                    \\n                  </td>\\n                  <td>\\n                    <div>{{transcation.speed}}</div>\\n                  </td>\\n                  <td>\\n                    <div>{{transcation.tm}}</div>\\n                  </td>\\n                  <td>\\n                    <div>{{transcation.tpi}}</div>\\n                  </td>\\n                  <td>\\n                    <div>{{transcation.ukgfactor}}</div>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n    </div><!--/ End Table-->\\n  </div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div style=\\\"float:right;width:100%;\\\">\\n          <span style=\\\"float: right;font-weight: bold;\\\">For queries contact, engg@sitra.org.in, mmk@sitra.org.in 0422-4215344, 374</span>\\n        </div>\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>Payment for</label>            \\n            <select class=\\\"form-control col-sm-4\\\" [(ngModel)]=\\\"ukgFormData.paytype\\\" >\\n                <option value=\\\"1\\\">SITRA'S STANDARD 40s UKG CF</option>\\n                <option value=\\\"2\\\">40s UKG CF Adjusted to Mill Parameters</option>\\n            </select>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-2\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>Actual Count (Ne)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter Count\\\" (change)=\\\"validateCountRate()\\\" [(ngModel)]=\\\"ukgFormData.count\\\">\\n                  <span style=\\\"font-size:11px;color:red;\\\">*valid count Range : 10 - 120</span>\\n                </div>\\n              </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"ccmonth\\\"><span style=\\\"color:red;\\\">*</span>Yarn Type</label>\\n                    <select class=\\\"form-control\\\" id=\\\"ccmonth\\\" [(ngModel)]=\\\"ukgFormData.variety\\\">\\n                    <option value=\\\"\\\">-SELECT-</option>\\n                    <option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}>\\n                        {{varietyNameList[i].varietyname}}\\n                    </option>\\n                    </select>\\n                </div>\\n                <div *ngIf=\\\"ukgFormData.paytype == '2'\\\" class=\\\"col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>Avg. Spindle Speed (RPM)</label>                    \\n                      <!--<input type=\\\"range\\\" class=\\\"form-range\\\" min=\\\"5000\\\" max=\\\"25000\\\" step=\\\"10\\\" [(ngModel)]=\\\"ukgFormData.speed\\\">-->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" (change)=\\\"validateSpindleSpeed()\\\" placeholder=\\\"Enter Speed\\\" [(ngModel)]=\\\"ukgFormData.speed\\\">\\n                      <label for=\\\"name\\\"><span style=\\\"color:red;\\\">(Min: 5000 - Max 25000)</span></label>                    \\n                    </div>\\n                </div>                \\n                <div *ngIf=\\\"ukgFormData.paytype == '2'\\\" class=\\\"col-sm-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"name\\\"><span style=\\\"color:red;\\\">*</span>TM</label>\\n                      <!--<input type=\\\"range\\\" class=\\\"form-range\\\" min=\\\"2.0\\\" max=\\\"10.0\\\" step=\\\"0.1\\\" [(ngModel)]=\\\"ukgFormData.tm\\\">-->\\n                      <input type=\\\"text\\\" appOnlynumber class=\\\"form-control\\\" id=\\\"name\\\" (change)=\\\"validateTm()\\\" placeholder=\\\"Enter TM\\\" [(ngModel)]=\\\"ukgFormData.tm\\\">\\n                      <label for=\\\"name\\\"><span style=\\\"color:red;\\\">(Min: 2 - Max 10)</span></label>                    \\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-sm-2\\\">\\n                    <div style=\\\"margin-top:30px;\\\">\\n                        <button type=\\\"button\\\" style=\\\"font-size:1em;\\\" (click)=\\\"addNewRecord1()\\\"  class=\\\"btn btn-sm btn-primary\\\">               \\n                            <i class=\\\"fa fa-dot-circle-o\\\"></i> Add\\n                        </button>\\n                        <button type=\\\"button\\\" style=\\\"font-size:1em;\\\" (click)=\\\"resetFormData()\\\" class=\\\"btn btn-sm btn-danger\\\"><i class=\\\"fa fa-ban\\\"></i> Reset</button>\\n                        <div *ngIf=\\\"spinnerSitraStd == true\\\" class=\\\"spinner-border text-success\\\" role=\\\"status\\\" style=\\\"float:right;\\\">\\n                            <span class=\\\"sr-only\\\">Loading...</span>\\n                        </div>\\n                        <span *ngIf=\\\"errorFlag === true\\\" style=\\\"color:red;float:right;\\\">No Record found</span> \\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <span *ngIf=\\\"errorMessage !== '' \\\" style=\\\"color:red;float:left;\\\">{{ errorMessage }}</span> \\n                </div>\\n              </div><!--/.row-->\\n          </div>\\n        </div>\\n      </div><!--/.col-->\\n    </div><!--/.row-->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <span class=\\\"col-md-3\\\">Pending Transaction(s)</span>\\n                <span class=\\\"col-md-3\\\" style=\\\"font-weight:bold;\\\">No of Count selected : {{ noofSelectedCount }}</span>\\n                <span class=\\\"col-md-3\\\" style=\\\"font-weight:bold;\\\">Total amount to Pay : {{ totalAmountToPay }}</span>\\n                <!--<a  *ngIf=\\\"SessionCustomerId > 0 && totalAmountToPay > 0\\\"  style=\\\"float:right;font-size:1.2em;\\\" href=\\\"httP://192.168.1.7:82/hdfcpg/?customerid={{encryptedCustomerId}}\\\">-->\\n                  <button (click)=\\\"doPayNow()\\\" type=\\\"button\\\" style=\\\"font-size:1.2em;\\\"  class=\\\"btn btn-sm btn-primary\\\">               \\n                    <i class=\\\"fa fa-dot-circle-o\\\"></i> Pay Now\\n                  </button>\\n                  <!--<span>Customer Id : {{ SessionCustomerId }}</span>-->\\n                <!--</a>-->\\n                <!--<button style=\\\"float:right;font-size:1.2em;\\\" type=\\\"button\\\" (click)=\\\"doPayNow()\\\" class=\\\"btn btn-sm btn-success\\\"><i class=\\\"fa fa-ban\\\"></i> Paynow</button>-->\\n            </div>\\n            <div class=\\\"card-body\\\">                          \\n              <table style=\\\"width:100%;\\\" class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\n                <thead class=\\\"thead-light\\\">\\n                  <tr>\\n                    <th style=\\\"width:5%;\\\" class=\\\"text-center\\\">S.No</th>\\n                    <th style=\\\"width:15%;\\\">Type</th>\\n                    <th style=\\\"width:15%;\\\">Yarn Count(Ne)</th>\\n                    <th style=\\\"width:25%;\\\">Yarn Type</th>\\n                    <th style=\\\"width:15%;\\\">Spindle Speed (RPM)</th>                \\n                    <th style=\\\"width:15%;\\\">TM</th>\\n                    <th style=\\\"width:5%;\\\">Action</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let transcation of transcationHistory; index as j;\\\">\\n                  <!--<option *ngFor=\\\"let varieties of varietyNameList; index as i;\\\" value={{varietyNameList[i].id}}></option>-->\\n                    <td class=\\\"text-center\\\">\\n                      <div>{{ (j+1) }}</div>\\n                    </td>               \\n                    <td *ngIf=\\\"transcation.paytype === '1'\\\" >\\n                      <div>SITRA's Std. UKG CF</div>                    \\n                    </td>\\n                    <td *ngIf=\\\"transcation.paytype === '2'\\\" >\\n                      <div>Mill Adjusted 40s UKG CF</div>                    \\n                    </td>\\n                    <td >\\n                        <div>{{transcation.count}}</div>                    \\n                      </td>\\n                    <td>\\n                      <div>{{varietyNames[transcation.variety]}}</div>                    \\n                    </td>\\n                    <td>\\n                      <div>{{transcation.speed}}</div>\\n                    </td>\\n                    <td>\\n                      <div>{{transcation.tm}}</div>\\n                    </td>\\n                     \\n                    <td>\\n                      <div><i (click)=\\\"removeDataRow(j)\\\" class=\\\"icon-trash\\\" style=\\\"font-size:1.3em;color:#F64846;cursor:pointer;\\\"></i>   </div>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n          </div>\\n        </div><!--/.col-->\\n      </div><!--/ End Table-->\\n</div>\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"card\\\" style=\\\"border: 0px solid red; background-color: #ddd\\\">\\n      <div class=\\\"card-body\\\" style=\\\"border: 0px solid red\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"border1 col-sm-4\\\" style=\\\"border: 1px solid green\\\">\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Inward No</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.inwardno\\n              }}</label>\\n            </div>\\n            <!-- <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\">Inward No</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.inwardno }}</label>\\n            </div> -->\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Inward Date</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.inward_date.slice(0, 11)\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Sample rerturn</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label\\n                *ngIf=\\\"inwardPageDetails.samplesreturn === 'Y'\\\"\\n                class=\\\"fullwidth\\\"\\n                style=\\\"width: 20%; text-align: left\\\"\\n                >Yes</label\\n              >\\n              <label\\n                *ngIf=\\\"inwardPageDetails.samplesreturn !== 'Y'\\\"\\n                class=\\\"fullwidth\\\"\\n                style=\\\"width: 20%; text-align: left\\\"\\n                >No</label\\n              >\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Express Testing</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.exp_testing\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Comments</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.nablcomment\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Customer Type</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.custtype\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Sample Received on</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.sample_received_date\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Combo Selection</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.is_combo\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Test Condition</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.test_condition_based\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\" style=\\\"float: left; width: 100%\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\" style=\\\"width: 45%\\\"\\n                >Sample Received Condition</label\\n              >\\n              <label style=\\\"width: 10%\\\">:</label>\\n              <label class=\\\"fullwidth\\\" style=\\\"width: 20%; text-align: left\\\">{{\\n                inwardPageDetails.sample_received_condition\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\">Customer</label>\\n              <label class=\\\"fullwidth fontbold\\\">{{\\n                inwardPageDetails.name\\n              }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.address1 }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.address2 }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.city }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.state }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.pincode }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Contact details</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.phoneno }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.mobile }}</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.emailid }}</label>\\n              <label class=\\\"fullwidth\\\"></label>\\n              <label class=\\\"fullwidth\\\"></label>\\n\\n              <!-- <label class=\\\"fullwidth fontbold fontunderline\\\">Sample Statistics</label>\\n                        <div class=\\\"chart-wrapper\\\">\\n                            <canvas baseChart class=\\\"chart\\\"\\n                            [data]=\\\"pieChartData\\\"\\n                            [labels]=\\\"pieChartLabels\\\"\\n                            [chartType]=\\\"pieChartType\\\"\\n                            (chartHover)=\\\"chartHovered($event)\\\"\\n                            (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n                          </div> -->\\n            </div>\\n          </div>\\n          <div class=\\\"border2 col-sm-3\\\" style=\\\"border: 1px solid green\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\">Request.No</label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.reqno }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Reference.No</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.refno }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Request. Date</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.reqdate.slice(0, 11)\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Amount Received</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.receiptno }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Receipt Date</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.receiptdate.slice(0, 11)\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Inward Comments</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.comments }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Invoice Comments</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.invoicecomment\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >No of Sample(s)</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.noofsamples\\n              }}</label>\\n            </div>\\n            <!-- <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Sample Received on</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.sample_received_date\\n              }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Combo Selection\\n              </label>\\n              <label class=\\\"fullwidth\\\">{{ inwardPageDetails.is_combo }}</label>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Test Condition</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.test_condition_based\\n              }}</label>\\n            </div>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Sample Received Condition</label\\n              >\\n              <label class=\\\"fullwidth\\\">{{\\n                inwardPageDetails.sample_received_condition\\n              }}</label>\\n            </div> -->\\n            <!-- <div class=\\\"col-sm-12\\\">\\n                        <label class=\\\"fullwidth fontbold fontunderline\\\">Sample Statistics</label>\\n                        <div class=\\\"chart-wrapper\\\">\\n                            <canvas baseChart class=\\\"chart\\\"\\n                            [data]=\\\"pieChartData\\\"\\n                            [labels]=\\\"pieChartLabels\\\"\\n                            [chartType]=\\\"pieChartType\\\"\\n                            (chartHover)=\\\"chartHovered($event)\\\"\\n                            (chartClick)=\\\"chartClicked($event)\\\"\\n                            [colors]=\\\"colors\\\"></canvas>\\n                          </div>\\n                    </div> -->\\n          </div>\\n          <div class=\\\"border3 col-sm-4\\\" style=\\\"border: 1px solid green\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label class=\\\"fontbold\\\" style=\\\"width: 45%\\\">Invoice No</label>\\n                <!-- <label style=\\\"width:10%;\\\">:</label> -->\\n                <label class=\\\"fontbold\\\" style=\\\"width: 30%; text-align: right\\\">{{\\n                  inwardPageDetails.invoiceno\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <label class=\\\"fullwidth fontunderline fontbold\\\"\\n                >Charge Details</label\\n              >\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Testing Charge</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.testcharges\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Discount (-)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.discount\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Sub total (A)</label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.subtotal_a\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Other Charges (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.other_charge\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Additional Charges (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.additional_charge\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Taxable Value (B)</label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.taxable_charge\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">CGST (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.cgst\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">SGST (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.sgst\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">IGST (+)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.igst\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Sub Total (B)</label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.subtotal_b\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\">Rounded Off (+ / -)</label>\\n                <label style=\\\"width: 10%\\\">:</label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.rounded_off\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label class=\\\"fontbold\\\" style=\\\"width: 45%\\\"\\n                  >Net Bill value</label\\n                >\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label style=\\\"width: 20%; text-align: right\\\">{{\\n                  inwardPageDetails.netamt\\n                }}</label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n              <div style=\\\"float: left; width: 100%\\\">\\n                <label style=\\\"width: 45%\\\"></label>\\n                <label style=\\\"width: 10%\\\"></label>\\n                <label\\n                  style=\\\"\\n                    width: 20%;\\n                    text-align: right;\\n                    border-bottom: 1px solid #1dab72;\\n                  \\\"\\n                ></label>\\n                <label style=\\\"width: 20%; text-align: left\\\"></label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!--/.row-->\\n</div>\\n\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"col-md-12\\\" style=\\\"float: left\\\">\\n    <div style=\\\"float: left\\\">\\n      <div\\n        style=\\\"float: left; height: 10px; width: 10px; background-color: green\\\"\\n      >\\n        &nbsp;\\n      </div>\\n      <span style=\\\"float: left; padding-left: 2px\\\">Published</span>\\n    </div>\\n    <div style=\\\"float: left; margin-left: 10px\\\">\\n      <div\\n        style=\\\"\\n          float: left;\\n          height: 10px;\\n          width: 10px;\\n          background-color: #4f93c6;\\n        \\\"\\n      >\\n        &nbsp;\\n      </div>\\n      <span style=\\\"float: left; padding-left: 2px\\\">In-Progress</span>\\n    </div>\\n    <div style=\\\"float: left; margin-left: 10px\\\">\\n      <div\\n        style=\\\"\\n          float: left;\\n          height: 10px;\\n          width: 10px;\\n          background-color: #f28091;\\n        \\\"\\n      >\\n        &nbsp;\\n      </div>\\n      <span style=\\\"float: left; padding-left: 2px\\\">Pending</span>\\n    </div>\\n  </div>\\n  <div\\n    *ngIf=\\\"inwardDetail.descritiveType !== 'Y'\\\"\\n    class=\\\"col-md-12\\\"\\n    style=\\\"margin-top: 10px\\\"\\n  >\\n    <div *ngFor=\\\"let sample of inwardSampleLists; index as a\\\" class=\\\"card\\\">\\n      <div\\n        class=\\\"card-header\\\"\\n        style=\\\"float: left\\\"\\n        [style.background]=\\\"sample.color\\\"\\n      >\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          {{ sample.sampleno }}\\n        </div>\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          Count : {{ sample.count }}\\n        </div>\\n        <div style=\\\"width: 35%; border: 0px solid white; float: left\\\">\\n          Sample. Type : {{ sample.samplename }}\\n        </div>\\n        <div style=\\\"width: 15%; border: 0px solid white; float: left\\\">\\n          No of Test(s) : {{ sample.nooftests }}\\n        </div>\\n        <div style=\\\"width: 50%; border: 0px solid white; float: left\\\">\\n          Description : {{ sample.description }}\\n        </div>\\n        <div style=\\\"width: 49%; border: 0px solid white; float: left\\\">\\n          Remarks : {{ sample.remark }}\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\" *ngFor=\\\"let test of sample.tests\\\">\\n        <table\\n          *ngIf=\\\"test.test_status == 'Published'\\\"\\n          style=\\\"width: 100%; font-size: 0.9em\\\"\\n          class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n        >\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th style=\\\"width: 25%\\\">Test Name</th>\\n              <th style=\\\"width: 48%\\\">Result</th>\\n              <th style=\\\"width: 12%\\\">Completed Date</th>\\n              <th style=\\\"width: 10%\\\">Status</th>\\n              <th style=\\\"width: 5%\\\">PDF</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <!-- [ngStyle]=\\\"{\\n              'background-color': \\n                test.test_status == 'Published' ? '#73c7af' : '#ffffff'\\n            }\\\" -->\\n              <!-- <td>{{ test.testname }}</td> -->\\n\\n              <td><span [innerHTML]=\\\"test.testname\\\"></span></td>\\n              <td>\\n                <div style=\\\"width: 100%; float: left\\\">\\n                  <table>\\n                    <tr>\\n                      <th style=\\\"border: none\\\">Parameter</th>\\n                      <th *ngIf=\\\"test.res1 === ''\\\" style=\\\"border: none\\\">\\n                        Result\\n                      </th>\\n                      <th *ngIf=\\\"test.res1 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res1 }}\\n                      </th>\\n                      <th *ngIf=\\\"test.res2 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res2 }}\\n                      </th>\\n                      <th *ngIf=\\\"test.res3 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res3 }}\\n                      </th>\\n                      <th *ngIf=\\\"test.res4 !== ''\\\" style=\\\"border: none\\\">\\n                        {{ test.res4 }}\\n                      </th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let result of test.results\\\">\\n                      <td><span [innerHTML]=\\\"result.paraname\\\"></span></td>\\n                      <td *ngIf=\\\"result.res1 !== ''\\\">{{ result.res1 }}</td>\\n                      <td *ngIf=\\\"result.res2 !== ''\\\">{{ result.res2 }}</td>\\n                      <td *ngIf=\\\"result.res3 !== ''\\\">{{ result.res3 }}</td>\\n                      <td *ngIf=\\\"result.res4 !== ''\\\">{{ result.res4 }}</td>\\n                    </tr>\\n                  </table>\\n                </div>\\n              </td>\\n              <td>{{ test.publish_date }}</td>\\n              <td>{{ test.test_status }}</td>\\n              <td>\\n                <!-- <a href=\\\"{{pdfUrl}}X123456.pdf\\\" target=\\\"_self\\\">View</a> -->\\n                <a\\n                  *ngIf=\\\"test.file1 !== ''\\\"\\n                  href=\\\"http://lab.sitraonline.org.in/pdf/{{ test.file1 }}\\\"\\n                  target=\\\"new\\\"\\n                  >View</a\\n                >\\n                <a\\n                  *ngIf=\\\"test.file2 !== ''\\\"\\n                  href=\\\"http://lab.sitraonline.org.in/pdf/{{ test.file2 }}\\\"\\n                  target=\\\"new\\\"\\n                  >View</a\\n                >\\n                <!-- <button (click)=\\\"downloadPdfFile()\\\" >View</button> -->\\n                <!-- <span>{{pdfUrl}}</span> -->\\n              </td>\\n            </tr>\\n\\n            <!-- <div *ngIf=\\\"inwardSampleTests[sample.sampleno]\\\">\\n                        <tr *ngFor=\\\"let sample of inwardSampleTests[sample.sampleno]; index as b;\\\" >\\n                            <td>{{inwardSampleTests[sample.sampleno][b].testname}}</td>\\n                          </tr>\\n                    </div>       -->\\n            <!-- <tr  >\\n                    <td>{{inwardSampleTests[sample.sampleno][a].testname}}</td>\\n                  </tr> -->\\n          </tbody>\\n        </table>\\n        <table\\n          *ngIf=\\\"test.test_status != 'Published'\\\"\\n          style=\\\"width: 100%; font-size: 0.9em\\\"\\n          class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n        >\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th style=\\\"width: 25%\\\">Test Name</th>\\n\\n              <th style=\\\"width: 12%\\\">Completed Date</th>\\n              <th style=\\\"width: 10%\\\">Status</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <!-- [ngStyle]=\\\"{\\n              'background-color': \\n                test.test_status == 'Published' ? '#73c7af' : '#ffffff'\\n            }\\\" -->\\n              <!-- <td>{{ test.testname }}</td> -->\\n\\n              <td><span [innerHTML]=\\\"test.testname\\\"></span></td>\\n\\n              <td>{{ test.publish_date }}</td>\\n              <td>{{ test.test_status }}</td>\\n            </tr>\\n\\n            <!-- <div *ngIf=\\\"inwardSampleTests[sample.sampleno]\\\">\\n                        <tr *ngFor=\\\"let sample of inwardSampleTests[sample.sampleno]; index as b;\\\" >\\n                            <td>{{inwardSampleTests[sample.sampleno][b].testname}}</td>\\n                          </tr>\\n                    </div>       -->\\n            <!-- <tr  >\\n                    <td>{{inwardSampleTests[sample.sampleno][a].testname}}</td>\\n                  </tr> -->\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  <!--/.row; End Descriptive No Type-->\\n\\n  <!-- Start Descriptive No Type -->\\n  <div\\n    *ngIf=\\\"inwardDetail.descritiveType === 'Y'\\\"\\n    class=\\\"col-md-12\\\"\\n    style=\\\"margin-top: 10px\\\"\\n  >\\n    <div *ngFor=\\\"let sample of inwardSampleLists; index as a\\\" class=\\\"card\\\">\\n      <div class=\\\"card-header\\\" style=\\\"float: left\\\">\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          {{ sample.sampleno }}\\n        </div>\\n        <div style=\\\"width: 25%; border: 0px solid white; float: left\\\">\\n          Count : {{ sample.count }}\\n        </div>\\n        <div style=\\\"width: 35%; border: 0px solid white; float: left\\\">\\n          Sample. Type : {{ sample.samplename }}\\n        </div>\\n        <div style=\\\"width: 15%; border: 0px solid white; float: left\\\">\\n          No of Test(s) : {{ sample.nooftests }}\\n        </div>\\n        <div style=\\\"width: 50%; border: 0px solid white; float: left\\\">\\n          Description : {{ sample.description }}\\n        </div>\\n        <div style=\\\"width: 49%; border: 0px solid white; float: left\\\">\\n          Remarks : {{ sample.remark }}\\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <table\\n          style=\\\"width: 100%; font-size: 0.9em\\\"\\n          class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n        >\\n          <thead class=\\\"thead-light\\\">\\n            <tr>\\n              <th style=\\\"width: 45%\\\">Test Name</th>\\n              <th style=\\\"width: 25%\\\">Instrument</th>\\n              <th style=\\\"width: 15%\\\">Completed Date</th>\\n              <th style=\\\"width: 10%\\\">Status</th>\\n              <th style=\\\"width: 5%\\\">PDF</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let test of sample.tests\\\">\\n              <td>\\n                <p>{{ test.testname }}</p>\\n              </td>\\n              <td>\\n                <p *ngIf=\\\"test.instrumentname == ''\\\">-NA-</p>\\n                <p *ngIf=\\\"test.instrumentname !== ''\\\">\\n                  {{ test.instrumentname }}\\n                </p>\\n              </td>\\n              <td>{{ test.publish_date }}</td>\\n\\n              <td>{{ test.test_status }}</td>\\n              <td>\\n                <a\\n                  *ngIf=\\\"test.file1 !== ''\\\"\\n                  href=\\\"{{ pdfUrl }}{{ test.file1 }}\\\"\\n                  target=\\\"_new\\\"\\n                  >View</a\\n                >\\n                <!-- <span>{{pdfUrl}}{{test.file1}}</span> -->\\n                <!-- <span>{{inwardDetail.documentRoot}}</span> -->\\n                <span *ngIf=\\\"test.file1 === ''\\\">NA</span>\\n\\n                <a\\n                  *ngIf=\\\"test.file2 !== ''\\\"\\n                  href=\\\"{{ pdfUrl }}{{ test.file2 }}\\\"\\n                  target=\\\"_new\\\"\\n                  >View</a\\n                >\\n                <!-- <span>{{pdfUrl}}{{test.file1}}</span> -->\\n                <!-- <span>{{inwardDetail.documentRoot}}</span> -->\\n                <span *ngIf=\\\"test.file2 === ''\\\">NA</span>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n    <!-- Descriptive type Result -->\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\" style=\\\"float: left\\\">Result</div>\\n      <div class=\\\"card-body\\\">\\n        <p [innerHTML]=\\\"inwardDetail.descriptiveResult\\\"></p>\\n        <p *ngFor=\\\"let standardnarration of inwardStandardNarration\\\">\\n          {{ standardnarration }}\\n        </p>\\n      </div>\\n    </div>\\n    <!-- End Descriptive type Result -->\\n  </div>\\n  <!-- End Descriptive No Type-->\\n</div>\\n\";","export default \" <div style=\\\"width:100%;float:left;background-color: white;\\\">\\n    <div style=\\\"width:80%;float:left;\\\">\\n        <ul style=\\\"width:40%;float:left;\\\">\\n            <li><a (click)=\\\"changeTabIndex(1)\\\" [ngClass]=\\\"{'active': tabIndex === 1 }\\\" href=\\\"#viewinward\\\">Inward Details</a></li>\\n            <li><a (click)=\\\"changeTabIndex(2)\\\" [ngClass]=\\\"{'active': tabIndex === 2 }\\\" href=\\\"#viewinward\\\">Sample(s) & Test Result</a></li>\\n        </ul>\\n        <div style=\\\"width: 55%;float: left;\\\">\\n            <img style=\\\"width:90%;height:40px;\\\" src=\\\"assets/img/others/title-trans.png\\\" />\\n        </div>\\n        \\n    </div>\\n    <div style=\\\"width: 10%;float:right;\\\">\\n        <div (click)=\\\"gotoLoginPage()\\\" style=\\\"color: #04AA6D;cursor: pointer;\\\">\\n            <svg  fill=\\\"#04AA6D\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"32\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g data-name=\\\"1\\\" id=\\\"_1\\\"><path d=\\\"M27,3V29a1,1,0,0,1-1,1H6a1,1,0,0,1-1-1V27H7v1H25V4H7V7H5V3A1,1,0,0,1,6,2H26A1,1,0,0,1,27,3ZM10.71,20.29,7.41,17H18V15H7.41l3.3-3.29L9.29,10.29l-5,5a1,1,0,0,0,0,1.42l5,5Z\\\" id=\\\"logout_account_exit_door\\\"/></g></svg>\\n            <span>Back</span>\\n        </div>\\n    </div>\\n    \\n</div>\\n<!-- <div style=\\\"width:100%;height:10vh;background-image: linear-gradient(to top, #0ba360 0%, #3cba92 100%);;\\\">\\n    <div *ngIf=\\\"tabIndex === 1\\\" style=\\\"float:left;width:20%;height:10vh;text-align: center;cursor:pointer;border-bottom:5px solid white;background-color: #10A565;\\\">\\n        <svg style=\\\"margin-top:10px;\\\" fill=\\\"white\\\" enable-background=\\\"new 0 0 48 48\\\" height=\\\"30px\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 48 48\\\" width=\\\"48px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><g id=\\\"Expanded\\\"><g><g><path d=\\\"M42,48H28V35h-8v13H6V27c0-0.552,0.447-1,1-1s1,0.448,1,1v19h10V33h12v13h10V28c0-0.552,0.447-1,1-1s1,0.448,1,1V48z\\\"/></g><g><path d=\\\"M47,27c-0.249,0-0.497-0.092-0.691-0.277L24,5.384L1.691,26.723c-0.399,0.381-1.032,0.368-1.414-0.031     c-0.382-0.399-0.367-1.032,0.031-1.414L24,2.616l23.691,22.661c0.398,0.382,0.413,1.015,0.031,1.414     C47.526,26.896,47.264,27,47,27z\\\"/></g><g><path d=\\\"M39,15c-0.553,0-1-0.448-1-1V8h-6c-0.553,0-1-0.448-1-1s0.447-1,1-1h8v8C40,14.552,39.553,15,39,15z\\\"/></g></g></g></svg>\\n        <span style=\\\"width:100%;float:left;padding:10px;font-weight: bold;color: white;\\\">Inward Details</span>\\n    </div>\\n    <div *ngIf=\\\"tabIndex !== 1\\\" (click)=\\\"changeTabIndex(1)\\\" style=\\\"float:left;width:20%;height:10vh;text-align: center;cursor:pointer;\\\">\\n        <svg  style=\\\"margin-top:10px;\\\" fill=\\\"black\\\" enable-background=\\\"new 0 0 48 48\\\" height=\\\"25px\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 48 48\\\" width=\\\"48px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><g id=\\\"Expanded\\\"><g><g><path d=\\\"M42,48H28V35h-8v13H6V27c0-0.552,0.447-1,1-1s1,0.448,1,1v19h10V33h12v13h10V28c0-0.552,0.447-1,1-1s1,0.448,1,1V48z\\\"/></g><g><path d=\\\"M47,27c-0.249,0-0.497-0.092-0.691-0.277L24,5.384L1.691,26.723c-0.399,0.381-1.032,0.368-1.414-0.031     c-0.382-0.399-0.367-1.032,0.031-1.414L24,2.616l23.691,22.661c0.398,0.382,0.413,1.015,0.031,1.414     C47.526,26.896,47.264,27,47,27z\\\"/></g><g><path d=\\\"M39,15c-0.553,0-1-0.448-1-1V8h-6c-0.553,0-1-0.448-1-1s0.447-1,1-1h8v8C40,14.552,39.553,15,39,15z\\\"/></g></g></g></svg>\\n        <span style=\\\"width:100%;float:left;padding:10px;color: black;\\\">Inward Details</span>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"tabIndex === 2\\\"   style=\\\"float:left;width:20%;height:10vh;text-align: center;cursor:pointer;border-bottom:5px solid white;border-bottom:5px solid white;background-color: #10A565;\\\">        \\n        <svg  style=\\\"margin-top:5px;\\\" height=\\\"35px\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 60 60\\\" width=\\\"35px\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n            <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" id=\\\"People\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\">\\n            <g fill=\\\"white\\\" id=\\\"Icon-23\\\"><path d=\\\"M50.0303,43 C50.0303,42.448 49.5823,42 49.0303,42 L49.0193,42 C48.4683,42 48.0253,42.448 48.0253,43 C48.0253,43.552 48.4773,44 49.0303,44 C49.5823,44 50.0303,43.552 50.0303,43 L50.0303,43 Z M27.0203,44 C26.4683,44 26.0253,44.448 26.0253,45 C26.0253,45.552 26.4773,46 27.0303,46 C27.5823,46 28.0303,45.552 28.0303,45 C28.0303,44.448 27.5823,44 27.0303,44 L27.0203,44 Z M32.0303,39 C32.0303,38.448 31.5823,38 31.0303,38 L31.0193,38 C30.4683,38 30.0253,38.448 30.0253,39 C30.0253,39.552 30.4773,40 31.0303,40 C31.5823,40 32.0303,39.552 32.0303,39 L32.0303,39 Z M50.0003,22 C50.0003,23.103 50.8973,24 52.0003,24 C53.1023,24 54.0003,23.103 54.0003,22 C54.0003,20.897 53.1023,20 52.0003,20 C50.8973,20 50.0003,20.897 50.0003,22 L50.0003,22 Z M10.0003,24 C10.0003,25.103 10.8973,26 12.0003,26 C13.1033,26 14.0003,25.103 14.0003,24 C14.0003,22.897 13.1033,22 12.0003,22 C10.8973,22 10.0003,22.897 10.0003,24 L10.0003,24 Z M8.0003,7 C8.0003,7.551 8.4483,8 9.0003,8 C9.5513,8 10.0003,7.551 10.0003,7 C10.0003,6.449 9.5513,6 9.0003,6 C8.4483,6 8.0003,6.449 8.0003,7 L8.0003,7 Z M6.0003,7 C6.0003,5.346 7.3453,4 9.0003,4 C10.6543,4 12.0003,5.346 12.0003,7 C12.0003,8.654 10.6543,10 9.0003,10 C7.3453,10 6.0003,8.654 6.0003,7 L6.0003,7 Z M30.0003,4 C30.0003,5.103 30.8973,6 32.0003,6 C33.1023,6 34.0003,5.103 34.0003,4 C34.0003,2.897 33.1023,2 32.0003,2 C30.8973,2 30.0003,2.897 30.0003,4 L30.0003,4 Z M28.0003,4 C28.0003,1.794 29.7943,0 32.0003,0 C34.2063,0 36.0003,1.794 36.0003,4 C36.0003,6.206 34.2063,8 32.0003,8 C29.7943,8 28.0003,6.206 28.0003,4 L28.0003,4 Z M13.0003,50 C12.4473,50 12.0003,50.448 12.0003,51 C12.0003,52.103 11.1033,53 10.0003,53 C9.4473,53 9.0003,53.448 9.0003,54 C9.0003,54.552 9.4473,55 10.0003,55 C12.2053,55 14.0003,53.206 14.0003,51 C14.0003,50.448 13.5523,50 13.0003,50 L13.0003,50 Z M50.0003,55 C52.2063,55 54.0003,53.206 54.0003,51 C54.0003,50.448 53.5523,50 53.0003,50 C52.4473,50 52.0003,50.448 52.0003,51 C52.0003,52.103 51.1023,53 50.0003,53 C49.4473,53 49.0003,53.448 49.0003,54 C49.0003,54.552 49.4473,55 50.0003,55 L50.0003,55 Z M29.0003,54 C29.0003,54.552 29.4473,55 30.0003,55 C32.2063,55 34.0003,53.206 34.0003,51 C34.0003,50.448 33.5523,50 33.0003,50 C32.4473,50 32.0003,50.448 32.0003,51 C32.0003,52.103 31.1023,53 30.0003,53 C29.4473,53 29.0003,53.448 29.0003,54 L29.0003,54 Z M60.0003,15 C60.0003,15.552 59.5523,16 59.0003,16 L44.0003,16 L44.0003,36 L53.0003,36 C53.5523,36 54.0003,36.448 54.0003,37 C54.0003,37.552 53.5523,38 53.0003,38 L44.0003,38 L44.0003,52 C44.0003,55.309 46.6913,58 50.0003,58 C53.3083,58 56.0003,55.309 56.0003,52 L56.0003,19 C56.0003,18.448 56.4473,18 57.0003,18 C57.5523,18 58.0003,18.448 58.0003,19 L58.0003,52 C58.0003,56.411 54.4113,60 50.0003,60 C45.5893,60 42.0003,56.411 42.0003,52 L42.0003,16 L24.0003,16 L24.0003,28 L33.0003,28 C33.5523,28 34.0003,28.448 34.0003,29 C34.0003,29.552 33.5523,30 33.0003,30 L24.0003,30 L24.0003,52 C24.0003,55.309 26.6913,58 30.0003,58 C33.3083,58 36.0003,55.309 36.0003,52 L36.0003,19 C36.0003,18.448 36.4473,18 37.0003,18 C37.5523,18 38.0003,18.448 38.0003,19 L38.0003,52 C38.0003,56.411 34.4113,60 30.0003,60 C25.5893,60 22.0003,56.411 22.0003,52 L22.0003,16 L4.0003,16 L4.0003,32 L13.0003,32 C13.5523,32 14.0003,32.448 14.0003,33 C14.0003,33.552 13.5523,34 13.0003,34 L4.0003,34 L4.0003,52 C4.0003,55.309 6.6913,58 10.0003,58 C13.3083,58 16.0003,55.309 16.0003,52 L16.0003,19 C16.0003,18.448 16.4473,18 17.0003,18 C17.5523,18 18.0003,18.448 18.0003,19 L18.0003,52 C18.0003,56.411 14.4113,60 10.0003,60 C5.5893,60 2.0003,56.411 2.0003,52 L2.0003,16 L1.0003,16 C0.4473,16 0.0003,15.552 0.0003,15 C0.0003,14.448 0.4473,14 1.0003,14 L2.0003,14 L2.0003,9 C2.0003,8.448 2.4473,8 3.0003,8 C3.5523,8 4.0003,8.448 4.0003,9 L4.0003,14 L16.0003,14 L16.0003,9 C16.0003,8.448 16.4473,8 17.0003,8 C17.5523,8 18.0003,8.448 18.0003,9 L18.0003,14 L22.0003,14 L22.0003,9 C22.0003,8.448 22.4473,8 23.0003,8 C23.5523,8 24.0003,8.448 24.0003,9 L24.0003,14 L36.0003,14 L36.0003,9 C36.0003,8.448 36.4473,8 37.0003,8 C37.5523,8 38.0003,8.448 38.0003,9 L38.0003,14 L42.0003,14 L42.0003,9 C42.0003,8.448 42.4473,8 43.0003,8 C43.5523,8 44.0003,8.448 44.0003,9 L44.0003,14 L56.0003,14 L56.0003,9 C56.0003,8.448 56.4473,8 57.0003,8 C57.5523,8 58.0003,8.448 58.0003,9 L58.0003,14 L59.0003,14 C59.5523,14 60.0003,14.448 60.0003,15 L60.0003,15 Z\\\" id=\\\"chemistry-tubes\\\"/></g></g></svg>\\n        <span style=\\\"width:100%;float:left;padding:10px;font-weight: bold;color: white;\\\">Sample(s) & Test Result</span>\\n    </div>\\n    <div *ngIf=\\\"tabIndex !== 2\\\"  (click)=\\\"changeTabIndex(2)\\\" style=\\\"float:left;width:20%;height:10vh;text-align: center;cursor:pointer;border-bottom:0px solid black;\\\">        \\n        <svg style=\\\"margin-top:5px;\\\"  height=\\\"30px\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 60 60\\\" width=\\\"30px\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n            <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" id=\\\"People\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\">\\n            <g fill=\\\"black\\\" id=\\\"Icon-23\\\"><path d=\\\"M50.0303,43 C50.0303,42.448 49.5823,42 49.0303,42 L49.0193,42 C48.4683,42 48.0253,42.448 48.0253,43 C48.0253,43.552 48.4773,44 49.0303,44 C49.5823,44 50.0303,43.552 50.0303,43 L50.0303,43 Z M27.0203,44 C26.4683,44 26.0253,44.448 26.0253,45 C26.0253,45.552 26.4773,46 27.0303,46 C27.5823,46 28.0303,45.552 28.0303,45 C28.0303,44.448 27.5823,44 27.0303,44 L27.0203,44 Z M32.0303,39 C32.0303,38.448 31.5823,38 31.0303,38 L31.0193,38 C30.4683,38 30.0253,38.448 30.0253,39 C30.0253,39.552 30.4773,40 31.0303,40 C31.5823,40 32.0303,39.552 32.0303,39 L32.0303,39 Z M50.0003,22 C50.0003,23.103 50.8973,24 52.0003,24 C53.1023,24 54.0003,23.103 54.0003,22 C54.0003,20.897 53.1023,20 52.0003,20 C50.8973,20 50.0003,20.897 50.0003,22 L50.0003,22 Z M10.0003,24 C10.0003,25.103 10.8973,26 12.0003,26 C13.1033,26 14.0003,25.103 14.0003,24 C14.0003,22.897 13.1033,22 12.0003,22 C10.8973,22 10.0003,22.897 10.0003,24 L10.0003,24 Z M8.0003,7 C8.0003,7.551 8.4483,8 9.0003,8 C9.5513,8 10.0003,7.551 10.0003,7 C10.0003,6.449 9.5513,6 9.0003,6 C8.4483,6 8.0003,6.449 8.0003,7 L8.0003,7 Z M6.0003,7 C6.0003,5.346 7.3453,4 9.0003,4 C10.6543,4 12.0003,5.346 12.0003,7 C12.0003,8.654 10.6543,10 9.0003,10 C7.3453,10 6.0003,8.654 6.0003,7 L6.0003,7 Z M30.0003,4 C30.0003,5.103 30.8973,6 32.0003,6 C33.1023,6 34.0003,5.103 34.0003,4 C34.0003,2.897 33.1023,2 32.0003,2 C30.8973,2 30.0003,2.897 30.0003,4 L30.0003,4 Z M28.0003,4 C28.0003,1.794 29.7943,0 32.0003,0 C34.2063,0 36.0003,1.794 36.0003,4 C36.0003,6.206 34.2063,8 32.0003,8 C29.7943,8 28.0003,6.206 28.0003,4 L28.0003,4 Z M13.0003,50 C12.4473,50 12.0003,50.448 12.0003,51 C12.0003,52.103 11.1033,53 10.0003,53 C9.4473,53 9.0003,53.448 9.0003,54 C9.0003,54.552 9.4473,55 10.0003,55 C12.2053,55 14.0003,53.206 14.0003,51 C14.0003,50.448 13.5523,50 13.0003,50 L13.0003,50 Z M50.0003,55 C52.2063,55 54.0003,53.206 54.0003,51 C54.0003,50.448 53.5523,50 53.0003,50 C52.4473,50 52.0003,50.448 52.0003,51 C52.0003,52.103 51.1023,53 50.0003,53 C49.4473,53 49.0003,53.448 49.0003,54 C49.0003,54.552 49.4473,55 50.0003,55 L50.0003,55 Z M29.0003,54 C29.0003,54.552 29.4473,55 30.0003,55 C32.2063,55 34.0003,53.206 34.0003,51 C34.0003,50.448 33.5523,50 33.0003,50 C32.4473,50 32.0003,50.448 32.0003,51 C32.0003,52.103 31.1023,53 30.0003,53 C29.4473,53 29.0003,53.448 29.0003,54 L29.0003,54 Z M60.0003,15 C60.0003,15.552 59.5523,16 59.0003,16 L44.0003,16 L44.0003,36 L53.0003,36 C53.5523,36 54.0003,36.448 54.0003,37 C54.0003,37.552 53.5523,38 53.0003,38 L44.0003,38 L44.0003,52 C44.0003,55.309 46.6913,58 50.0003,58 C53.3083,58 56.0003,55.309 56.0003,52 L56.0003,19 C56.0003,18.448 56.4473,18 57.0003,18 C57.5523,18 58.0003,18.448 58.0003,19 L58.0003,52 C58.0003,56.411 54.4113,60 50.0003,60 C45.5893,60 42.0003,56.411 42.0003,52 L42.0003,16 L24.0003,16 L24.0003,28 L33.0003,28 C33.5523,28 34.0003,28.448 34.0003,29 C34.0003,29.552 33.5523,30 33.0003,30 L24.0003,30 L24.0003,52 C24.0003,55.309 26.6913,58 30.0003,58 C33.3083,58 36.0003,55.309 36.0003,52 L36.0003,19 C36.0003,18.448 36.4473,18 37.0003,18 C37.5523,18 38.0003,18.448 38.0003,19 L38.0003,52 C38.0003,56.411 34.4113,60 30.0003,60 C25.5893,60 22.0003,56.411 22.0003,52 L22.0003,16 L4.0003,16 L4.0003,32 L13.0003,32 C13.5523,32 14.0003,32.448 14.0003,33 C14.0003,33.552 13.5523,34 13.0003,34 L4.0003,34 L4.0003,52 C4.0003,55.309 6.6913,58 10.0003,58 C13.3083,58 16.0003,55.309 16.0003,52 L16.0003,19 C16.0003,18.448 16.4473,18 17.0003,18 C17.5523,18 18.0003,18.448 18.0003,19 L18.0003,52 C18.0003,56.411 14.4113,60 10.0003,60 C5.5893,60 2.0003,56.411 2.0003,52 L2.0003,16 L1.0003,16 C0.4473,16 0.0003,15.552 0.0003,15 C0.0003,14.448 0.4473,14 1.0003,14 L2.0003,14 L2.0003,9 C2.0003,8.448 2.4473,8 3.0003,8 C3.5523,8 4.0003,8.448 4.0003,9 L4.0003,14 L16.0003,14 L16.0003,9 C16.0003,8.448 16.4473,8 17.0003,8 C17.5523,8 18.0003,8.448 18.0003,9 L18.0003,14 L22.0003,14 L22.0003,9 C22.0003,8.448 22.4473,8 23.0003,8 C23.5523,8 24.0003,8.448 24.0003,9 L24.0003,14 L36.0003,14 L36.0003,9 C36.0003,8.448 36.4473,8 37.0003,8 C37.5523,8 38.0003,8.448 38.0003,9 L38.0003,14 L42.0003,14 L42.0003,9 C42.0003,8.448 42.4473,8 43.0003,8 C43.5523,8 44.0003,8.448 44.0003,9 L44.0003,14 L56.0003,14 L56.0003,9 C56.0003,8.448 56.4473,8 57.0003,8 C57.5523,8 58.0003,8.448 58.0003,9 L58.0003,14 L59.0003,14 C59.5523,14 60.0003,14.448 60.0003,15 L60.0003,15 Z\\\" id=\\\"chemistry-tubes\\\"/></g></g></svg>\\n        <span style=\\\"width:100%;float:left;padding:10px;color: black;\\\">Sample(s) & Test Result</span>\\n    </div>\\n    <div style=\\\"float:right;width:5%;\\\">\\n        <div (click)=\\\"gotoLoginPage()\\\" style=\\\"padding:15px;color: white;cursor: pointer;\\\">\\n            <svg  fill=\\\"white\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"32\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><g data-name=\\\"1\\\" id=\\\"_1\\\"><path d=\\\"M27,3V29a1,1,0,0,1-1,1H6a1,1,0,0,1-1-1V27H7v1H25V4H7V7H5V3A1,1,0,0,1,6,2H26A1,1,0,0,1,27,3ZM10.71,20.29,7.41,17H18V15H7.41l3.3-3.29L9.29,10.29l-5,5a1,1,0,0,0,0,1.42l5,5Z\\\" id=\\\"logout_account_exit_door\\\"/></g></svg>\\n            <span>Back</span>\\n        </div>\\n        \\n    </div> \\n</div>--> \\n<!-- <div *ngIf=\\\"loaderFlag === true\\\" class=\\\"loader\\\" id=\\\"chart2_img_load\\\" style=\\\"display:block;width:100%;\\\"></div> -->\\n<div *ngIf=\\\"loaderFlag === true\\\" class=\\\"spinner\\\"></div>\\n<div style=\\\"width:100%;float:left;height:89vh;\\\">    \\n    <app-inwarddetails *ngIf=\\\"tabIndex === 1\\\"></app-inwarddetails>\\n    <app-sampletests *ngIf=\\\"tabIndex === 2\\\"></app-sampletests>\\n</div>\\n<!-- <div style=\\\"width:100%;float:left;height:3vh;background-color: #0ba360;\\\">\\n    Footer\\n</div> -->\";","export default \"<div class=\\\"animated fadeIn\\\">\\n  <ng-template #addParticipants class=\\\"modal modal-xl\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Add Participants</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row mb-2\\\">\\n          <div class=\\\"col-md\\\">\\n            <button\\n              class=\\\"btn btn-danger pull-right ml-1\\\"\\n              (click)=\\\"removeRow()\\\"\\n            >\\n              Remove\\n            </button>\\n            <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addrow()\\\">\\n              Add\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <table class=\\\"table table-bordered mx-2\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\">Full Name</th>\\n                <!-- <th scope=\\\"col\\\">Sample Type</th> -->\\n                <th scope=\\\"col\\\">Designation</th>\\n                <th scope=\\\"col\\\">Email</th>\\n                <th scope=\\\"col\\\">Phone No.</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of ParticipantsList\\\">\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    [(ngModel)]=\\\"item.Participant_Name\\\"\\n                    class=\\\"form-control\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"item.Participant_Desig\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"item.Participant_Email\\\"\\n                  />\\n                </td>\\n                <td>\\n                  <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    [(ngModel)]=\\\"item.Participant_Mobile\\\"\\n                  />\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"AddParticipants()\\\"\\n        >\\n          Confirm\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-template #paymentType class=\\\"modal\\\">\\n    <div class=\\\"model-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title pull-left\\\">Select payment Type</h4>\\n        <button\\n          style=\\\"outline: none; border: none\\\"\\n          type=\\\"button\\\"\\n          class=\\\"close pull-right text-white\\\"\\n          aria-label=\\\"Close\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"row px-5\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"totalAmount\\\">Total Amount: </label>\\n            <span style=\\\"font-weight: bold\\\">&nbsp;{{ Amount }}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"1\\\"\\n              id=\\\"rdoCCcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoCCcard\\\">\\n              Credit Card\\n            </label>\\n            <div *ngIf=\\\"bankCharges.credit_card !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.credit_card }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"2\\\"\\n              id=\\\"rdoDRcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDRcard\\\">\\n              Debit Rupay\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_rupay !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_rupay }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"3\\\"\\n              id=\\\"rdoDLTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDLTcard\\\">\\n              Debit lt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_lt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_lt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"4\\\"\\n              id=\\\"rdoDGTcard\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoDGTcard\\\">\\n              Debit gt 2000\\n            </label>\\n            <div *ngIf=\\\"bankCharges.debit_gt_2000 !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.debit_gt_2000 }}% of tax will be charaged on\\n                total amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"5\\\"\\n              id=\\\"rdoUPI\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoUPI\\\"> UPI </label>\\n            <div *ngIf=\\\"bankCharges.upi !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.upi }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row px-5 py-3\\\">\\n          <div class=\\\"form-check\\\">\\n            <input\\n              class=\\\"form-check-input\\\"\\n              type=\\\"radio\\\"\\n              name=\\\"paymentMode\\\"\\n              [value]=\\\"6\\\"\\n              id=\\\"rdoNetBanking\\\"\\n              [(ngModel)]=\\\"paymentMode\\\"\\n            />\\n            <label class=\\\"form-check-label\\\" for=\\\"rdoNetBanking\\\">\\n              NetBanking\\n            </label>\\n            <div *ngIf=\\\"bankCharges.nb !== '0'\\\">\\n              <small class=\\\"text-danger\\\"\\n                >({{ bankCharges.nb }}% of tax will be charaged on total\\n                amount)</small\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-secondary\\\"\\n          (click)=\\\"modalRef.hide()\\\"\\n        >\\n          Close\\n        </button>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"paymentTypeSelection(Amount)\\\"\\n        >\\n          Proceed To Pay\\n        </button>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <div class=\\\"row\\\">\\n    <a\\n      href=\\\"http://sitraonline.org.in/onlineserviceapi/download/Webinarmenu.pdf\\\"\\n      target=\\\"_blank\\\"\\n      style=\\\"width: 100%; text-align: right; margin-right: 10px\\\"\\n      title=\\\"Help Link Pdf\\\"\\n      download\\n      ><svg\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        style=\\\"width: 30px; height: 30px\\\"\\n        viewBox=\\\"0 0 20 20\\\"\\n        fill=\\\"currentColor\\\"\\n      >\\n        <path\\n          fill-rule=\\\"evenodd\\\"\\n          d=\\\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\\\"\\n          clip-rule=\\\"evenodd\\\"\\n        /></svg\\n    ></a>\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <label for=\\\"ccmonth\\\"\\n            ><span style=\\\"color: red\\\">*</span>Select Webinar</label\\n          >\\n          <select\\n            class=\\\"form-control\\\"\\n            id=\\\"ccmonth\\\"\\n            [(ngModel)]=\\\"formData.id\\\"\\n            (change)=\\\"loadWebinarDetails()\\\"\\n          >\\n            <option value=\\\"\\\">-SELECT-</option>\\n            <option\\n              *ngFor=\\\"let varieties of webinarList; index as i\\\"\\n              value=\\\"{{ webinarList[i].id }}\\\"\\n            >\\n              {{ webinarList[i].title }}\\n            </option>\\n          </select>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-6\\\">\\n              <label\\n                for=\\\"ccmonth\\\"\\n                style=\\\"\\n                  width: 100%;\\n                  font-weight: bold;\\n                  text-decoration: underline;\\n                \\\"\\n              >\\n                Webinar Title\\n              </label>\\n              <label for=\\\"ccmonth\\\" style=\\\"width: 100%\\\">\\n                <img\\n                  *ngIf=\\\"fieldLoader === true\\\"\\n                  src=\\\"assets/img/others/loader-1.gif\\\"\\n                />\\n                {{ formData.title }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-sm-2\\\">\\n              <label\\n                for=\\\"ccmonth\\\"\\n                style=\\\"\\n                  width: 100%;\\n                  font-weight: bold;\\n                  text-decoration: underline;\\n                \\\"\\n              >\\n                Date\\n              </label>\\n              <label for=\\\"ccmonth\\\" style=\\\"width: 100%\\\">\\n                <img\\n                  *ngIf=\\\"fieldLoader === true\\\"\\n                  src=\\\"assets/img/others/loader-1.gif\\\"\\n                />\\n                {{ formData.webinar_date }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-sm-2\\\">\\n              <label\\n                for=\\\"ccmonth\\\"\\n                style=\\\"\\n                  width: 100%;\\n                  font-weight: bold;\\n                  text-decoration: underline;\\n                \\\"\\n              >\\n                Amount/person\\n              </label>\\n              <label for=\\\"ccmonth\\\" style=\\\"width: 100%\\\">\\n                <img\\n                  *ngIf=\\\"fieldLoader === true\\\"\\n                  src=\\\"assets/img/others/loader-1.gif\\\"\\n                />\\n                Rs. {{ formData.amount }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-sm-2\\\">\\n              <label\\n                for=\\\"ccmonth\\\"\\n                style=\\\"\\n                  width: 100%;\\n                  font-weight: bold;\\n                  text-decoration: underline;\\n                \\\"\\n              >\\n                Venue\\n              </label>\\n              <label for=\\\"ccmonth\\\" style=\\\"width: 100%\\\">\\n                <img\\n                  *ngIf=\\\"fieldLoader === true\\\"\\n                  src=\\\"assets/img/others/loader-1.gif\\\"\\n                />\\n                {{ formData.venue }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-sm-6\\\">\\n              <label\\n                for=\\\"ccmonth\\\"\\n                style=\\\"\\n                  width: 100%;\\n                  font-weight: bold;\\n                  text-decoration: underline;\\n                \\\"\\n              >\\n                Description\\n              </label>\\n              <label for=\\\"ccmonth\\\" style=\\\"width: 100%\\\">\\n                <img\\n                  *ngIf=\\\"fieldLoader === true\\\"\\n                  src=\\\"assets/img/others/loader-1.gif\\\"\\n                />\\n                {{ formData.description }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-sm-2\\\">\\n              <label\\n                for=\\\"ccmonth\\\"\\n                style=\\\"\\n                  width: 100%;\\n                  font-weight: bold;\\n                  text-decoration: underline;\\n                \\\"\\n              >\\n                Reg. Start Date\\n              </label>\\n              <label for=\\\"ccmonth\\\" style=\\\"width: 100%\\\">\\n                <img\\n                  *ngIf=\\\"fieldLoader === true\\\"\\n                  src=\\\"assets/img/others/loader-1.gif\\\"\\n                />\\n                {{ formData.registration_start }}\\n              </label>\\n            </div>\\n            <div class=\\\"form-group col-sm-2\\\">\\n              <label\\n                for=\\\"ccmonth\\\"\\n                style=\\\"\\n                  width: 100%;\\n                  font-weight: bold;\\n                  text-decoration: underline;\\n                \\\"\\n              >\\n                Reg. Close Date\\n              </label>\\n              <label for=\\\"ccmonth\\\" style=\\\"width: 100%\\\">\\n                <img\\n                  *ngIf=\\\"fieldLoader === true\\\"\\n                  src=\\\"assets/img/others/loader-1.gif\\\"\\n                />\\n                {{ formData.registration_end }}\\n              </label>\\n            </div>\\n            <div\\n              class=\\\"form-group col-sm-2\\\"\\n              *ngIf=\\\"formData.document_url !== ''\\\"\\n            >\\n              <button\\n                type=\\\"button\\\"\\n                style=\\\"font-size: 1em\\\"\\n                class=\\\"btn btn-sm btn-primary\\\"\\n              >\\n                <i class=\\\"icon-cloud-download\\\"></i> Download Brochure\\n              </button>\\n            </div>\\n            <div class=\\\"form-group col-sm-12\\\" style=\\\"float: right\\\">\\n              <button\\n                (click)=\\\"paymentOptionOpen(paymentType, formData.amount)\\\"\\n                type=\\\"button\\\"\\n                style=\\\"float: right; margin-right: 10px\\\"\\n                class=\\\"btn btn-success\\\"\\n              >\\n                <i class=\\\"fa fa-credit-card\\\"></i> Pay Now\\n              </button>\\n              <button\\n                *ngIf=\\\"formData.id != ''\\\"\\n                (click)=\\\"getPaeticipants(addParticipants)\\\"\\n                class=\\\"btn btn-primary\\\"\\n                style=\\\"float: right; margin-right: 10px\\\"\\n              >\\n                <i class=\\\"fa fa-user-plus\\\"></i>Add Participants\\n              </button>\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-12\\\">\\n              <img\\n                *ngIf=\\\"paymentLoader === true\\\"\\n                src=\\\"assets/img/others/loader-1.gif\\\"\\n              />\\n              <span\\n                *ngIf=\\\"errorMessage !== ''\\\"\\n                style=\\\"color: red; float: left\\\"\\n                >{{ errorMessage }}</span\\n              >\\n            </div>\\n          </div>\\n          <!--/.row-->\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/.row-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <span class=\\\"col-md-3\\\">Previous Transactions</span>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div *ngIf=\\\"searchText == ''\\\" style=\\\"width: 10%; float: left\\\">\\n            <select\\n              (change)=\\\"changeDisplayCount()\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"apiParams.tablerowlimit\\\"\\n            >\\n              <option value=\\\"10\\\">10</option>\\n              <option value=\\\"25\\\">25</option>\\n              <option value=\\\"50\\\">50</option>\\n              <option value=\\\"100\\\">100</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\" style=\\\"float: right; width: 30%\\\">\\n            <input\\n              (keyup)=\\\"getData()\\\"\\n              [(ngModel)]=\\\"searchText\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              id=\\\"exampleFormControlInput1\\\"\\n              placeholder=\\\"Search Order Id / Bank Reference no\\\"\\n            />\\n          </div>\\n          <br />\\n          <nav\\n            style=\\\"width: 100%; float: left\\\"\\n            *ngIf=\\\"searchText == ''\\\"\\n            aria-label=\\\"Page navigation example\\\"\\n          >\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n          <div *ngIf=\\\"spinnerFlag === true\\\" class=\\\"spinner\\\"></div>\\n          <table\\n            style=\\\"width: 100%\\\"\\n            class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\"\\n          >\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th style=\\\"width: 5%\\\">S.No</th>\\n                <th style=\\\"width: 15%\\\">Webinar Date</th>\\n                <th style=\\\"width: 25%\\\">Title</th>\\n                <th style=\\\"width: 10%\\\">Amount</th>\\n                <th style=\\\"width: 15%\\\">Reg. Cl. Date</th>\\n                <th style=\\\"width: 10%\\\">Reg.Status</th>\\n                <th style=\\\"width: 15%\\\">Payment. Status</th>\\n                <th style=\\\"width: 5%\\\" colspan=\\\"3\\\">Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let webinar of webinars; index as j\\\">\\n                <td>\\n                  <div>{{ j + 1 }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ webinar.webinar_date }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ webinar.title }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ webinar.amount }}</div>\\n                </td>\\n                <td>\\n                  <div>{{ webinar.registration_end }}</div>\\n                </td>\\n                <td>\\n                  <div\\n                    *ngIf=\\\"webinar.reg_status === '1'\\\"\\n                    style=\\\"color: green; font-weight: bold\\\"\\n                  >\\n                    Open\\n                  </div>\\n                  <div *ngIf=\\\"webinar.reg_status === '0'\\\" style=\\\"color: red\\\">\\n                    Closed\\n                  </div>\\n                </td>\\n                <td>\\n                  <div\\n                    *ngIf=\\\"webinar.payment_status === 'Success'\\\"\\n                    style=\\\"color: green; font-weight: bold\\\"\\n                  >\\n                    Success\\n                  </div>\\n                  <div\\n                    *ngIf=\\\"webinar.payment_status !== 'Success'\\\"\\n                    style=\\\"color: red\\\"\\n                  >\\n                    Failed\\n                  </div>\\n                </td>\\n                <td>\\n                  <div style=\\\"float: left\\\">\\n                    <i\\n                      class=\\\"icon-cloud-download\\\"\\n                      style=\\\"font-size: 1.3em; cursor: pointer\\\"\\n                      title=\\\"Download Brochure\\\"\\n                    ></i>\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr />\\n          <nav *ngIf=\\\"searchText == ''\\\" aria-label=\\\"Page navigation example\\\">\\n            <div style=\\\"float: left\\\">\\n              <span style=\\\"color: #212529; font-weight: bold\\\"\\n                >Page {{ pagenationConfiguration.currentPageNo }} of\\n                {{ pageCount }}</span\\n              >\\n            </div>\\n            <ul class=\\\"pagination justify-content-center\\\">\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo != 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"this.pagenationConfiguration.currentPageNo == 1\\\"\\n                style=\\\"cursor: pointer\\\"\\n                class=\\\"page-item disabled\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(3, 0)\\\"\\n                  >Previous</span\\n                >\\n              </li>\\n              <li\\n                style=\\\"cursor: pointer\\\"\\n                *ngFor=\\\"\\n                  let pageno of pagenationConfiguration.pageNos;\\n                  let i = index\\n                \\\"\\n                class=\\\"page-item\\\"\\n                (click)=\\\"pagenationEvent(1, pageno)\\\"\\n              >\\n                <span\\n                  *ngIf=\\\"pageno == pagenationConfiguration.currentPageNo\\\"\\n                  style=\\\"color: white\\\"\\n                  class=\\\"page-link page-link-active\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n                <span\\n                  *ngIf=\\\"\\n                    pageno != pagenationConfiguration.currentPageNo &&\\n                    pageno != undefined\\n                  \\\"\\n                  class=\\\"page-link\\\"\\n                  (click)=\\\"pagenationEvent('1', pageno)\\\"\\n                >\\n                  {{ pageno }}\\n                </span>\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount != pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n              <li\\n                *ngIf=\\\"pageCount == pagenationConfiguration.currentPageNo\\\"\\n                class=\\\"page-item disabled\\\"\\n                style=\\\"cursor: pointer\\\"\\n              >\\n                <span class=\\\"page-link\\\" (click)=\\\"pagenationEvent(2, 0)\\\"\\n                  >Next</span\\n                >\\n              </li>\\n            </ul>\\n          </nav>\\n        </div>\\n      </div>\\n    </div>\\n    <!--/.col-->\\n  </div>\\n  <!--/ End Table-->\\n</div>\\n\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { INavData } from '@coreui/angular';\nimport { AESEncryptDecryptServiceService } from './aesencrypt-decrypt-service.service';\n\nexport const item = new AESEncryptDecryptServiceService;\n\nexport const navItems: INavData[] = [\n  {\n    name: 'Dashboard',\n    url: '/dashboard',\n    icon: 'icon-speedometer',\n    badge: {\n      variant: 'info',\n      text: 'NEW'\n    }\n  },\n{\ntitle:true,\nname:\"Testing\",\n\n},\n{\n  name: 'Labwise Facilities',\n  url: '/testrate',\n  icon: 'icon-layers',\n  \n  children: [\n    {\n      name: 'Physical Testing',\n      url: '/testrate/testingcharge/8',\n      icon: 'icon-chevron-right'\n    },\n    {\n      name: 'Chemical Testing',\n      url: '/testrate/testingcharge/9',\n      icon: 'icon-chevron-right'\n    },\n    {\n      name: 'Knitting / Weaving',\n      url: '/testrate/testingcharge/7',\n      icon: 'icon-chevron-right'\n    },\n    {\n      name: 'Engineering',\n      url: '/testrate/testingcharge/11',\n      icon: 'icon-chevron-right'\n    },\n    {\n      name: 'Medical Textile',\n      url: '/testrate/testingcharge/10',\n      icon: 'icon-chevron-right'\n    },\n    {\n      name: 'NABL Certificates',\n      url: '/certificates',\n      icon: 'icon-chevron-right'\n    }\n  ]\n},\n{\n  name: 'Frequently Used Tests',\n  url: '/frequenttests/list',\n  icon: 'icon-star'\n},\n{\n  name: 'Proforma Invoice',\n  url: '/proforma/list',\n  icon: 'icon-puzzle'\n},\n{\n  name: 'Package Testing Req',\n  url: '/package_test/list',\n  icon: 'icon-pie-chart'\n},\n{\n  name: 'Request Analysis',\n  url: '/requestanalysis',\n  icon: 'icon-chart',\n  /*badge: {\n    variant: 'info',\n    text: ''\n  }*/\n},\n{\n  name: 'View Test Result',\n  url: '/inwards',\n  icon: 'icon-bell',\n  /*badge: {\n    variant: 'info',\n    text: ''\n  }*/\n},\n  // {\n  //   name: 'Testing',\n  //   url: '/testrate',\n  //   icon: 'icon-puzzle',\n   \n  //   children: [\n      \n   \n  //   ]\n  // },\n  {\n    title:true,\n    name:\"Publications\"\n    },\n    {\n      name: 'Publication List',\n      url: '/publications/publicationlists',\n      icon: 'icon-pencil'\n    },\n    {\n      name: 'My Purchases',\n      url: '/mypayments/4',\n      icon: 'icon-pencil'\n    },\n  // {\n  //   // name: 'Publications',\n  //   // url: '/theme/colors',\n  //   // icon: 'icon-pencil',\n  //   // children: [\n     \n  //     // {\n  //     //   name: 'Publication Focus List',\n  //     //   url: '/publications/publicationfocuslists',\n  //     //   icon: 'icon-chevron-right'\n  //     // },\n     \n  //   // ]\n  // },\n  {\n    title:true,\n    name:\"UKG\"\n    },\n    {\n      name: 'Count Selection',\n      url: '/ukgpayment',\n      icon: 'icon-puzzle'\n    },\n    {\n      name: 'UKG Downloads',\n      url: '/mypayments/1',\n      icon: 'icon-puzzle'\n    },\n  // {\n  //   name: 'UKG Conv. Factors',\n  //   url: '/testrate',\n  //   icon: 'icon-puzzle',\n  //   children: [\n    \n      \n  //   ]\n  // },\n  {\n    title:true,\n    name:\"Training\"\n    },\n    {\n      name: 'Register ',\n      url: '/webinar',\n      icon: 'icon-pencil',\n    },\n    {\n      name:'My Payments',\n      url:'/comingsoon',\n      icon:'icon-bell',\n    },\n  // {\n  //   name:'Training ',\n  //   url:'/webinar',\n  //   icon:'icon-cursor',\n  //   children:[\n     \n     \n  // ]\n  // },\n  {\n    title:true,\n    name:\"Payments\",\n    \n    },\n  {\n    name: 'My Payments',\n    url: '/mypayments/0',\n    icon: 'icon-chart',\n    /*badge: {\n      variant: 'info',\n      text: ''\n    }*/\n  },\n  {\n    title:true,\n    name:\"Quick Links\"\n    },\n    {\n      name: 'SITRA',\n      url: 'http://www.sitra.org.in',\n      icon: 'icon-share'\n    },\n    // {\n    //   name: 'Meditech',\n    //   url: 'http://www.sitrameditech.org.in/',\n    //   icon: 'icon-share'\n    // },\n  // {\n  //   name: 'Website Links',\n  //   url: '/theme/colors',\n  //   icon: 'icon-pencil',\n  //   children: [\n     \n    \n  //   ]\n  // },\n  {\n    title:true,\n    name:\"Conatct\"\n    },\n  {\n    name: 'Contact us',\n    url: '/contactus',\n    icon: 'icon-phone',\n    /*badge: {\n      variant: 'info',\n      text: ''\n    }*/\n  },\n\n\n  // {\n  //   name: 'Testing',\n  //   url: '/testrate',\n  //   icon: 'icon-puzzle',\n  //   children: [\n  //     {\n  //       name: 'Physical Testing',\n  //       url: '/testrate/testingcharge/8',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'Chemical Testing',\n  //       url: '/testrate/testingcharge/9',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'Knitting / Weaving',\n  //       url: '/testrate/testingcharge/7',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'Engineering',\n  //       url: '/testrate/testingcharge/11',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'Medical Textile',\n  //       url: '/testrate/testingcharge/10',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'NABL Certificates',\n  //       url: '/certificates',\n  //       icon: 'icon-chevron-right'\n  //     }\n  //   ]\n  // },\n  // {\n  //   name: 'Request Analysis',\n  //   url: '/requestanalysis',\n  //   icon: 'icon-chart',\n  //   /*badge: {\n  //     variant: 'info',\n  //     text: ''\n  //   }*/\n  // },\n  // {\n  //   name: 'View Test Result',\n  //   url: '/inwards',\n  //   icon: 'icon-chart',\n  //   /*badge: {\n  //     variant: 'info',\n  //     text: ''\n  //   }*/\n  // },\n  // {\n  //   name: 'My Payments',\n  //   url: '/mypayments/0',\n  //   icon: 'icon-chart',\n  //   /*badge: {\n  //     variant: 'info',\n  //     text: ''\n  //   }*/\n  // },\n  // {\n  //   name: 'Package Testing Req',\n  //   url: '/package_test/list',\n  //   icon: 'icon-pie-chart'\n  // },\n  // {\n  //   name: 'Proforma Invoice',\n  //   url: '/proforma/list',\n  //   icon: 'icon-puzzle'\n  // },\n  // {\n  //   name: 'UKG Conv. Factors',\n  //   url: '/testrate',\n  //   icon: 'icon-puzzle',\n  //   children: [\n  //     {\n  //       name: 'Count Selection',\n  //       url: '/ukgpayment',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'UKG Downloads',\n  //       url: '/mypayments/1',\n  //       icon: 'icon-chevron-right'\n  //     }\n  //     /*\n  //     {\n  //     name: 'SITRA Std. 40s UKG CF',\n  //     url: '/ukg',\n  //     icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'Mill\\'s Act. 40s UKG CF',\n  //       url: '/ukgmill',\n  //       icon: 'icon-chevron-right'\n  //     }*/\n  //   ]\n  // },\n  // {\n  //   name: 'Webinar Registration',\n  //   url: '/webinar',\n  //   icon: 'icon-pencil',\n  // },\n  // {\n  //   name: 'Publications',\n  //   url: '/theme/colors',\n  //   icon: 'icon-pencil',\n  //   children: [\n  //     {\n  //       name: 'Publication List',\n  //       url: '/publications/publicationlists',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'Publication Focus List',\n  //       url: '/publications/publicationfocuslists',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'My Purchases',\n  //       url: '/mypayments/4',\n  //       icon: 'icon-chevron-right'\n  //     }\n  //   ]\n  // },\n  // {\n  //   name: 'frequently Used tests',\n  //   url: '/frequenttests/list',\n  //   icon: 'icon-star'\n  // },\n  // {\n  //   name: 'Website Links',\n  //   url: '/theme/colors',\n  //   icon: 'icon-pencil',\n  //   children: [\n  //     {\n  //       name: 'SITRA',\n  //       url: 'http://www.sitra.org.in',\n  //       icon: 'icon-chevron-right'\n  //     },\n  //     {\n  //       name: 'Meditech',\n  //       url: 'http://www.sitrameditech.org.in/',\n  //       icon: 'icon-chevron-right'\n  //     }\n  //   ]\n  // },\n  // {\n  //   name: 'Contactus',\n  //   url: '/contactus',\n  //   icon: 'icon-chart',\n  //   /*badge: {\n  //     variant: 'info',\n  //     text: ''\n  //   }*/\n  // }\n  /*{\n    name: 'Analysis Requests',\n    url: '/analysisrequests',\n    icon: 'icon-speedometer',\n    badge: {\n      variant: 'info',\n      text: 'NEW'\n    }\n  },*/\n];\n//   // {\n//   //   title: true,\n//   //   name: 'Theme'\n//   // },\n//   // {\n//   //   name: 'Colors',\n//   //   url: '/theme/colors',\n//   //   icon: 'icon-drop'\n//   // },\n//   // {\n//   //   name: 'Typography',\n//   //   url: '/theme/typography',\n//   //   icon: 'icon-pencil'\n//   // },\n//   // {\n//   //   title: true,\n//   //   name: 'Components'\n//   // },\n//   // {\n//   //   name: 'Base',\n//   //   url: '/base',\n//   //   icon: 'icon-puzzle',\n//   //   children: [\n//   //     {\n//   //       name: 'Cards',\n//   //       url: '/base/cards',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Carousels',\n//   //       url: '/base/carousels',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Collapses',\n//   //       url: '/base/collapses',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Forms',\n//   //       url: '/base/forms',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Navbars',\n//   //       url: '/base/navbars',\n//   //       icon: 'icon-puzzle'\n\n//   //     },\n//   //     {\n//   //       name: 'Pagination',\n//   //       url: '/base/paginations',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Popovers',\n//   //       url: '/base/popovers',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Progress',\n//   //       url: '/base/progress',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Switches',\n//   //       url: '/base/switches',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Tables',\n//   //       url: '/base/tables',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Tabs',\n//   //       url: '/base/tabs',\n//   //       icon: 'icon-puzzle'\n//   //     },\n//   //     {\n//   //       name: 'Tooltips',\n//   //       url: '/base/tooltips',\n//   //       icon: 'icon-puzzle'\n//   //     }\n//   //   ]\n//   // },\n//   // {\n//   //   name: 'Buttons',\n//   //   url: '/buttons',\n//   //   icon: 'icon-cursor',\n//   //   children: [\n//   //     {\n//   //       name: 'Buttons',\n//   //       url: '/buttons/buttons',\n//   //       icon: 'icon-cursor'\n//   //     },\n//   //     {\n//   //       name: 'Dropdowns',\n//   //       url: '/buttons/dropdowns',\n//   //       icon: 'icon-cursor'\n//   //     },\n//   //     {\n//   //       name: 'Brand Buttons',\n//   //       url: '/buttons/brand-buttons',\n//   //       icon: 'icon-cursor'\n//   //     }\n//   //   ]\n//   // },\n//   // {\n//   //   name: 'Charts',\n//   //   url: '/charts',\n//   //   icon: 'icon-pie-chart'\n//   // },\n//   // {\n//   //   name: 'Icons',\n//   //   url: '/icons',\n//   //   icon: 'icon-star',\n//   //   children: [\n//   //     {\n//   //       name: 'CoreUI Icons',\n//   //       url: '/icons/coreui-icons',\n//   //       icon: 'icon-star',\n//   //       badge: {\n//   //         variant: 'success',\n//   //         text: 'NEW'\n//   //       }\n//   //     },\n//   //     {\n//   //       name: 'Flags',\n//   //       url: '/icons/flags',\n//   //       icon: 'icon-star'\n//   //     },\n//   //     {\n//   //       name: 'Font Awesome',\n//   //       url: '/icons/font-awesome',\n//   //       icon: 'icon-star',\n//   //       badge: {\n//   //         variant: 'secondary',\n//   //         text: '4.7'\n//   //       }\n//   //     },\n//   //     {\n//   //       name: 'Simple Line Icons',\n//   //       url: '/icons/simple-line-icons',\n//   //       icon: 'icon-star'\n//   //     }\n//   //   ]\n//   // },\n//   // {\n//   //   name: 'Notifications',\n//   //   url: '/notifications',\n//   //   icon: 'icon-bell',\n//   //   children: [\n//   //     {\n//   //       name: 'Alerts',\n//   //       url: '/notifications/alerts',\n//   //       icon: 'icon-bell'\n//   //     },\n//   //     {\n//   //       name: 'Badges',\n//   //       url: '/notifications/badges',\n//   //       icon: 'icon-bell'\n//   //     },\n//   //     {\n//   //       name: 'Modals',\n//   //       url: '/notifications/modals',\n//   //       icon: 'icon-bell'\n//   //     }\n//   //   ]\n//   // },\n//   // {\n//   //   name: 'Widgets',\n//   //   url: '/widgets',\n//   //   icon: 'icon-calculator',\n//   //   badge: {\n//   //     variant: 'info',\n//   //     text: 'NEW'\n//   //   }\n//   // },\n//   // {\n//   //   divider: true\n//   // },\n//   // {\n//   //   title: true,\n//   //   name: 'Extras',\n//   // },\n//   // {\n//   //   name: 'Pages',\n//   //   url: '/pages',\n//   //   icon: 'icon-star',\n//   //   children: [\n//   //     {\n//   //       name: 'Login',\n//   //       url: '/login',\n//   //       icon: 'icon-star'\n//   //     },\n//   //     {\n//   //       name: 'Register',\n//   //       url: '/register',\n//   //       icon: 'icon-star'\n//   //     },\n//   //     {\n//   //       name: 'Error 404',\n//   //       url: '/404',\n//   //       icon: 'icon-star'\n//   //     },\n//   //     {\n//   //       name: 'Error 500',\n//   //       url: '/500',\n//   //       icon: 'icon-star'\n//   //     }\n//   //   ]\n//   // },\n//   // {\n//   //   name: 'Disabled',\n//   //   url: '/dashboard',\n//   //   icon: 'icon-ban',\n//   //   badge: {\n//   //     variant: 'secondary',\n//   //     text: 'NEW'\n//   //   },\n//   //   attributes: { disabled: true },\n//   // },\n//   // {\n//   //   name: 'Download CoreUI',\n//   //   url: 'http://coreui.io/angular/',\n//   //   icon: 'icon-cloud-download',\n//   //   class: 'mt-auto',\n//   //   variant: 'success',\n//   //   attributes: { target: '_blank', rel: 'noopener' }\n//   // },\n//   // {\n//   //   name: 'Try CoreUI PRO',\n//   //   url: 'http://coreui.io/pro/angular/',\n//   //   icon: 'icon-layers',\n//   //   variant: 'danger',\n//   //   attributes: { target: '_blank', rel: 'noopener' }\n//   // }\n// ];\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  private url = environment.apiUrl;\n\n  constructor(private httpClient:HttpClient) { }\n  \n  getCustomerType(params:customerTypeParams):Observable<any>{\n   return this.httpClient.post(this.url+'get_customer_type',params);\n  }\n}\n\nexport interface customerTypeParams{\n  custid:number\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  private url = environment.apiUrl;\n\n  public partnerURL = \"http://122.185.104.198:8075/apex/sitlive/PARTNER_DOC/PARTNER_DOC/SIT/\";\n\n  constructor(private httpClient:HttpClient) { }\n\n  getpaymentdetails(customerId):Observable<any>{\n    return this.httpClient.get(this.partnerURL+String(customerId));\n  }\n\n  getCreditLimit(customerId):Observable<any>{\n    return this.httpClient.post(this.url+'fetch_cust_credit_limit',customerId);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  private Url = environment.apiUrl;\n\n  constructor(private httpClient:HttpClient) { }\n\n  sendEmail(emailParams:EmailDate):Observable<any>{\n    return this.httpClient.post(this.Url+'sendmail',emailParams);\n  }\n}\n\nexport interface EmailDate {\n  toemail:string, \n  subject:string, \n  message:string\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FreqentTestService {\n  private url = environment.apiUrl;\n  constructor(private httpClient: HttpClient) { }\n\n  getFrequentTests(data):Observable<any> {\n    return this.httpClient.post(this.url+'get_cust_freq_tests',data);\n  }\n\n  fetchTestMasterData(data):Observable<any>{\n    return this.httpClient.post(this.url+'fetch_test_master_data',data);\n  }\n\n  insertCustFreqtests(data):Observable<any>{\n    return this.httpClient.post(this.url+'insert_cust_freq_tests',data);\n  }\n\n  deleteCustFreqTests(data):Observable<any>{\n    return this.httpClient.post(this.url+'delete_cust_freq_tests',data);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenralPaymentService {\n  private apiUrl = environment.apiUrl\n  constructor(private httpclient: HttpClient) { }\n\n  payment(params:genralPaymentParams): Observable<any> {\n    return this.httpclient.post(this.apiUrl + 'insert_general_payment_transcations', params)\n  }\n\n  getBankCharges(): Observable<any>{\n    return this.httpclient.get(this.apiUrl+\"get_bank_charges\");\n  }\n}\n\nexport interface genralPaymentParams {\n  data: {\n    formdata: {\n      amountToPay: string,\n      paymentAgainst: string,\n      paymentType: string,\n      paymentComments: string\n    },\n    customerid: number,\n    orderdetails: {\n      amount: string,\n      receipt: string\n    }\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PackageTestService {\n  private url = environment.apiUrl;\n  constructor(private httpClient: HttpClient) { }\n\n  getList(params: packageListParams): Observable<any> {\n    return this.httpClient.post(this.url + 'get_package_test_data', params);\n  }\n\n  getpackageMaster() {\n    return this.httpClient.get(this.url + 'get_package_master_data')\n  }\n\n  getPackageDetails(params: packageDetailsParams) {\n    return this.httpClient.post(this.url + 'get_package_details', params);\n  }\n\n  genratePackageTestRequest(params: genratePackagetest) {\n    return this.httpClient.post(this.url + 'create_request_from_package', params);\n  }\n\n  insertpackage(params: insertpackage): Observable<any> {\n    return this.httpClient.post(this.url + 'insert_package_request', params);\n  }\n  deletepackage(params: deletepackage): Observable<any> {\n    return this.httpClient.post(this.url + 'deletepackage', params);\n  }\n}\n\nexport interface packageListParams {\n  custid: number,\n  searchedtext: string,\n  tablerowstart: string,\n  tablerowlimit: string\n\n}\n\nexport interface packageDetailsParams {\n  PackId: number\n}\n\nexport interface genratePackagetest {\n  RNo: string,\n  custid: number,\n}\n\nexport interface insertpackage {\n  custid: number,\n  PackId: number,\n  noofsamples: number\n}\n\nexport interface deletepackage {\n  reqid: number,\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProformaService {\n  private url = environment.apiUrl;\n  constructor(private httpClient: HttpClient) { }\n  \n  getProformaList(data:any):Observable<any>{\n    return this.httpClient.post(this.url+\"get_proforma_data\",data);\n  }\n\n  genrateRequest(data:any):Observable<any>{\n    return this.httpClient.post(this.url+'create_request_from_quote',data);\n  }\n\n  paymentProcess(postdata):Observable<any>{\n    return this.httpClient.post(this.url+ 'insert_general_payment_transcations/',{data:postdata});\n  }\n\n  getsamplerequest(postdata):Observable<any>{\n    return this.httpClient.post(this.url+'get_request_sample_data',postdata);\n  }\n\n  updateSampleDesc(postdata):Observable<any>{\n    return this.httpClient.post(this.url+'update_request_sample_data',postdata);\n  }\n\n  getSampleTypeData(postdata):Observable<any>{\n    return this.httpClient.post(this.url+'get_sample_type_data',postdata);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicationService {\n  private Url = environment.apiUrl;\n  constructor(private httpClient:HttpClient) { }\n\n  getCourierCharge(params):Observable<any>{\n    return this.httpClient.post(this.Url+'calculate_courier_charge',params)\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmsService {\n\n  // private smsURL = \"https://api.smslane.com/api/v2/SendSMS\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  sendSMS(smsparams:SMSdata): Observable<any> {\n    return this.httpClient.get(\"https://api.smslane.com/api/v2/SendSMS?SenderId=\"+smsparams.SenderId+\"&Is_Unicode=\"+smsparams.Is_Unicode+\"&Is_Flash=\"+smsparams.Is_Flash+\"&Message=\"+smsparams.Message+\"&MobileNumbers=\"+smsparams.MobileNumbers+\"&ApiKey=\"+smsparams.ApiKey+\"&ClientId=\"+smsparams.ClientId);\n  }\n\n}\n\nexport interface SMSdata {\n  SenderId: string,\n  Is_Unicode: boolean,\n  Is_Flash: boolean,\n  Message: string,\n  MobileNumbers: string,\n  ApiKey: string,\n  ClientId: string\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebinarService {\n  private url = environment.apiUrl;\n  constructor(private httpClient: HttpClient) { }\n\n  Insertparticpants(participants): Observable<any> {\n    return this.httpClient.post(this.url + \"webinar_participants_insert\", participants);\n  }\n\n  getParticipants(params:fetchesWebinar): Observable<any> {\n    return this.httpClient.post(this.url + 'fetches_webinar_participants', params)\n  }\n}\n\nexport interface fetchesWebinar {\n  custid: string,\n  cloud_webinar_id: string\n\n}\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AESEncryptDecryptServiceService {\n  secretKey = \"sitraonline123456\";\n\n  constructor() { }\n  encrypt(value : string) : string{\n    return CryptoJS.AES.encrypt(value, this.secretKey.trim()).toString();\n  }\n\n  decrypt(textToDecrypt : string){\n    return CryptoJS.AES.decrypt(textToDecrypt, this.secretKey.trim()).toString(CryptoJS.enc.Utf8);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { UserIdleService } from 'angular-user-idle';\n\n@Component({\n  // tslint:disable-next-line\n  selector: 'body',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent implements OnInit {\n  public idleTimer: number = 0;\n  constructor(\n    private router: Router\n    , private userIdle: UserIdleService\n    ) { }\n\n  ngOnInit() {\n    this.router.events.subscribe((evt) => {\n      if (!(evt instanceof NavigationEnd)) {\n        return;\n      }\n      window.scrollTo(0, 0);\n      // Start watching for user inactivity.\n     console.log('constructior');\n     this.userIdle.startWatching();\n     // Start watching when user idle is starting.\n     this.userIdle.onTimerStart().subscribe(count => {\n       console.log('Start : ' + count);\n       this.userIdle.onIdleStatusChanged().subscribe(status => {\n        console.log('Status ' + status);\n         if (status === false) {\n          // this.userIdle.stopTimer();\n         }\n       });\n    });\n     // Start watch when time is up.\n     this.userIdle.onTimeout().subscribe(() => {\n      console.log('Time is up!');\n      this.doLogout();\n     });\n    });\n  }\n  doLogout() {\n    if (localStorage.getItem('customerid') !== '') {\n      localStorage.setItem('customerid', '0');\n      this.router.navigateByUrl('login');\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { UserIdleModule } from 'angular-user-idle';\nimport { NgModule } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy, DatePipe } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n\nimport { AppComponent } from './app.component';\n\n// Import containers\nimport { DefaultLayoutComponent } from './containers';\n\nimport { ComingsoonComponent } from './views/error/comingsoon.component';\nimport { P404Component } from './views/error/404.component';\nimport { P500Component } from './views/error/500.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { RegisterComponent } from './views/register/register.component';\n// import { NgxExtendedPdfViewerComponent } from 'ngx-extended-pdf-viewer';\n\nconst APP_CONTAINERS = [\n  DefaultLayoutComponent\n];\n\nimport {\n  AppAsideModule,\n  AppBreadcrumbModule,\n  AppHeaderModule,\n  AppFooterModule,\n  AppSidebarModule,\n} from '@coreui/angular';\n\n// Import routing module\nimport { AppRoutingModule } from './app.routing';\n\n// Import 3rd party components\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ChartsModule } from 'ng2-charts';\nimport { AnalysisRequestsComponent } from './views/analysis-requests/analysis-requests.component';\nimport { AnalysisrequestsComponent } from './views/analysisrequests/analysisrequests.component';\nimport { ReportsComponent } from './views/reports/reports.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { UkgComponent } from './views/ukg/ukg.component';\nimport { UkgmillComponent } from './views/ukgmill/ukgmill.component';\nimport { ParentcompComponent } from './views/parentcomp/parentcomp.component';\nimport { Child1Component } from './views/parentcomp/child1.component';\nimport { TestrateComponent } from './views/testrate/testrate.component';\nimport { PhytestrateComponent } from './views/testrate/phytestrate.component';\nimport { TestingchargeComponent } from './views/testrate/testingcharge.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { UkgModule } from './views/ukg/ukg.module';\nimport { PaymentresponseComponent } from './views/paymentresponse/paymentresponse.component';\nimport { UkgpaymentComponent } from './views/ukgpayment/ukgpayment.component';\nimport { MypaymentsComponent } from './views/mypayments/mypayments.component';\nimport { PublicationsComponent } from './views/publications/publications.component';\nimport { PublicationslistComponent } from './views/publications/publicationslist.component';\nimport { PublicationsfocuslistComponent } from './views/publications/publicationsfocuslist.component';\nimport { TestingcertificatesComponent } from './views/dashboard/testingcertificates.component';\nimport { ContactusComponent } from './views/contactus/contactus.component';\nimport { BsModalService, ModalModule } from 'ngx-bootstrap/modal';\nimport { ProfileComponent } from './views/profile/profile.component';\nimport { CameraComponent } from './views/camera/camera.component';\nimport { WebcamModule } from 'ngx-webcam';\nimport { RequestanalysisComponent } from './views/requestanalysis/requestanalysis.component';\nimport { AddupdaterequestanalysisComponent } from './views/requestanalysis/addupdaterequestanalysis.component';\nimport { WebinarComponent } from './views/webinar/webinar.component';\nimport { ViewinwardComponent } from './views/viewinward/viewinward.component';\nimport { InwarddetailsComponent } from './views/viewinward/inwarddetails.component';\nimport { SampletestsComponent } from './views/viewinward/sampletests.component';\nimport { FileuploadComponent } from './views/fileupload/fileupload.component';\nimport { RequestanalysisaddupdateComponent } from './views/requestanalysis/requestanalysisaddupdate.component';\n\nimport { DatepickerModule, BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { InwardsComponent } from './views/inwards/inwards.component';\nimport { InwardviewComponent } from './views/inwards/inwardview.component';\nimport { InwardviewinwarddetailsComponent } from './views/inwards/inwardviewinwarddetails.component';\nimport { InwardviewsampletestsComponent } from './views/inwards/inwardviewsampletests.component';\nimport { FreqTestsListComponent } from './views/customer_freq_tests/freq-tests-list/freq-tests-list.component';\nimport { AddFreqTestsComponent } from './views/customer_freq_tests/add-freq-tests/add-freq-tests.component';\nimport { ProformaListComponent } from './views/proforma/proforma-list/proforma-list.component';\nimport { MatButtonModule } from '@angular/material/button'\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { PackageTestComponent } from './views/package-test/package-test.component';\n// import Stepper from 'bs-stepper';\n\n// import {NgxMqttClientModule} from 'ngx-mqtt-client';\n\n//  const MQTT_CLIENT_OPTION = {\n//     host: 'd8c9828635a1495f868831206b4428d4.s1.eu.hivemq.cloud',\n//     protocol: 'mqtts',\n//     port: 8883,\n//     username : 'admin',\n//     password : 'Admin@123',\n//     path: '',\n//     keepalive: 5\n//  }\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    AppAsideModule,\n    AppBreadcrumbModule.forRoot(),\n    AppFooterModule,\n    AppHeaderModule,\n    AppSidebarModule,\n    PerfectScrollbarModule,\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot(),\n    ChartsModule,\n    HttpClientModule,\n    FormsModule,\n    NgxPaginationModule,\n    UserIdleModule.forRoot({idle: 6000, timeout: 60, ping: 120}),\n    ModalModule,\n    WebcamModule,\n    BsDatepickerModule.forRoot(),\n    DatepickerModule.forRoot(),\n    TooltipModule.forRoot(),\n    PaginationModule.forRoot(),\n    // NgxMqttClientModule.forRoot(MQTT_CLIENT_OPTION)\n    \n    // MatStepperModule,\n    //ZXingScannerModule,\n    //BrowserQRCodeReader \n    /*NgxExtendedPdfViewerComponent*/\n  ],\n  declarations: [\n    AppComponent,\n    ...APP_CONTAINERS,\n    ComingsoonComponent,\n    P404Component,\n    P500Component,\n    LoginComponent,\n    RegisterComponent,\n    AnalysisRequestsComponent,\n    AnalysisrequestsComponent,\n    ReportsComponent,\n    UkgComponent,\n    UkgmillComponent,\n    ParentcompComponent,\n    Child1Component,\n    TestrateComponent,\n    PhytestrateComponent,\n    TestingchargeComponent,\n    PaymentresponseComponent,\n    UkgpaymentComponent,\n    MypaymentsComponent,\n    PublicationsComponent,\n    PublicationslistComponent,\n    PublicationsfocuslistComponent,\n    TestingcertificatesComponent,\n    ContactusComponent,\n    ProfileComponent,\n    CameraComponent,\n    RequestanalysisComponent,\n    AddupdaterequestanalysisComponent,\n    WebinarComponent,\n    ViewinwardComponent,\n    InwarddetailsComponent,\n    SampletestsComponent,\n    FileuploadComponent,\n    RequestanalysisaddupdateComponent,\n    InwardsComponent,\n    InwardviewComponent,\n    InwardviewinwarddetailsComponent,\n    InwardviewsampletestsComponent,\n    FreqTestsListComponent,\n    AddFreqTestsComponent,\n    ProformaListComponent,\n    PackageTestComponent,\n  ],\n  providers: [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy,\n   },\n   BsModalService,\n   DatePipe\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Import Containers\nimport { DefaultLayoutComponent } from './containers';\n\nimport { P404Component } from './views/error/404.component';\nimport { P500Component } from './views/error/500.component';\nimport { ComingsoonComponent } from './views/error/comingsoon.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { RegisterComponent } from './views/register/register.component';\nimport { AnalysisRequestsComponent } from './views/analysis-requests/analysis-requests.component';\nimport { AnalysisrequestsComponent } from './views/analysisrequests/analysisrequests.component';\nimport { UkgComponent } from './views/ukg/ukg.component';\nimport { UkgmillComponent } from './views/ukgmill/ukgmill.component';\nimport { ParentcompComponent } from './views/parentcomp/parentcomp.component';\nimport { Child1Component } from './views/parentcomp/child1.component';\nimport { PhytestrateComponent } from './views/testrate/phytestrate.component';\nimport { TestingchargeComponent } from './views/testrate/testingcharge.component';\nimport { PaymentresponseComponent } from './views/paymentresponse/paymentresponse.component';\nimport { UkgpaymentComponent } from './views/ukgpayment/ukgpayment.component';\nimport { MypaymentsComponent } from './views/mypayments/mypayments.component';\nimport { PublicationslistComponent } from './views/publications/publicationslist.component';\nimport { PublicationsfocuslistComponent } from './views/publications/publicationsfocuslist.component';\nimport { TestingcertificatesComponent } from './views/dashboard/testingcertificates.component';\nimport { ContactusComponent } from './views/contactus/contactus.component';\nimport { ProfileComponent } from './views/profile/profile.component';\nimport { RequestanalysisComponent } from './views/requestanalysis/requestanalysis.component';\nimport { AddupdaterequestanalysisComponent } from './views/requestanalysis/addupdaterequestanalysis.component';\nimport { WebinarComponent } from './views/webinar/webinar.component';\nimport { ViewinwardComponent } from './views/viewinward/viewinward.component';\nimport { RequestanalysisaddupdateComponent } from './views/requestanalysis/requestanalysisaddupdate.component';\nimport { InwardsComponent } from './views/inwards/inwards.component';\nimport { InwardviewComponent } from './views/inwards/inwardview.component';\nimport { FreqTestsListComponent } from './views/customer_freq_tests/freq-tests-list/freq-tests-list.component';\nimport { AddFreqTestsComponent } from './views/customer_freq_tests/add-freq-tests/add-freq-tests.component';\nimport { ProformaListComponent } from './views/proforma/proforma-list/proforma-list.component';\nimport { PackageTestComponent } from './views/package-test/package-test.component';\n\nexport const routes: Routes = [\n  \n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  {\n    path: '404',\n    component: P404Component,\n    data: {\n      title: 'Page 404'\n    }\n  },\n  {\n    path: '500',\n    component: P500Component,\n    data: {\n      title: 'Page 500'\n    }\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    data: {\n      title: 'Login Page'\n    }\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    data: {\n      title: 'Register Page'\n    }\n  },\n  {\n    path: 'viewinward',\n    component: ViewinwardComponent,\n    data: {\n      title: 'View Inward'\n    }\n  },\n  {\n    path: 'analysis_requests',\n    component: AnalysisRequestsComponent,\n    data: {\n      title: 'Analysis Request'\n    }\n  },\n  {\n    path: '',\n    component: DefaultLayoutComponent,\n    data: {\n      title: 'Login'\n      , href : 'base'\n    },\n    children: [\n      {\n        path: 'base',\n        loadChildren: () => import('./views/base/base.module').then(m => m.BaseModule)\n      },\n      {\n        path: 'buttons',\n        loadChildren: () => import('./views/buttons/buttons.module').then(m => m.ButtonsModule)\n      },\n      {\n        path: 'charts',\n        loadChildren: () => import('./views/chartjs/chartjs.module').then(m => m.ChartJSModule)\n      },\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)\n      },\n      {\n        path: 'analysisrequests',\n        component : AnalysisrequestsComponent,\n        /*loadChildren: () => import('./views/analysisrequests/analysisrequests.module').then(m => m.AnalysisrequestsModule)*/\n      },\n      {\n        path: 'icons',\n        loadChildren: () => import('./views/icons/icons.module').then(m => m.IconsModule)\n      },\n      {\n        path: 'notifications',\n        loadChildren: () => import('./views/notifications/notifications.module').then(m => m.NotificationsModule)\n      },\n      {\n        path: 'theme',\n        loadChildren: () => import('./views/theme/theme.module').then(m => m.ThemeModule)\n      },\n      {\n        path: 'widgets',\n        loadChildren: () => import('./views/widgets/widgets.module').then(m => m.WidgetsModule)\n      },\n      {\n        path: 'ukgpayment',\n        /*loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)*/\n        component : UkgpaymentComponent,\n        data: {\n          title: ' Conversion Factors / UKG CF Payments',\n        },\n        /*loadChildren: () => import('./views/analysisrequests/analysisrequests.module').then(m => m.AnalysisrequestsModule)*/\n      },\n      {\n        path: 'ukg',\n        /*loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)*/\n        component : UkgComponent,\n        data: {\n          title: ' Converstion Factors / Standard UKG',\n        },\n        /*loadChildren: () => import('./views/analysisrequests/analysisrequests.module').then(m => m.AnalysisrequestsModule)*/\n      },\n      {\n        path: 'ukgmill',\n        component : UkgmillComponent,\n        data: {\n          title: 'Converstion Factors / Mill Adjusted UKG',\n        },\n        /*loadChildren: () => import('./views/analysisrequests/analysisrequests.module').then(m => m.AnalysisrequestsModule)*/\n      },\n      {\n        path: 'testrate/testingcharge/:deptid',\n        component : TestingchargeComponent,\n        data: {\n          title: 'Testing Details',\n        },\n        /*loadChildren: () => import('./views/analysisrequests/analysisrequests.module').then(m => m.AnalysisrequestsModule)*/\n      },\n      {\n        path: 'paymentresponse/:responseid',\n        component : PaymentresponseComponent,\n        data: {\n          title: 'Testing Details',\n        },\n        /*loadChildren: () => import('./views/analysisrequests/analysisrequests.module').then(m => m.AnalysisrequestsModule)*/\n      },\n      {\n        path: 'publications/publicationlists',\n        component : PublicationslistComponent,\n        data: {\n          title: 'Publication List',\n        }\n      },\n      {\n        path: 'publications/publicationfocuslists',\n        component : PublicationsfocuslistComponent,\n        data: {\n          title: 'Publication Focus List',\n        }\n      },\n      {\n        path: 'mypayments/:type',\n        component : MypaymentsComponent,\n        data: {\n          title: 'My Payments',\n       }\n        /*loadChildren: () => import('./views/analysisrequests/analysisrequests.module').then(m => m.AnalysisrequestsModule)*/\n      },\n      {\n        path: 'certificates',\n        component: TestingcertificatesComponent,\n        data: {\n          title: 'Testing / NABL Certificates'\n        }\n      },\n      {\n        path: 'contactus',\n        component: ContactusComponent,\n        data: {\n          title: 'Contact Us'\n        }\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent,\n        data: {\n          title: 'My Profile'\n        }\n      },\n       \n      {\n        path: 'requestanalysis',\n        component: RequestanalysisComponent,\n        data: {\n          title: 'Request Analysis'\n        }\n      },\n      {\n        path: 'addupdaterequestanalysis/:reqno',\n        component: AddupdaterequestanalysisComponent,\n        data: {\n          title: 'Add or Update Request Analysis'\n        }\n      },{\n        path: 'webinar',\n        component: WebinarComponent,\n        data: {\n          title: 'Webinar'\n        }\n      },\n      {\n        path: 'requestanalysisaddupdate/:reqno',\n        component: RequestanalysisaddupdateComponent,\n        data: {\n          title: 'View Inward'\n        }\n      },\n      {\n        path: 'viewinwarddetails',\n        component: ViewinwardComponent,\n        data: {\n          title: 'View Inward'\n        }\n      },\n      {\n        path: 'inwards',\n        component: InwardsComponent,\n        data: {\n          title: 'Inwards'\n        }\n      },\n      {\n        path: 'inwardview/:inwardno',\n        component: InwardviewComponent,\n        data: {\n          title: 'Inward View'\n        }\n      },\n      \n      \n      {\n        path: 'comingsoon',\n        component: ComingsoonComponent,\n        data: {\n          title: 'Coming Soon'\n        }\n      },\n      {path:'frequenttests/list', component:FreqTestsListComponent, data:{ title:'Frequent Test List'}},\n      \n      {path:'frequenttests/add', component:AddFreqTestsComponent, data:{ title:'Add Frequent Test'}},\n\n      {path:'proforma/list', component:ProformaListComponent, data:{ title:'Proforma List'}},\n\n      {path:'package_test/list', component:PackageTestComponent,data:{title:'Package Test List'}},\n\n    ]\n  },\n  { path: '**', component: P404Component }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","import {Component} from '@angular/core';\nimport { navItems } from '../../_nav';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './default-layout.component.html'\n})\nexport class DefaultLayoutComponent {\n  public sidebarMinimized = false;\n  public navItems = navItems;\n  public idletimerCount = '';\n  public glbLoaderFlag: boolean = false;\n  customername: string;\n  constructor(\n    private router: Router\n    ) {\n      this.glbLoaderFlag = environment.globalLoader;\n      // console.log('loaderStatus : ' + environment.globalLoader);\n      this.idletimerCount = localStorage.getItem('idleTimer');\n      this.customername = localStorage.getItem('customername');\n      /*if (localStorage.getItem('customerid') !== '') {\n        this.router.navigateByUrl('dashboard');\n      }*/\n      // For set empty value when the browser or tab is closed\n      /*window.onunload = () => {\n        // Clear the local storage\n        localStorage.setItem('customerid', '0');\n     };*/\n    }\n  toggleMinimize(e) {\n    this.sidebarMinimized = e;\n  }\n  doLogout() {\n    if (localStorage.getItem('customerid') !== '') {\n      localStorage.setItem('customerid', '0');\n      localStorage.setItem('lims_custid', '0');\n      this.router.navigateByUrl('login');\n    }\n  }\n}\n","export * from './default-layout.component';\n","export * from './default-layout';\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\nfunction _window(): any{\n  return window;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerdataService {\n  public SessionCustomerId: number = 0;\n  private baseUrl = '';\n  banners: any = ['1', '2', '3'];\n  constructor(\n    private http: HttpClient\n    , private router: Router\n  ) {\n  }\n  get nativeWindow():any{\n    return _window();\n  }\n\n  getCustomerAnalysis(functioname) {\n    this.http.get(`${this.baseUrl}/` + functioname).subscribe(\n      data => {\n        console.log(data);\n        /*this.dataStore.todos = data;\n        this._todos.next(Object.assign({}, this.dataStore).todos);\n        */\n      },\n      error => console.log('Could not load todos.')\n    );\n  }\n  async getServerData(methodName, params) {\n    let responseData: any;\n    console.log('--------------------SERVICE CONNECTED-----------------');\n    await this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/' + methodName, { data: params }).subscribe({\n      next: data => {\n        console.log('--------------------DATA START-----------------');\n        responseData = data;\n        console.log('--------------------DATA END-----------------');\n        return responseData;\n      },\n      error: error => {\n        return error;\n      }\n    });\n    console.log('--------------------SERVICE END-----------------');\n  }\n  getdata(functioname, parms) {\n    this.http.get('http://192.168.1.7:82/cloudwallet/index.php/api/' + functioname, { params: parms }).subscribe(data => {\n      return data;\n    });\n    /*\n    await this.http.get(`${this.baseUrl}/` + functioname, {data : parms}).subscribe(\n      data => {\n        console.log(data);\n        // this.dataStore.todos = data;\n        // this._todos.next(Object.assign({}, this.dataStore).todos);\n        //\n      },\n      error => console.log('Could not load todos.')\n    );\n    */\n  }\n  public getNews() {\n    // return this.http.get(`https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=${this.API_KEY}`);\n  }\n  getBanners(): Observable<any[]> {\n    return this.banners;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FuYWx5c2lzLXJlcXVlc3RzL2FuYWx5c2lzLXJlcXVlc3RzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { navItems } from '../../_nav';\nimport { INavData } from '@coreui/angular';\nimport { NgModule } from '@angular/core';\n\n\n@Component({\n  selector: 'app-analysis-requests',\n  templateUrl: './analysis-requests.component.html',\n  styleUrls: ['./analysis-requests.component.css']\n})\nexport class AnalysisRequestsComponent {\n  constructor() { }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FuYWx5c2lzcmVxdWVzdHMvYW5hbHlzaXNyZXF1ZXN0cy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ServerdataService } from './../../serverdata.service';\n\n@Component({\n  selector: 'app-analysisrequests',\n  templateUrl: './analysisrequests.component.html',\n  styleUrls: ['./analysisrequests.component.css']\n})\nexport class AnalysisrequestsComponent  {\n\n  constructor(\n    private serverdata: ServerdataService\n  ) { }\n  getServerData() {\n    this.serverdata.getCustomerAnalysis('get_customer_analysis');\n  }\n}\n","export default \".actionBtn {\\r\\n    font-size: 4em;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .snapshot {\\r\\n    text-align: center;\\r\\n    img {\\r\\n      max-width: 800px;\\r\\n      max-height: 800px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  ul.links {\\r\\n    padding-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvY2FtZXJhL2NhbWVyYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEI7TUFDRSxnQkFBZ0I7TUFDaEIsaUJBQWlCO0lBQ25CO0VBQ0Y7O0VBRUE7SUFDRSxvQkFBb0I7RUFDdEIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9jYW1lcmEvY2FtZXJhLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uQnRuIHtcclxuICAgIGZvbnQtc2l6ZTogNGVtO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAuc25hcHNob3Qge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaW1nIHtcclxuICAgICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICAgICAgbWF4LWhlaWdodDogODAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIHVsLmxpbmtzIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICAiXX0= */\";","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { WebcamImage, WebcamInitError, WebcamUtil } from 'ngx-webcam';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-camera',\n  templateUrl: './camera.component.html',\n  styleUrls: ['./camera.component.css']\n})\nexport class CameraComponent implements OnInit {\n  @Output() getPicture = new EventEmitter<WebcamImage>();\n  showWebcam = true;\n  isCameraExist = true;\n\n  errors: WebcamInitError[] = [];\n\n  // webcam snapshot trigger\n  private trigger: Subject<void> = new Subject<void>();\n  private nextWebcam: Subject<boolean | string> = new Subject<boolean | string>();\n\n  constructor() { }\n\n\n  ngOnInit(): void {\n    WebcamUtil.getAvailableVideoInputs()\n      .then((mediaDevices: MediaDeviceInfo[]) => {\n        this.isCameraExist = mediaDevices && mediaDevices.length > 0;\n      });\n  }\n\n  takeSnapshot(): void {\n    this.trigger.next();\n  }\n\n  onOffWebCame() {\n    this.showWebcam = !this.showWebcam;\n  }\n\n  handleInitError(error: WebcamInitError) {\n    this.errors.push(error);\n  }\n\n  changeWebCame(directionOrDeviceId: boolean | string) {\n    this.nextWebcam.next(directionOrDeviceId);\n  }\n\n  handleImage(webcamImage: WebcamImage) {\n    this.getPicture.emit(webcamImage);\n    this.showWebcam = false;\n  }\n\n  get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n\n  get nextWebcamObservable(): Observable<boolean | string> {\n    return this.nextWebcam.asObservable();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbnRhY3R1cy9jb250YWN0dXMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-contactus',\n  templateUrl: './contactus.component.html',\n  styleUrls: ['./contactus.component.css']\n})\nexport class ContactusComponent implements OnInit {\n  public SessionCustomerId: number = 0;\n  constructor(\n    private router: Router\n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n   }\n\n  ngOnInit(): void {\n    if (this.SessionCustomerId <= 0) {\n      this.router.navigateByUrl('login');\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2N1c3RvbWVyX2ZyZXFfdGVzdHMvYWRkLWZyZXEtdGVzdHMvYWRkLWZyZXEtdGVzdHMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-freq-tests',\n  templateUrl: './add-freq-tests.component.html',\n  styleUrls: ['./add-freq-tests.component.css']\n})\nexport class AddFreqTestsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"table#Add-test-table thead,table#Add-test-table tbody { display: block; }\\r\\n\\r\\ntable#Add-test-table tbody {\\r\\n    height: 50%;\\r\\n    overflow-y: auto;    /* Trigger vertical scroll    */\\r\\n    overflow-x: hidden;  /* Hide the horizontal scroll */\\r\\n}\\r\\n\\r\\n.table.frequentTestList {\\r\\n    border: 1px solid rgb(192, 191, 191);\\r\\n}\\r\\n\\r\\n.row.section-list:hover{\\r\\n    background-color: #E4E7EA;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvY3VzdG9tZXJfZnJlcV90ZXN0cy9mcmVxLXRlc3RzLWxpc3QvZnJlcS10ZXN0cy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0RBQXdELGNBQWMsRUFBRTs7QUFFeEU7SUFDSSxXQUFXO0lBQ1gsZ0JBQWdCLEtBQUssK0JBQStCO0lBQ3BELGtCQUFrQixHQUFHLCtCQUErQjtBQUN4RDs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2N1c3RvbWVyX2ZyZXFfdGVzdHMvZnJlcS10ZXN0cy1saXN0L2ZyZXEtdGVzdHMtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUjQWRkLXRlc3QtdGFibGUgdGhlYWQsdGFibGUjQWRkLXRlc3QtdGFibGUgdGJvZHkgeyBkaXNwbGF5OiBibG9jazsgfVxyXG5cclxudGFibGUjQWRkLXRlc3QtdGFibGUgdGJvZHkge1xyXG4gICAgaGVpZ2h0OiA1MCU7XHJcbiAgICBvdmVyZmxvdy15OiBhdXRvOyAgICAvKiBUcmlnZ2VyIHZlcnRpY2FsIHNjcm9sbCAgICAqL1xyXG4gICAgb3ZlcmZsb3cteDogaGlkZGVuOyAgLyogSGlkZSB0aGUgaG9yaXpvbnRhbCBzY3JvbGwgKi9cclxufVxyXG5cclxuLnRhYmxlLmZyZXF1ZW50VGVzdExpc3Qge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiKDE5MiwgMTkxLCAxOTEpO1xyXG59XHJcblxyXG4ucm93LnNlY3Rpb24tbGlzdDpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNEU3RUE7XHJcbn0iXX0= */\";","import { Component, Inject, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport Swal from 'sweetalert2';\nimport { FreqentTestService } from '../../../_services/freqent-test.service';\n\n\n@Component({\n  selector: 'app-freq-tests-list',\n  templateUrl: './freq-tests-list.component.html',\n  styleUrls: ['./freq-tests-list.component.css']\n})\nexport class FreqTestsListComponent implements OnInit {\n  private customerId: number;\n  frequentTestList=[];\n  postData: {custid: number; search: string; tablerowstart:number; tablerowlimit:number};\n\n\n  modalRef: BsModalRef;\n  SlectedTest: { custid: number; testid: number; };\n  DeleteTest: { custid: number; testid: number; };\n  testList = [];\n  TestMasterList: any[];\n  PaginatedFreqTestList: any[];\n  FreqTestItemperpage: any = 10;\n  itemperpage: number= 10;\n  searchText: any= \"\";\n  PaginatedTestMasterList: any;\n  searchTestMaster:any;\n  testMasterpostData: { custid: number; searchedtext: any; };\n\n  constructor(@Inject(FreqentTestService) private FrequentTestService: FreqentTestService, private modalService: BsModalService) {\n    this.customerId = Number(localStorage.getItem('customerid'));\n   \n  }\n\n  ngOnInit(): void {\n\n    //get list for freaquently used test\n    this.getFrequentTest();\n\n    //fetch test master data for slection grid\n    this.fetchTestMaster();\n\n  }\n  getFrequentTest() {\n    this.postData = {\n      custid: this.customerId,\n      search: this.searchText,\n      tablerowstart:1,\n      tablerowlimit:10000\n    }\n    this.FrequentTestService.getFrequentTests(JSON.stringify(this.postData)).subscribe(res => {\n      let result = res.data;\n      this.frequentTestList = result;\n      this.PaginatedFreqTestList=this.frequentTestList.slice(0, this.FreqTestItemperpage);\n\n      console.log(result);\n    }, err => {\n      alert(\"something went wrong\");\n      console.log(err);\n    });\n  }\n\n  fetchTestMaster() {\n    this.testMasterpostData = {\n      custid: this.customerId,\n      searchedtext: this.searchTestMaster\n    }\n    var postData = JSON.stringify(this.testMasterpostData);\n    this.FrequentTestService.fetchTestMasterData(postData).subscribe((res) => {\n      let result = res;\n      this.TestMasterList = result;\n      this.PaginatedTestMasterList=this.TestMasterList.slice(0, 20);\n      console.log(result);\n    }, err => {\n      alert(\"something went wrong\");\n      console.log(err);\n    });\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, { class: 'modal-lg modal-success' });\n  }\n  Modelclose() {\n    this.modalRef.hide();\n    this.testList = [];\n  }\n  testselection(event, Testid) {\n    let isexsists = this.testList.findIndex(x => x.testid == Testid);\n    if (isexsists > -1) {\n      this.testList.splice(isexsists, 1);\n      // console.log(this.testList);\n      return;\n    }\n    this.testList.push({ custid: this.customerId, testid: Testid })\n    console.log(this.testList);\n  }\n\n  StoreNewFreqTestList() {\n    this.FrequentTestService.insertCustFreqtests(this.testList).subscribe((res) => {\n      let result = res;\n  \n      // result.status == true ? alert(\"Added to Freqent Used Tests Successfully\") : alert(\"something went WRONG\");\n      if (!result.status) {\n        Swal.fire('ERROR', 'something went WRONG', 'error');\n      } else {\n        Swal.fire('SUCCESS', 'Added to Freqent Used Tests Successfully', 'success');\n      }\n      this.Modelclose();\n      this.fetchTestMaster();\n      this.getFrequentTest();\n    })\n  }\n\n \n\n  DeleteFreqTest(TestId) {\n    // let confirmFlag = confirm(\"Do you want to delete this?\")\n    Swal.fire({\n      title: 'Do you want to Delete this?',\n      confirmButtonText: 'Confirm',\n      icon: \"question\",\n      showCancelButton: true,\n      showConfirmButton: true\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.value) {\n        this.DeleteTest = { custid: this.customerId, testid: TestId };\n        this.FrequentTestService.deleteCustFreqTests(JSON.stringify(this.DeleteTest)).subscribe((res) => {\n          let result = res;\n          if (result.status == true) { \n            Swal.fire('Deleted','Successfully deleted From Freqent Used Tests')\n          } else { \n            alert(\"something went WRONG\") \n          };\n          this.getFrequentTest();\n        }, (err) => {\n          console.log(err);\n        });\n      }\n    })\n  }\n  itemPerPage(){\n    this.freqTestPageChanged({itemsPerPage:this.FreqTestItemperpage,page:1});\n  }\n\n  freqTestPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    // this.returnedArray = this.contentArray.slice(startItem, endItem);\n    this.PaginatedFreqTestList=this.frequentTestList.slice(startItem, endItem);\n  }\n}\n","import {Component, OnDestroy} from '@angular/core';\r\nimport { CarouselConfig } from 'ngx-bootstrap/carousel';\r\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\r\n\r\n@Component({\r\n  selector: 'app-testingcertificates',\r\n  templateUrl: './testingcertificates.component.html',\r\n  providers: [\r\n    { provide: CarouselConfig, useValue: { interval: 1500, noPause: false } },\r\n  ]\r\n})\r\nexport class TestingcertificatesComponent implements OnDestroy {\r\n\r\n  myInterval: number | false = 6000;\r\n  slides: any[] = [];\r\n  activeSlideIndex: number = 0;\r\n  noWrapSlides: boolean = false;\r\n\r\n  constructor() {\r\n    for (let i = 0; i < 4; i++) {\r\n      this.addSlide();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.myInterval = 0;\r\n    this.noWrapSlides = true;\r\n    this.myInterval = false;\r\n  }\r\n\r\n  addSlide(): void {\r\n    setTimeout( () => {\r\n      const seed = Math.random().toString(36).slice(-6);\r\n      this.slides.push({\r\n        image: `https://picsum.photos/seed/${seed}/900/500`\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  removeSlide(index?: number): void {\r\n    const toRemove = index ? index : this.activeSlideIndex;\r\n    this.slides.splice(toRemove, 1);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '404.component.html'\n})\nexport class P404Component {\n\n  constructor() { }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: '500.component.html'\n})\nexport class P500Component {\n\n  constructor() { }\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'comingsoon.component.html'\r\n})\r\nexport class ComingsoonComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2ZpbGV1cGxvYWQvZmlsZXVwbG9hZC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fileupload',\n  templateUrl: './fileupload.component.html',\n  styleUrls: ['./fileupload.component.css']\n})\nexport class FileuploadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2lud2FyZHMvaW53YXJkcy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgIf } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { environment } from './../../../environments/environment';\nimport { AESEncryptDecryptServiceService } from '../../aesencrypt-decrypt-service.service';\n\n@Component({\n  selector: 'app-inwards',\n  templateUrl: './inwards.component.html',\n  styleUrls: ['./inwards.component.css']\n})\nexport class InwardsComponent implements OnInit {\n    public SessionCustomerId: number = 0;\n    public SessionLimsCustomerId : number = 0;\n    public inwardList: InwardList[];  \n    public testRates: TestRates[];\n    public loaderFlag: boolean = false;\n    public tableHeading = 'Inwards';\n    public searchText: string = '';\n    public apiParams  = {\n        searchedText: ''\n        , tablerowstart: 0\n        , tablerowlimit: 10\n        , paymenttype: 0\n    };\n    public pageCount: number = 1;\n    public pagenationNoofPage: number = 1;\n    public pagenationConfiguration = {\n      pageNos: []\n      , currentPageNo: Number(1)\n    };\n    public startPageNo: number = 1;\n    public endPageNo: number = 5;\n    public spinnerFlag: boolean = false;\n  constructor(\n    private http: HttpClient\n    , private activatedRoute: ActivatedRoute\n    , private router: Router\n    , private _AESEncryptDecryptService: AESEncryptDecryptServiceService\n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n    this.SessionLimsCustomerId = Number(localStorage.getItem('lims_custid'));\n  }\n\n  ngOnInit(): void {\n    // const routeParams = this.activeRoute.snapshot.params;\n    if (this.SessionCustomerId <= 0) {\n      this.router.navigateByUrl('login');\n    }\n    this.activatedRoute.params.subscribe(routeParams => {\n        this.apiParams.paymenttype = Number(this.activatedRoute.snapshot.params.type);\n        // this.changeDisplayCount();\n        this.resetDataValues();\n    });\n  }\n  async getData() {\n    // console.log(this.deptid);\n    this.apiParams.searchedText = this.searchText;\n    this.apiParams.tablerowstart = this.pagenationConfiguration.currentPageNo;\n    this.loaderFlag = true;\n    \n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'get_inwards/' + this.SessionLimsCustomerId, { data : this.apiParams }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        this.inwardList = data.data;\n        this.pageCount = Number(data.pagecount);\n        if (this.pageCount <= 5) {\n          // console.log('page no validatoin ' + this.pageCount);\n          this.endPageNo = this.pageCount;\n        } else {\n          // scenario - 1\n          // if the current page no in  between startpage and end page\n          // tslint:disable-next-line:max-line-length\n          if ( this.pagenationConfiguration.currentPageNo >= this.startPageNo && this.pagenationConfiguration.currentPageNo <= this.endPageNo) {\n            // do something\n          } else {\n            console.log('Current page no ' + this.pagenationConfiguration.currentPageNo);\n            console.log('Start page no ' + this.startPageNo);\n            console.log('End page no ' + this.endPageNo);\n            // this.endPageNo = Number(5);\n            // tslint:disable-next-line:max-line-length\n            if (this.pagenationConfiguration.currentPageNo !== Number(1) && this.pagenationConfiguration.currentPageNo >  this.startPageNo) {\n              this.startPageNo = this.startPageNo + Number(1);\n              this.endPageNo = this.endPageNo + Number(1);\n            } else if (this.pagenationConfiguration.currentPageNo <  this.startPageNo) {\n              this.startPageNo = this.startPageNo - Number(1);\n              this.endPageNo = this.endPageNo - Number(1);\n            }\n          }\n        }\n        // console.log('data count' + data.datacount);\n        // console.log('page count' + data.pagecount);\n        // console.log('Last Page No' + this.endPageNo);\n        // console.log('--------------------DATA END-----------------');\n        this.pageNos();\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n    console.log('--------------------SERVICE END-----------------');\n    setTimeout(() => {\n        this.loaderFlag = false;\n    }, 500);\n  }\n  pageNos() {\n    console.log(' pageNos function : ' + this.endPageNo);\n    this.pagenationConfiguration.pageNos = [];\n    for ( let j = this.startPageNo; j <= this.endPageNo; j++) {\n      this.pagenationConfiguration.pageNos[j] = j;\n    }\n    // console.log(this.pagenationConfiguration);\n  }\n  pagenationEvent(type: number, pageno: number) {\n    // console.log('page no clicked');\n    // console.log(type);\n    if (type === 1) { // page no click event\n      if (pageno === this.pagenationConfiguration.currentPageNo) {\n          // do nothing\n      } else {\n        this.pagenationConfiguration.currentPageNo = pageno;\n        this.getData();\n      }\n    } else if (type === 2) { // do the Next butting event\n      // console.log('next page btn event; End page no ' + this.endPageNo);\n      // console.log(' current page no ' + this.pagenationConfiguration.currentPageNo);\n      if (this.pagenationConfiguration.currentPageNo < Number(this.pageCount) ) { // validate last page\n        // console.log('if');\n        // this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n        // this.getData();\n        if (this.pagenationConfiguration.currentPageNo > 5) {\n            this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n            this.startPageNo = this.startPageNo + 1;\n            this.endPageNo = this.pagenationConfiguration.currentPageNo;\n            this.getData();\n        } else {\n          this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n          this.getData();\n        }\n      }\n    } else if (type === 3) { // do the Previous butting event\n      if (this.pagenationConfiguration.currentPageNo !== 1) { // for valiate first page no\n        this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) - Number(1);\n        this.getData();\n      }\n    }\n  }\n  changeDisplayCount() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.getData();\n  }\n  resetDataValues() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.apiParams.searchedText = '';\n    this.apiParams.tablerowlimit = 10;\n    this.apiParams.tablerowstart = 0;\n    this.getData();\n  }\n  viewInward(inwardno){\n    if(inwardno !== ''){\n      this.router.navigateByUrl('inwardview/'+inwardno);\n    }\n  }\n   \n   \n   \n   \n   \n  \n  }\n  export interface TestRates {\n  labname: string;\n  testname: string;\n  alias: any;\n  standard: any;\n  samplesize: any;\n  memrate: any;\n  nonmemrate: any;\n  }\n  export interface InwardList {\n    inwardno: any;\n    inward_date: any;    \n    noofsamples : string;\n    sample_type : string;\n    status_string: any;\n    status: any;\n}\n\n","export default \".fullwidth {\\r\\n  width: 100%;\\r\\n}\\r\\n.fontbold {\\r\\n  font-weight: bold;\\r\\n}\\r\\n.fontunderline {\\r\\n  text-decoration: underline;\\r\\n}\\r\\n.loader {\\r\\n  height: 5px;\\r\\n  width: 100%;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  background-color: #ddd;\\r\\n  margin-top: -6px;\\r\\n}\\r\\n.loader:before {\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  left: -200px;\\r\\n  width: 200px;\\r\\n  height: 5px;\\r\\n  /* background-color: #1449A5; */\\r\\n  -webkit-animation: loading 2s linear infinite;\\r\\n          animation: loading 2s linear infinite;\\r\\n}\\r\\n@-webkit-keyframes loading {\\r\\n  from {\\r\\n    left: -200px;\\r\\n    width: 30%;\\r\\n    background-color: yellow;\\r\\n  }\\r\\n  50% {\\r\\n    width: 30%;\\r\\n    background-color: red;\\r\\n  }\\r\\n  70% {\\r\\n    width: 70%;\\r\\n  }\\r\\n  80% {\\r\\n    left: 50%;\\r\\n    background-color: rgb(255, 0, 221);\\r\\n  }\\r\\n  95% {\\r\\n    left: 120%;\\r\\n  }\\r\\n  to {\\r\\n    left: 100%;\\r\\n  }\\r\\n}\\r\\n@keyframes loading {\\r\\n  from {\\r\\n    left: -200px;\\r\\n    width: 30%;\\r\\n    background-color: yellow;\\r\\n  }\\r\\n  50% {\\r\\n    width: 30%;\\r\\n    background-color: red;\\r\\n  }\\r\\n  70% {\\r\\n    width: 70%;\\r\\n  }\\r\\n  80% {\\r\\n    left: 50%;\\r\\n    background-color: rgb(255, 0, 221);\\r\\n  }\\r\\n  95% {\\r\\n    left: 120%;\\r\\n  }\\r\\n  to {\\r\\n    left: 100%;\\r\\n  }\\r\\n}\\r\\nul {\\r\\n  list-style-type: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  overflow: hidden;\\r\\n  background-color: #e4e5e6;\\r\\n}\\r\\nli {\\r\\n  float: left;\\r\\n}\\r\\nli a {\\r\\n  display: block;\\r\\n  text-align: center;\\r\\n  padding: 14px 16px;\\r\\n  text-decoration: none;\\r\\n}\\r\\nli a:hover:not(.active) {\\r\\n  background-color: #04aa6d;\\r\\n  border-radius: 20px 20px 0px 0px;\\r\\n  color: white;\\r\\n}\\r\\n.active {\\r\\n  background-color: #04aa6d;\\r\\n  border-radius: 20px 20px 0px 0px;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.border1 {\\r\\n  background-color: white;\\r\\n  margin-left: 30px;\\r\\n  border-radius: 0.75rem;\\r\\n}\\r\\n.border2 {\\r\\n  background-color: white;\\r\\n  border-radius: 0.75rem;\\r\\n}\\r\\n.border3 {\\r\\n  background-color: white;\\r\\n  border-radius: 0.75rem;\\r\\n}\\r\\n.row {\\r\\n  display: inline-flex;\\r\\n  gap: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvaW53YXJkcy9pbndhcmR2aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFlBQVk7RUFDWixXQUFXO0VBQ1gsK0JBQStCO0VBQy9CLDZDQUFxQztVQUFyQyxxQ0FBcUM7QUFDdkM7QUFFQTtFQUNFO0lBQ0UsWUFBWTtJQUNaLFVBQVU7SUFDVix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFVBQVU7SUFDVixxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsU0FBUztJQUNULGtDQUFrQztFQUNwQztFQUNBO0lBQ0UsVUFBVTtFQUNaO0VBQ0E7SUFDRSxVQUFVO0VBQ1o7QUFDRjtBQXZCQTtFQUNFO0lBQ0UsWUFBWTtJQUNaLFVBQVU7SUFDVix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFVBQVU7SUFDVixxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsU0FBUztJQUNULGtDQUFrQztFQUNwQztFQUNBO0lBQ0UsVUFBVTtFQUNaO0VBQ0E7SUFDRSxVQUFVO0VBQ1o7QUFDRjtBQUNBO0VBQ0UscUJBQXFCO0VBQ3JCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsV0FBVztBQUNiO0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixxQkFBcUI7QUFDdkI7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQ0FBZ0M7RUFDaEMsWUFBWTtBQUNkO0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLHVCQUF1QjtFQUN2QixpQkFBaUI7RUFDakIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxvQkFBb0I7RUFDcEIsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvaW53YXJkcy9pbndhcmR2aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbHdpZHRoIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uZm9udGJvbGQge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5mb250dW5kZXJsaW5lIHtcclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG4ubG9hZGVyIHtcclxuICBoZWlnaHQ6IDVweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xyXG4gIG1hcmdpbi10b3A6IC02cHg7XHJcbn1cclxuLmxvYWRlcjpiZWZvcmUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGxlZnQ6IC0yMDBweDtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgaGVpZ2h0OiA1cHg7XHJcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogIzE0NDlBNTsgKi9cclxuICBhbmltYXRpb246IGxvYWRpbmcgMnMgbGluZWFyIGluZmluaXRlO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGxvYWRpbmcge1xyXG4gIGZyb20ge1xyXG4gICAgbGVmdDogLTIwMHB4O1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICB9XHJcbiAgNTAlIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgfVxyXG4gIDcwJSB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuICA4MCUge1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMCwgMjIxKTtcclxuICB9XHJcbiAgOTUlIHtcclxuICAgIGxlZnQ6IDEyMCU7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIGxlZnQ6IDEwMCU7XHJcbiAgfVxyXG59XHJcbnVsIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTRlNWU2O1xyXG59XHJcblxyXG5saSB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbmxpIGEge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiAxNHB4IDE2cHg7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG5saSBhOmhvdmVyOm5vdCguYWN0aXZlKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA0YWE2ZDtcclxuICBib3JkZXItcmFkaXVzOiAyMHB4IDIwcHggMHB4IDBweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwNGFhNmQ7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweCAyMHB4IDBweCAwcHg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5ib3JkZXIxIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBtYXJnaW4tbGVmdDogMzBweDtcclxuICBib3JkZXItcmFkaXVzOiAwLjc1cmVtO1xyXG59XHJcbi5ib3JkZXIyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAwLjc1cmVtO1xyXG59XHJcbi5ib3JkZXIzIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAwLjc1cmVtO1xyXG59XHJcbi5yb3cge1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGdhcDogMzBweDtcclxufVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-inwardview',\n  templateUrl: './inwardview.component.html',\n  styleUrls: ['./inwardview.component.css']\n})\nexport class InwardviewComponent implements OnInit {\n  public tabIndex : Number = 0;\n  public loaderFlag : Boolean = false;\n  public SessionInwardno : any = '';\n  public SessionAccessno : any = '';\n \n  constructor(\n    private router: Router\n    , private activatedRoute : ActivatedRoute\n  ) { \n    this.SessionInwardno = String(this.activatedRoute.snapshot.params.inwardno);\n    \n  }\n\n  ngOnInit(): void {\n    this.tabIndex = 1;\n  }\n  changeTabIndex(index){\n    this.loaderFlag = true;\n    this.tabIndex = index;\n    setTimeout(() => {\n      this.loaderFlag = false;  \n    }, 2000);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\n\n@Component({\n  selector: 'app-inwardviewinwarddetails',\n  templateUrl: './inwardviewinwarddetails.component.html',\n  styleUrls: ['./inwardview.component.css']\n})\nexport class InwardviewinwarddetailsComponent implements OnInit {  \n  public SessionLimsCustomerId : Number = 0;\n  public SessionInwardno : any = '';\n  public SessionAccessno : any = '';\n  public pieChartLabels: string[] = ['Pending', 'In-Progress', 'Completed'];\n  public pieChartData: number[] = [0, 0, 0];\n  colors =  [\n    {\n      backgroundColor: [\n        '#fc4e4e',\n        '#3ec5f2',\n        '#0EA563'\n      ]\n    }\n  ];\n  public pieChartType = 'pie';\n  public inwardDetails = {\n    inwardno : ''\n    , accesscode : ''\n  }\n  public inwardPageDetails = {\n      inwardno : ''\n      , inward_date : ''\n      , samplesreturn : ''\n      , nablcomment : ''\n      , name : ''\n      , address1 : ''\n      , address2 : ''\n      , city : ''\n      , state : ''\n      , pincode : ''\n      , phoneno : ''\n      , mobile : ''\n      , emailid : ''\n      , reqno : ''\n      , reqdate : ''\n      , receiptno : ''\n      , receiptdate : ''\n      , comments : ''\n      , noofsamples : ''\n      , invoiceno : ''\n      , testcharges : ''\n      , discount : ''\n      , subtotal_a : ''\n      , other_charge : ''\n      , additional_charge : ''\n      , taxable_charge : ''\n      , cgst : ''\n      , sgst : ''\n      , igst : ''\n      , subtotal_b : ''\n      , rounded_off : ''\n      , netamt : ''\n  }\n  constructor(\n    private http : HttpClient\n    , private router: Router\n    , private activatedRoute : ActivatedRoute\n  ) {\n    this.SessionInwardno = String(this.activatedRoute.snapshot.params.inwardno);\n    this.SessionLimsCustomerId = Number(localStorage.getItem('lims_custid'));\n    //this.SessionInwardno = localStorage.getItem('session_inwardno');\n    //this.SessionAccessno = localStorage.getItem('session_accessno');\n   }\n\n  ngOnInit(): void {\n     if(this.SessionInwardno !== ''){\n       this.getInwardDetails();\n     }else{\n     // this.router.navigateByUrl('login');\n     }\n  }\n  // Pie\n  \n  async getInwardDetails(){\n    let params = {\n      inwardno : this.SessionInwardno\n      , custid : this.SessionLimsCustomerId\n    }\n    await this.http.post<any>(environment.apiUrl + 'inward_view_details/1', { data: params }).subscribe({\n      next: data => {\n        this.inwardPageDetails = data.data;\n        this.pieChartData = data.data.sample_statistics;\n        \n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Component({\n  selector: 'app-inwardviewsampletests',\n  templateUrl: './inwardviewsampletests.component.html',\n  styleUrls: ['./inwardview.component.css']\n})\n@Pipe({name: 'keys'})\nexport class InwardviewsampletestsComponent implements OnInit {  \n  public SessionLimsCustomerId : Number = 0;\n  public SessionInwardno : any = '';\n  public SessionAccessno : any = '';\n  public inwardSampleLists : SampleList[] = [];\n  public inwardStandardNarration : any[] = [];\n  public inwardDetail = {\n    descritiveType : ''\n    , descriptiveResult : ''\n    , documentRoot : ''\n  }\n  public inwardSampleTests : any = [];\n  transform(value, args:string[]) : any {\n    let keys = [];\n    for (let key in value) {\n      keys.push({key: key, value: value[key]});\n    }\n    return keys;\n  }\n  public pdfUrl : any = '';\n  constructor(\n    private http : HttpClient\n    , private router: Router\n    , private activatedRoute : ActivatedRoute\n  ) { \n    this.SessionInwardno = String(this.activatedRoute.snapshot.params.inwardno);\n    this.SessionLimsCustomerId = Number(localStorage.getItem('lims_custid'));\n  }\n\n  ngOnInit(): void {\n    \n    if(this.SessionInwardno !== ''){\n      this.getSamplesTestsAndResults();\n    }\n    this.pdfUrl = environment.baseUrl+'pdf/';\n     \n  }\n  // Pie\n  public pieChartLabels: string[] = ['Pending', 'In-Progress', 'Completed'];\n  public pieChartData: number[] = [7, 5, 3];\n  public pieChartType = 'pie';\n  \n  async getSamplesTestsAndResults(){\n    let params = {\n      inwardno : this.SessionInwardno\n      , custid : this.SessionLimsCustomerId\n    }\n    await this.http.post<any>(environment.apiUrl + 'get_samples_tests_and_results/', { data: params }).subscribe({\n      next: data => {\n       // data = data.json();\n        this.inwardSampleLists = data.samplelist;\n        this.inwardDetail.descritiveType =  data.descriptive;\n        this.inwardDetail.descriptiveResult =  data.descriptive_result;\n        this.inwardDetail.documentRoot = data.document_root\n        this.inwardStandardNarration = data.standard_narration;\n        // console.log(data);\n       }\n    });\n  }\n  downloadPdfFile(){\n    alert(\"Open Download page\")\n    this.http.get<any>(environment.baseUrl +'pdfs/X123456.pdf', {responseType:\"json\"}).subscribe(response => this.downLoadFile(response, \"application/pdf\"));\n  }\n\n\n/**\n* Method is use to download file.\n* @param data - Array Buffer data\n* @param type - type of the document.\n*/\ndownLoadFile(data: any, type: string) {\n    let blob = new Blob([data], { type: type});\n    let url = window.URL.createObjectURL(blob);\n    let pwa = window.open(url);\n    if (!pwa || pwa.closed || typeof pwa.closed == 'undefined') {\n        alert( 'Please disable your Pop-up blocker and try again.');\n    }\n  }\n}\nexport interface SampleList{\n  sno : any;\n  sampleno : any;\n  count : any;\n  sampleid : any;\n  samplename : any;\n  nooftests : any;\n  description : any;\n  remark : any;\n  status: any;\n  color : any;\n}\nexport interface TestLists{\n  testname : any;\n}\n","export default \".loader {\\r\\n    height: 4px;\\r\\n    width: 100%;\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    background-color: #ddd;\\r\\n    margin-top: -6px;\\r\\n  }\\r\\n  .loader:before{\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n    left: -200px;\\r\\n    width: 200px;\\r\\n    height: 4px;\\r\\n    /*background-color: #4C9858;*/\\r\\n    -webkit-animation: loading 2s linear infinite;\\r\\n            animation: loading 2s linear infinite;\\r\\n  }\\r\\n  @-webkit-keyframes loading {\\r\\n      from {left: -200px; width: 50%; background-color: red;}\\r\\n      50% {width: 50%; background-color: blue;}\\r\\n      70% {width: 70%; background-color: yellow;}\\r\\n      80% { left: 50%; background-color:#ea1ea6;}\\r\\n      95% {left: 120%;background-color:  green;}\\r\\n      to {left: 100%;background-color: black;}\\r\\n  }\\r\\n  @keyframes loading {\\r\\n      from {left: -200px; width: 50%; background-color: red;}\\r\\n      50% {width: 50%; background-color: blue;}\\r\\n      70% {width: 70%; background-color: yellow;}\\r\\n      80% { left: 50%; background-color:#ea1ea6;}\\r\\n      95% {left: 120%;background-color:  green;}\\r\\n      to {left: 100%;background-color: black;}\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7SUFDWCw2QkFBNkI7SUFDN0IsNkNBQXFDO1lBQXJDLHFDQUFxQztFQUN2QztFQUVBO01BQ0ksTUFBTSxZQUFZLEVBQUUsVUFBVSxFQUFFLHFCQUFxQixDQUFDO01BQ3RELEtBQUssVUFBVSxFQUFFLHNCQUFzQixDQUFDO01BQ3hDLEtBQUssVUFBVSxFQUFFLHdCQUF3QixDQUFDO01BQzFDLE1BQU0sU0FBUyxFQUFFLHdCQUF3QixDQUFDO01BQzFDLEtBQUssVUFBVSxDQUFDLHdCQUF3QixDQUFDO01BQ3pDLElBQUksVUFBVSxDQUFDLHVCQUF1QixDQUFDO0VBQzNDO0VBUEE7TUFDSSxNQUFNLFlBQVksRUFBRSxVQUFVLEVBQUUscUJBQXFCLENBQUM7TUFDdEQsS0FBSyxVQUFVLEVBQUUsc0JBQXNCLENBQUM7TUFDeEMsS0FBSyxVQUFVLEVBQUUsd0JBQXdCLENBQUM7TUFDMUMsTUFBTSxTQUFTLEVBQUUsd0JBQXdCLENBQUM7TUFDMUMsS0FBSyxVQUFVLENBQUMsd0JBQXdCLENBQUM7TUFDekMsSUFBSSxVQUFVLENBQUMsdUJBQXVCLENBQUM7RUFDM0MiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvYWRlciB7XHJcbiAgICBoZWlnaHQ6IDRweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XHJcbiAgICBtYXJnaW4tdG9wOiAtNnB4O1xyXG4gIH1cclxuICAubG9hZGVyOmJlZm9yZXtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGxlZnQ6IC0yMDBweDtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogNHB4O1xyXG4gICAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjNEM5ODU4OyovXHJcbiAgICBhbmltYXRpb246IGxvYWRpbmcgMnMgbGluZWFyIGluZmluaXRlO1xyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIGxvYWRpbmcge1xyXG4gICAgICBmcm9tIHtsZWZ0OiAtMjAwcHg7IHdpZHRoOiA1MCU7IGJhY2tncm91bmQtY29sb3I6IHJlZDt9XHJcbiAgICAgIDUwJSB7d2lkdGg6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTt9XHJcbiAgICAgIDcwJSB7d2lkdGg6IDcwJTsgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O31cclxuICAgICAgODAlIHsgbGVmdDogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiNlYTFlYTY7fVxyXG4gICAgICA5NSUge2xlZnQ6IDEyMCU7YmFja2dyb3VuZC1jb2xvcjogIGdyZWVuO31cclxuICAgICAgdG8ge2xlZnQ6IDEwMCU7YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7fVxyXG4gIH0iXX0= */\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport { environment } from './../../../environments/environment';\nimport { AESEncryptDecryptServiceService } from '../../aesencrypt-decrypt-service.service';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'login.component.html',\n  styleUrls: ['login.component.css']\n})\nexport class LoginComponent {\n  loginFormData = {\n    email : ''\n    , password : ''\n  };\n  SessionCustomerId: number = 0;\n  spinnerFlag: boolean = false;\n  spinnerFlag1: boolean = false;\n  returnFlag: boolean = false;\n  returnMessage = '';\n  public reportParams = {\n    inwardno : ''\n    , accesscode : ''\n  }\n  public passwordReset = {\n    registeredMoileNo : ''\n    , otp : ''\n    , msg : ''\n    , status : false\n    , enteredOtp :  ''\n    , cloud_customer_id : ''\n  }\n  public resetPasswordFormData = {\n    newpassword : ''\n    , confirmpassword : ''\n  }\n  public resetPasswordLoader : boolean = false;\n  public enableSendOtpButton : boolean = false;\n  public enableVerifyOtpButton : boolean = false;\n  public enableNewPassword : boolean = false;\n  public enableSubmitButton : boolean = false;\n  // inwardno : 'F2100633'\n    // , accesscode : '49107'\n  constructor(\n    private router: Router\n    , private http: HttpClient\n    , private _AESEncryptDecryptService: AESEncryptDecryptServiceService\n    ) {\n      // this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n      // if (this.SessionCustomerId > 0) {\n        // this.router.navigateByUrl('dashboard');\n        localStorage.setItem('customerid', '0');\n        localStorage.setItem('customername', '');\n        localStorage.setItem('session_inwardno', '');\n        localStorage.setItem('session_accessno', '');\n        var mystring = \"login\";\n        var b64 = btoa(mystring);\n        var unicode = atob(b64);\n        console.log(b64);\n        console.log(unicode);\n\n      // }\n     }\n  doLogin(): void {\n    this.spinnerFlag = true;\n    let return_values: any;\n    if (this.loginFormData.email !== '' && this.loginFormData.password !== '') {\n      this.http.post<any>(environment.apiUrl + 'validate_wallet_login', { data: this.loginFormData }).subscribe({\n          next: data => {\n            return_values = data;\n            this.spinnerFlag = false;\n            this.returnFlag = return_values.status;\n            this.returnMessage = return_values.message;\n            if (return_values.status === true) {\n              localStorage.setItem('customerid', return_values.customerid);\n              localStorage.setItem('customername', return_values.mill_organization_name);\n              localStorage.setItem('lims_custid', return_values.lims_custid);\n              localStorage.setItem('customer_type', return_values.customer_type);\n\n              this.router.navigateByUrl('dashboard');\n            }\n          }\n      });\n    } else {\n      this.returnFlag = false;\n      this.returnMessage = 'Email / Password should not be Empty';\n      this.spinnerFlag = false;\n    }\n  }\n  goToRegisteration(): void {\n    this.router.navigateByUrl('register');\n  }\n  downloadPdf(): void {\n    // const documentDefinition = { content: 'This is an sample PDF printed with pdfMake' };\n    const documentDefinition = {\n      content: [\n        {\n          text: 'DOWNLOAD COUNT DETAILS',\n          bold: true,\n          fontSize: 20,\n          alignment: 'center',\n          margin: [0, 0, 0, 20]\n        },\n        {\n          columns: [\n            {\n              text: 'Payment Reference : SITRA-UKG-1234234',\n              style: 'header'\n            }\n          ],\n          styles: {\n            name: {\n              fontSize: 12,\n              bold: true\n            }\n          }\n        },\n        {\n          columns: [\n            {\n              text: 'Payment Date : 31.12.2020 04.25 PM',\n              style: 'header'\n            }\n          ],\n          styles: {\n            name: {\n              fontSize: 12,\n              bold: true\n            }\n          }\n        },\n        {\n          text: 'Count Details',\n          style: 'header'\n        }\n      ]};\n    pdfMake.createPdf(documentDefinition).open();\n  }\n  async gotoInwardViewPage(){\n    // let encryptedText = this._AESEncryptDecryptService.encrypt(this.reportParams.inwardno);\n    // console.log('Encript ' + encryptedText);\n    // let decryptedText = this._AESEncryptDecryptService.decrypt(encryptedText);\n    // console.log('Decript ' + decryptedText);\n    let errorCode = 0;\n    if(this.reportParams.inwardno ===''){\n      errorCode = 1;\n    }\n    if(this.reportParams.accesscode ===''){\n      errorCode = 1;\n    }\n    if(errorCode === 0){\n      //this.router.navigateByUrl('viewinward');\n      this.spinnerFlag1 = true;\n      let params = {\n        inwardno : this.reportParams.inwardno\n        , accesscode : this.reportParams.accesscode\n      }\n      await this.http.post<any>(environment.apiUrl + 'validate_inward_details', { data: params }).subscribe({\n        next: data => {\n          this.spinnerFlag1 = false;\n          if(data.status === true){\n            localStorage.setItem('session_inwardno', this.reportParams.inwardno);\n            localStorage.setItem('session_accessno', this.reportParams.accesscode);\n            this.router.navigateByUrl('viewinward');\n          }\n          //alert(data.status);\n          // if (return_values.status === true) {\n          //   localStorage.setItem('customerid', return_values.customerid);\n          //   localStorage.setItem('customername', return_values.mill_organization_name);\n          //   this.router.navigateByUrl('dashboard');\n          // }\n        }\n    });\n\n    }else{\n      alert(\"Inwardno / Access code should not ba Empty\");\n    }\n  }\n  async validateRegistreredMobileNoForResetPassword(){\n      if(this.passwordReset.registeredMoileNo !==''){\n        this.resetPasswordLoader = true;\n        let params = {\n          mobileno : this.passwordReset.registeredMoileNo\n        }\n          await this.http.post<any>(environment.apiUrl + 'validate_registered_mobileno', { data: params }).subscribe({\n            next: data => {\n              this.resetPasswordLoader = false;\n              if(data.status === true){\n                 this.passwordReset.otp = data.otp;\n                 this.passwordReset.cloud_customer_id = data.cloud_customer_id\n              }\n              this.passwordReset.msg = data.msg;\n              this.passwordReset.status = data.status;\n              //alert(data.status);\n              // if (return_values.status === true) {\n              //   localStorage.setItem('customerid', return_values.customerid);\n              //   localStorage.setItem('customername', return_values.mill_organization_name);\n              //   this.router.navigateByUrl('dashboard');\n              // }\n            }\n        });\n      }\n  }\n  clearResetPasswordParams(){\n    this.passwordReset.registeredMoileNo = '';\n    this.passwordReset.otp = '';\n    this.resetPasswordFormData.newpassword = '';\n    this.resetPasswordFormData.confirmpassword = '';\n    this.passwordReset.msg = '';\n    this.passwordReset.status = false;\n  }\n  enableSendOtpButtonFunction(){\n      if( Number(this.passwordReset.registeredMoileNo.length) === 10){\n        this.enableSendOtpButton = true;\n      }else{\n        this.enableSendOtpButton = false;\n      }\n  }\n  enableVerifyOtpButtonFunction(){\n    if( Number(this.passwordReset.enteredOtp.length) === 6){\n      this.enableVerifyOtpButton = true;\n    }else{\n      this.enableVerifyOtpButton = false;\n    }\n  }\n  validateOtpForResetPassword(){\n    if(Number(this.passwordReset.otp) === Number(this.passwordReset.enteredOtp)){\n      this.enableNewPassword = true;\n      this.enableSubmitButton = true;\n      this.passwordReset.msg = '';\n    }else{\n      this.passwordReset.msg = 'Entered OTP were wrong.';\n      //this.passwordReset.status = false;\n    }\n  }\n  async validateNewPassword(){\n    if(this.resetPasswordFormData.newpassword === this.resetPasswordFormData.confirmpassword && this.passwordReset.cloud_customer_id !==''){\n      this.resetPasswordLoader = true;\n      let params = {\n        cloud_customer_id : this.passwordReset.cloud_customer_id\n        , newpassword : this.resetPasswordFormData.newpassword\n      }\n        await this.http.post<any>(environment.apiUrl + 'reset_cloud_customer_loginpassword', { data: params }).subscribe({\n            next: data => {\n              this.resetPasswordLoader = false;\n              if(data.status === true){\n                alert(data.msg);\n                location.reload();\n              }else{\n                this.passwordReset.msg = data.msg;\n              }\n            }\n        });\n    }else{\n      this.passwordReset.msg = \"New password and Confirm password were not matched.\";\n    }\n  }\n  \n}\n","export default \".loader{\\r\\n    display: none !important;\\r\\n}\\r\\n.popup_loader {\\r\\n    height: 4px;\\r\\n    width: 100%;\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    background-color: #ddd;\\r\\n    margin-top: -6px;\\r\\n  }\\r\\n.popup_loader:before{\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    content: \\\"\\\";\\r\\n    left: -200px;\\r\\n    width: 200px;\\r\\n    height: 4px;\\r\\n    /*background-color: #4C9858;*/\\r\\n    -webkit-animation: loading 2s linear infinite;\\r\\n            animation: loading 2s linear infinite;\\r\\n  }\\r\\n@-webkit-keyframes loading {\\r\\n      from {left: -200px; width: 50%; background-color: red;}\\r\\n      50% {width: 50%; background-color: blue;}\\r\\n      70% {width: 70%; background-color: yellow;}\\r\\n      80% { left: 50%; background-color:#ea1ea6;}\\r\\n      95% {left: 120%;background-color:  green;}\\r\\n      to {left: 100%;background-color: black;}\\r\\n  }\\r\\n@keyframes loading {\\r\\n      from {left: -200px; width: 50%; background-color: red;}\\r\\n      50% {width: 50%; background-color: blue;}\\r\\n      70% {width: 70%; background-color: yellow;}\\r\\n      80% { left: 50%; background-color:#ea1ea6;}\\r\\n      95% {left: 120%;background-color:  green;}\\r\\n      to {left: 100%;background-color: black;}\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvbXlwYXltZW50cy9teXBheW1lbnRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7QUFDNUI7QUFDQTtJQUNJLFdBQVc7SUFDWCxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0VBQ2xCO0FBQ0E7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtJQUNaLFdBQVc7SUFDWCw2QkFBNkI7SUFDN0IsNkNBQXFDO1lBQXJDLHFDQUFxQztFQUN2QztBQUVBO01BQ0ksTUFBTSxZQUFZLEVBQUUsVUFBVSxFQUFFLHFCQUFxQixDQUFDO01BQ3RELEtBQUssVUFBVSxFQUFFLHNCQUFzQixDQUFDO01BQ3hDLEtBQUssVUFBVSxFQUFFLHdCQUF3QixDQUFDO01BQzFDLE1BQU0sU0FBUyxFQUFFLHdCQUF3QixDQUFDO01BQzFDLEtBQUssVUFBVSxDQUFDLHdCQUF3QixDQUFDO01BQ3pDLElBQUksVUFBVSxDQUFDLHVCQUF1QixDQUFDO0VBQzNDO0FBUEE7TUFDSSxNQUFNLFlBQVksRUFBRSxVQUFVLEVBQUUscUJBQXFCLENBQUM7TUFDdEQsS0FBSyxVQUFVLEVBQUUsc0JBQXNCLENBQUM7TUFDeEMsS0FBSyxVQUFVLEVBQUUsd0JBQXdCLENBQUM7TUFDMUMsTUFBTSxTQUFTLEVBQUUsd0JBQXdCLENBQUM7TUFDMUMsS0FBSyxVQUFVLENBQUMsd0JBQXdCLENBQUM7TUFDekMsSUFBSSxVQUFVLENBQUMsdUJBQXVCLENBQUM7RUFDM0MiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9teXBheW1lbnRzL215cGF5bWVudHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5sb2FkZXJ7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuLnBvcHVwX2xvYWRlciB7XHJcbiAgICBoZWlnaHQ6IDRweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XHJcbiAgICBtYXJnaW4tdG9wOiAtNnB4O1xyXG4gIH1cclxuICAucG9wdXBfbG9hZGVyOmJlZm9yZXtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGxlZnQ6IC0yMDBweDtcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogNHB4O1xyXG4gICAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjNEM5ODU4OyovXHJcbiAgICBhbmltYXRpb246IGxvYWRpbmcgMnMgbGluZWFyIGluZmluaXRlO1xyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIGxvYWRpbmcge1xyXG4gICAgICBmcm9tIHtsZWZ0OiAtMjAwcHg7IHdpZHRoOiA1MCU7IGJhY2tncm91bmQtY29sb3I6IHJlZDt9XHJcbiAgICAgIDUwJSB7d2lkdGg6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTt9XHJcbiAgICAgIDcwJSB7d2lkdGg6IDcwJTsgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O31cclxuICAgICAgODAlIHsgbGVmdDogNTAlOyBiYWNrZ3JvdW5kLWNvbG9yOiNlYTFlYTY7fVxyXG4gICAgICA5NSUge2xlZnQ6IDEyMCU7YmFja2dyb3VuZC1jb2xvcjogIGdyZWVuO31cclxuICAgICAgdG8ge2xlZnQ6IDEwMCU7YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7fVxyXG4gIH0iXX0= */\";","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgIf } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { environment } from './../../../environments/environment';\nimport { ServerdataService } from '../../serverdata.service';\nimport { AESEncryptDecryptServiceService } from '../../aesencrypt-decrypt-service.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { bankCharges } from '../package-test/package-test.component';\nimport { GenralPaymentService } from '../../_services/genral-payment.service';\nimport Swal from 'sweetalert2';\n\n\n\n\n@Component({\n  selector: 'app-mypayments',\n  templateUrl: './mypayments.component.html',\n  styleUrls: ['./mypayments.component.css']\n})\nexport class MypaymentsComponent implements OnInit {\n\n  @Input() isPublication: boolean = false;\n\n  public SessionCustomerId: number = 0;\n  public myPayments: MyPayments[];\n  public testRates: TestRates[];\n  public loaderFlag: boolean = false;\n  public tableHeading = 'Tests Rates';\n  public searchText: string = '';\n  public apiParams = {\n    searchedText: ''\n    , tablerowstart: 0\n    , tablerowlimit: 10\n    , paymenttype: 0\n  };\n  public pageCount: number = 1;\n  public pagenationNoofPage: number = 1;\n  public pagenationConfiguration = {\n    pageNos: []\n    , currentPageNo: Number(1)\n  };\n  public startPageNo: number = 1;\n  public endPageNo: number = 5;\n  public spinnerFlag: boolean = false;\n  public uploadfile: any = [];\n  fileToUpload: File | null = null;\n  imageSrc: string;\n  myForm = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    file: new FormControl('', [Validators.required]),\n    fileSource: new FormControl('', [Validators.required])\n  });\n  options = {\n    \"key\": \"rzp_test_Ge8t7vZfoHjNU5\", // Enter the Key ID generated from the Dashboard\n    \"amount\": \"1000\", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n    \"currency\": \"INR\",\n    \"name\": \"SITRA\",\n    \"description\": \"Test Transaction\",\n    \"image\": \"https://example.com/your_logo\",\n    \"order_id\": \"\", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n    \"handler\": function (response) {\n      alert(response.razorpay_payment_id);\n      alert(response.razorpay_order_id);\n      alert(response.razorpay_signature)\n    },\n    \"prefill\": {\n      \"name\": \"Parthasarathi\",\n      \"email\": \"itsupport@sitra.org.in\",\n      \"contact\": \"9487521330\"\n    },\n    \"notes\": {\n      \"address\": \"Razorpay Corporate Office\"\n    },\n    \"theme\": {\n      \"color\": \"#3399cc\"\n    }\n  };\n  options1 = {\n    \"key\": \"rzp_test_Ge8t7vZfoHjNU5\", // Enter the Key ID generated from the Dashboard\n    \"amount\": \"10\", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n    \"currency\": \"INR\",\n    \"name\": \"SITRA\",\n    \"description\": \"Test Transaction\",\n    \"image\": \"https://example.com/your_logo\",\n    \"order_id\": \"\", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n    \"callback_url\": \"http://localhost:82/cloudportalapi/index.php/pg_response_page\",\n    \"prefill\": {\n      \"name\": \"SITRA Customer\",\n      \"email\": \"itsupport@sitra.org.in\",\n      \"contact\": \"9965773730\"\n    },\n    \"notes\": {\n      \"address\": \"Razorpay Corporate Office\"\n    },\n    \"theme\": {\n      \"color\": \"#127B6E\"\n    }\n  };\n  public newPaymentFormData = {\n    amountToPay: 0.00\n    , paymentAgainst: ''\n    , paymentType: ''\n    , paymentComments: ''\n  }\n  public paymentTypeList: PaymentTypeList[] = [];\n  public popupLoaderState: boolean = false;\n  Amount: any;\n  modalRef: BsModalRef;\n  paymentMode: number;\n  bankCharges: bankCharges;\n  constructor(\n    private http: HttpClient\n    , private activatedRoute: ActivatedRoute\n    , private router: Router\n    , private service: ServerdataService\n    , private _AESEncryptDecryptService: AESEncryptDecryptServiceService\n    ,private modalService :BsModalService\n    ,private genralPaymentService:GenralPaymentService\n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n  }\n\n  ngOnInit(): void {\n    // const routeParams = this.activeRoute.snapshot.params;\n    if (this.SessionCustomerId <= 0) {\n      this.router.navigateByUrl('login');\n    }\n    this.activatedRoute.params.subscribe(routeParams => {\n      this.apiParams.paymenttype = Number(this.activatedRoute.snapshot.params.type);\n      // this.changeDisplayCount();\n      //alert(this.apiParams.paymenttype);\n      this.resetDataValues();\n\n      let encryptedText = this._AESEncryptDecryptService.encrypt(\"1\");\n      console.log('Encript ' + encryptedText);\n      let decryptedText = this._AESEncryptDecryptService.decrypt(encryptedText);\n      console.log('Decript ' + decryptedText);\n    });\n    this.loadPaymentTypeList();\n    this.getbankcharges();\n  }\n  //async handleFileInput(files: FileList){\n  async handleFileInput(event) {\n    //console.log(files);\n    const reader = new FileReader();\n\n    if (event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n\n        this.imageSrc = reader.result as string;\n\n        this.myForm.patchValue({\n          fileSource: reader.result\n        });\n\n      };\n\n    }\n    console.log(this.myForm.value);\n    // this.fileToUpload = files.item(0);   \n    // const formData: FormData = new FormData();\n    // formData.append('fileKey', this.fileToUpload, this.fileToUpload.name);\n    // console.log(this.fileToUpload);\n    // await this.http.post(environment.apiUrl + 'fileupload/', { data : this.fileToUpload }).subscribe({\n    //   next: data => {\n    //      console.log(data);\n    //   },\n    //   error: error => {\n    //     console.log(error);\n    //   }\n    // });  \n\n    // await this.http.post<any>(environment.apiUrl + 'fileupload/', { data : formData }).subscribe({\n    //   next: data => {\n\n    //   },\n    //   error: error => {\n    //     console.log(error);\n    //   }\n    // });  \n  }\n  async getData() {\n    // console.log(this.deptid);\n    this.apiParams.searchedText = this.searchText;\n    this.apiParams.tablerowstart = this.pagenationConfiguration.currentPageNo;\n    this.loaderFlag = true;\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'get_mypayments/' + this.SessionCustomerId, { data: this.apiParams }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        this.myPayments = data.data;\n        this.pageCount = Number(data.pagecount);\n        if (this.pageCount <= 5) {\n          // console.log('page no validatoin ' + this.pageCount);\n          this.endPageNo = this.pageCount;\n        } else {\n          // scenario - 1\n          // if the current page no in  between startpage and end page\n          // tslint:disable-next-line:max-line-length\n          if (this.pagenationConfiguration.currentPageNo >= this.startPageNo && this.pagenationConfiguration.currentPageNo <= this.endPageNo) {\n            // do something\n          } else {\n            console.log('Current page no ' + this.pagenationConfiguration.currentPageNo);\n            console.log('Start page no ' + this.startPageNo);\n            console.log('End page no ' + this.endPageNo);\n            // this.endPageNo = Number(5);\n            // tslint:disable-next-line:max-line-length\n            if (this.pagenationConfiguration.currentPageNo !== Number(1) && this.pagenationConfiguration.currentPageNo > this.startPageNo) {\n              this.startPageNo = this.startPageNo + Number(1);\n              this.endPageNo = this.endPageNo + Number(1);\n            } else if (this.pagenationConfiguration.currentPageNo < this.startPageNo) {\n              this.startPageNo = this.startPageNo - Number(1);\n              this.endPageNo = this.endPageNo - Number(1);\n            }\n          }\n        }\n        // console.log('data count' + data.datacount);\n        // console.log('page count' + data.pagecount);\n        // console.log('Last Page No' + this.endPageNo);\n        // console.log('--------------------DATA END-----------------');\n        this.pageNos();\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n    console.log('--------------------SERVICE END-----------------');\n    setTimeout(() => {\n      this.loaderFlag = false;\n    }, 500);\n  }\n  pageNos() {\n    console.log(' pageNos function : ' + this.endPageNo);\n    this.pagenationConfiguration.pageNos = [];\n    for (let j = this.startPageNo; j <= this.endPageNo; j++) {\n      this.pagenationConfiguration.pageNos[j] = j;\n    }\n    // console.log(this.pagenationConfiguration);\n  }\n  pagenationEvent(type: number, pageno: number) {\n    // console.log('page no clicked');\n    // console.log(type);\n    if (type === 1) { // page no click event\n      if (pageno === this.pagenationConfiguration.currentPageNo) {\n        // do nothing\n      } else {\n        this.pagenationConfiguration.currentPageNo = pageno;\n        this.getData();\n      }\n    } else if (type === 2) { // do the Next butting event\n      // console.log('next page btn event; End page no ' + this.endPageNo);\n      // console.log(' current page no ' + this.pagenationConfiguration.currentPageNo);\n      if (this.pagenationConfiguration.currentPageNo < Number(this.pageCount)) { // validate last page\n        // console.log('if');\n        // this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n        // this.getData();\n        if (this.pagenationConfiguration.currentPageNo > 5) {\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n          this.startPageNo = this.startPageNo + 1;\n          this.endPageNo = this.pagenationConfiguration.currentPageNo;\n          this.getData();\n        } else {\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n          this.getData();\n        }\n      }\n    } else if (type === 3) { // do the Previous butting event\n      if (this.pagenationConfiguration.currentPageNo !== 1) { // for valiate first page no\n        this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) - Number(1);\n        this.getData();\n      }\n    }\n  }\n  changeDisplayCount() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.getData();\n  }\n  resetDataValues() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.apiParams.searchedText = '';\n    this.apiParams.tablerowlimit = 10;\n    this.apiParams.tablerowstart = 0;\n    this.getData();\n  }\n  async downloadCountDetails(paymentid, tid) {\n    this.spinnerFlag = true;\n    console.log(tid);\n    // tslint:disable-next-line:max-line-length\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'generate_count_converstions/' + paymentid, { data: '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.documentsUrl + 'converstions/' + tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async downloadPaymentTranscation(paymentid, tid) {\n    this.spinnerFlag = true;\n    console.log(tid);\n    // tslint:disable-next-line:max-line-length\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'download_payment_transcation/' + paymentid, { data: '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.documentsUrl + 'payment_transcations/' + tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async downloadInvoice(paymentid, tid) {\n    this.spinnerFlag = true;\n    console.log(tid);\n    // tslint:disable-next-line:max-line-length\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'generate_invoice/' + paymentid, { data: '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.documentsUrl + 'invoices/' + tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async checkPaymentStatus() {\n    await this.http.post<any>('http://localhost:82/statusapi/index.php/', {}).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        console.log(data);\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  rzp1;\n  openPaymentGateway() {\n    alert('test');\n    this.rzp1 = new this.service.nativeWindow.Razorpay(this.options);\n    this.rzp1.open();\n  };\n  public payWithRazor() {\n    const options: any = {\n      key: 'rzp_test_Ge8t7vZfoHjNU5',\n      amount: 1000, // amount should be in paise format to display Rs 1255 without decimal point\n      currency: 'INR',\n      name: 'SITRA', // company name or product name\n      description: '',  // product description\n      image: './assets/img/brand/sitralogo.jpg', // company logo or product image\n      order_id: \"order_HREsW3zbYOxqsy\", // order_id created by you in backend\n      callback_url: \"http://localhost:82/cloudportalapi/index.php/api/pg_response_page\",\n      // callback_url: \"http://localhost:4200/#/mypayments/0/\",\n      modal: {\n        // We should prevent closing of the form when esc key is pressed.\n        escape: false,\n      },\n\n      prefill: {\n        name: 'azorpay',\n        email: 'itsupport@sitra.org.in',\n        contact: '++919965773730',\n        'card[number]': '4012001037141112',\n        'card[expiry]': '1222',\n        'card[cvv]': '123'\n      },\n      theme: {\n        color: \"#127B6E\"\n      }\n    };\n    options.handler = ((response: any, error: any) => {\n      options.response = response;\n      console.log(response);\n      //  console.log(options);\n      // call your backend api to verify payment signature & capture transaction\n    });\n\n\n    const rzp = new this.service.nativeWindow.Razorpay(options);\n    rzp.open();\n\n    rzp.on('payment.failed', function (response: any) {\n      alert(response.error.code);\n      alert(response.error.description);\n      alert(response.error.source);\n      alert(response.error.step);\n      alert(response.error.reason);\n      alert(response.error.metadata.order_id);\n      alert(response.error.metadata.payment_id);\n    });\n  }\n  async loadPaymentTypeList() {\n    await this.http.post<any>(environment.apiUrl + 'get_payment_type_list/', { data: '' }).subscribe({\n      next: data => {\n        this.paymentTypeList = data;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  doPaymentProcess(amount) {\n    this.popupLoaderState = true;\n    let orderParams = {\n      // amount: this.newPaymentFormData.amountToPay\n      amount: amount\n      , receipt: localStorage.getItem('customername')\n    }\n\n    let params = {\n      formdata: this.newPaymentFormData\n      , customerid: this.SessionCustomerId\n      , orderdetails: orderParams\n    }\n    this.http.post<any>(environment.apiUrl + 'insert_general_payment_transcations/', { data: params }).subscribe({\n      next: data => {\n        this.popupLoaderState = false;\n        if (data.temp_payment_reference != '') {\n          window.location.href = environment.razorpaymentUrl + 'pay.php?order_id=' + data.payload.order_id.toString();\n        }\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n\n  paymentOptionOpen(template:TemplateRef<any>,netamount,paymentAgainst,paymentType){\n    if(netamount > 0 &&paymentAgainst!=''&&paymentType!=''){\n    this.Amount = netamount;\n    // this.modalService.hide(primaryModal);\n    // this.quatatioNO = quotation;\n    this.modalRef = this.modalService.show(template,{ class: 'modal-success' });\n    }else{\n      Swal.fire(\"WARNING\", \"Please enter valid Amount to Pay and Payment Against and Payment Type\",\"warning\")\n    }\n  }\n\n  paymentTypeSelection(amountToPay){\n    // console.log(this.paymentMode);\n    if(this.paymentMode == 1){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.credit_card)/100;\n    }else if(this.paymentMode == 2){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_rupay)/100;\n    }else if(this.paymentMode == 3){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_lt_2000)/100;\n    }else if(this.paymentMode == 4){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_gt_2000)/100;\n    }else if(this.paymentMode == 5){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.upi)/100;\n    }else if(this.paymentMode == 6){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.nb)/100;\n    }\n    this.doPaymentProcess(String(amountToPay));\n  }\n\n  getbankcharges(){\n    this.genralPaymentService.getBankCharges().subscribe((res)=>{\n      this.bankCharges = res[0];\n    })\n  }\n\n}\nexport interface TestRates {\n  labname: string;\n  testname: string;\n  alias: any;\n  standard: any;\n  samplesize: any;\n  memrate: any;\n  nonmemrate: any;\n}\nexport interface MyPayments {\n  id: any;\n  transactiondate: any;\n  orderid: any;\n  bankrefno: any;\n  amount: any;\n  status: any;\n  paymentmode: any;\n  tid: any;\n  order_type: any;\n}\nexport interface PaymentTypeList {\n  id: Number;\n  type: String;\n}","export default \"/* input {\\r\\n    text-align: center;  \\r\\n    border: 1px solid #6C757D;\\r\\n  }  */\\r\\n  \\r\\n  input[type=\\\"number\\\"] { text-align: center;  \\r\\n    border: 1px solid #6C757D;\\r\\n    -webkit-appearance: textfield !important;\\r\\n    -moz-appearance: textfield !important;\\r\\n    appearance: textfield !important;\\r\\n    }\\r\\n  \\r\\n  input[type=number]::-webkit-inner-spin-button,\\r\\n  input[type=number]::-webkit-outer-spin-button {\\r\\n      -webkit-appearance: none;\\r\\n    }\\r\\n  \\r\\n  .wrapper {\\r\\n    border: 2px #dcd3d3 solid;\\r\\n    width: 40vw;\\r\\n    height: 50px;\\r\\n    padding: 10px;\\r\\n    display: flex;\\r\\n    border-radius: 15px;\\r\\n  }\\r\\n  \\r\\n  .plusminus {\\r\\n    height: 100%;\\r\\n    width: 30%;\\r\\n    background: white;\\r\\n    border: none;\\r\\n    font-size: 40px;\\r\\n    color: #5f5fce;\\r\\n  }\\r\\n  \\r\\n  .num {\\r\\n    height: 100%;\\r\\n    width: 39%;\\r\\n    border: none;\\r\\n    font-size: 30px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvcGFja2FnZS10ZXN0L3BhY2thZ2UtdGVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7TUFHTTs7RUFFSix1QkFBdUIsa0JBQWtCO0lBQ3ZDLHlCQUF5QjtJQUN6Qix3Q0FBd0M7SUFDeEMscUNBQXFDO0lBQ3JDLGdDQUFnQztJQUNoQzs7RUFFRjs7TUFFSSx3QkFBd0I7SUFDMUI7O0VBRUY7SUFDRSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFlBQVk7SUFDWixVQUFVO0lBQ1YsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixlQUFlO0lBQ2YsY0FBYztFQUNoQjs7RUFFQTtJQUNFLFlBQVk7SUFDWixVQUFVO0lBQ1YsWUFBWTtJQUNaLGVBQWU7RUFDakIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9wYWNrYWdlLXRlc3QvcGFja2FnZS10ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBpbnB1dCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICBcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM2Qzc1N0Q7XHJcbiAgfSAgKi9cclxuICBcclxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdIHsgdGV4dC1hbGlnbjogY2VudGVyOyAgXHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNkM3NTdEO1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQgIWltcG9ydGFudDtcclxuICAgIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkICFpbXBvcnRhbnQ7XHJcbiAgICBhcHBlYXJhbmNlOiB0ZXh0ZmllbGQgIWltcG9ydGFudDtcclxuICAgIH1cclxuICBcclxuICBpbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcbiAgaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gICAgfVxyXG4gIFxyXG4gIC53cmFwcGVyIHtcclxuICAgIGJvcmRlcjogMnB4ICNkY2QzZDMgc29saWQ7XHJcbiAgICB3aWR0aDogNDB2dztcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgLnBsdXNtaW51cyB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDQwcHg7XHJcbiAgICBjb2xvcjogIzVmNWZjZTtcclxuICB9XHJcbiAgXHJcbiAgLm51bSB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMzklO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAzMHB4O1xyXG4gIH0iXX0= */\";","import { DatePipe } from '@angular/common';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../environments/environment';\nimport { GenralPaymentService } from '../../_services/genral-payment.service';\nimport { genratePackagetest, insertpackage, packageDetailsParams, packageListParams, PackageTestService } from '../../_services/package-test.service';\nimport { ProformaService } from '../../_services/proforma.service';\nimport { SMSdata, SmsService } from '../../_services/sms.service';\n\n@Component({\n  selector: 'app-package-test',\n  templateUrl: './package-test.component.html',\n  styleUrls: ['./package-test.component.css']\n})\nexport class PackageTestComponent implements OnInit {\n  packageList: any=[];\n  customerId: number;\n  searchText: string;\n  modalRef: BsModalRef;\n  packageMaster: any;\n  packageDetailsParams: packageDetailsParams;\n  packageDetails: any;\n  samples: any;\n  sampleid:number;\n\n  requestParams: genratePackagetest;\n  packid: string = \"\";\n  packageRate:string=\"\";\n  // noofsamples: string\n  insertPackagsparams: {\n    custid: number,\n    PackId: number,\n    noofsamples: number,\n    SampDesc: string,\n    sampleid:number\n  };\n  newPaymentFormData: { amountToPay: string; paymentAgainst: string; paymentType: string; paymentComments: string; };\n\n  sampleDescList = [];\n  UpdateSampleDesc = [{\n    sampleno: \"\",\n    sampleid: \"\",\n    description: \"\",\n    countcode: \"\",\n    remarks: \"\"\n  }];\n  sampleTypeData: any;\n  sampleData: any;\n  sampleDescCreate: sampledesc[] = [{ sampledesc: '' }];\n  PaginatedList: any[];\n  Amount: any;\n  paymentMode: any;\n  bankCharges: bankCharges;\n  requestNo: any;\n  constructor(private packageservice: PackageTestService\n    , private datepipe: DatePipe\n    , private modalService: BsModalService\n    , private genralPaymentService: GenralPaymentService\n    , private proformaService: ProformaService\n    ,private smsService:SmsService) {\n    this.customerId = Number(localStorage.getItem('customerid'));\n  }\n  listparams: packageListParams;\n  noOfSamples: number = 1;\n  itemperpage: number = 10;\n  packageTestitemperpage: string = \"10\";\n\n  ngOnInit(): void {\n    this.getPackageList();\n    this.getPackageMaster();\n    this.getbankcharges();\n  }\n\n  getPackageList() {\n    this.listparams = {\n      custid: this.customerId,\n      searchedtext: this.searchText,\n      tablerowlimit: '',\n      tablerowstart: ''\n    }\n    this.packageservice.getList(this.listparams).subscribe((res) => {\n      this.packageList = res;\n\n      this.PaginatedList = this.packageList.slice(0, 10);\n\n    })\n  }\n\n  getPrice(i:any){\n    this.packageMaster.filter((e,j)=>{\n      if (e.PackId==i) {\n        this.packageRate=e.rate;\n      }\n    })\n    \n   \n  }\n  deletepackage(id:any){\n    let jdata ={\"reqid\":id}\n    this.packageservice.deletepackage(jdata).subscribe((res)=>{\n      if (res) {\n        this.getPackageList()\n      }\n    })\n  }\n\n  getPackageMaster() {\n    this.packageservice.getpackageMaster().subscribe((res) => {\n      console.log(res['data'])\n      this.packageMaster = res['data'];\n      this.samples = res['sample'];\n    })\n  }\n\n  AddNewPackages(AddPackages: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(AddPackages, { class: 'modal-lg modal-success' });\n  }\n\n  getPackageDetails(packageDetails: TemplateRef<any>, packageid: number) {\n    this.packageDetailsParams = {\n      PackId: packageid\n    }\n    this.packageservice.getPackageDetails(this.packageDetailsParams).subscribe((result) => {\n      this.packageDetails = result;\n      this.modalRef = this.modalService.show(packageDetails, { class: 'modal-xl modal-success' });\n\n    })\n    // this.modalRef = this.modalService.show(packageDetails, { class: 'modal-lg modal-success' });\n\n  }\n\n  genrateRequest(rNo) {\n    this.requestParams = {\n      RNo: rNo,\n      custid: Number(localStorage.getItem('lims_custid')),\n    };\n    this.packageservice.genratePackageTestRequest(this.requestParams).subscribe((res) => {\n      let result = res;\n      if (result == false) {\n        Swal.fire(\"ERROR\", \"Something went wrong\", 'error');\n        return\n      }\n      // let smsparams :SMSdata = {\n      //   ApiKey:\"sistmsra\",\n      //   ClientId:\"sitra\",\n      //   Is_Flash:false,\n      //   Is_Unicode:false,\n      //   Message:'Payment of Rs. 10000 received towards TESTVAR dt TESTVAR - SITRA.',\n      //   MobileNumbers:'919751931707',\n      //   SenderId:\"ESITRA\",        \n      // };\n\n      // this.smsService.sendSMS(smsparams).subscribe((res)=>{\n      //   console.log(res);\n      // })\n      this.getPackageList();\n      Swal.fire(\"SUCCESS\", \"Successfully genrated test Request\", 'success');\n      \n    })\n  }\n\n  insertPackage() {\n    let sampledescription = \"\";\n    if (this.packid==\"\") {\n      alert(\"Select a package\")\n    }else if(this.sampleid==0||this.sampleid==null){\n      alert(\"Please Select Sample\")\n    }else if(this.sampleDescCreate[0].sampledesc==''){\n      alert(\"Please Enter Sample Description\")\n    }else{\n      this.sampleDescCreate.map(ele => { sampledescription = ele.sampledesc + ',' + sampledescription })\n      this.insertPackagsparams = {\n        PackId: Number(this.packid),\n        custid: this.customerId,\n        sampleid:this.sampleid,\n        noofsamples: Number(this.noOfSamples),\n        SampDesc: sampledescription\n      }\n      // console.log(this.insertPackagsparams)\n      this.packageservice.insertpackage(this.insertPackagsparams).subscribe(res => {\n        let result = res.status;\n        if (result) {\n          Swal.fire(\"SUCCESS\", \"Package Inserted Successfully \", 'success');\n          this.modalRef.hide();\n          this.getPackageList();\n        } else {\n          Swal.fire(\"ERROR\", \"Something went wrong\", 'error');\n        }\n        // console.log(result);\n      })\n    }\n    \n  }\n  packageTestPayNow(totalAmount: string,request) {\n    if(Number(totalAmount) == 0){\n      Swal.fire('WARNING','place slecet value greater than Zero','warning');\n      return ;\n    }\n\n    this.newPaymentFormData = {\n      amountToPay: totalAmount,\n      paymentAgainst: \"2\",\n      paymentType: \"25\",\n      paymentComments: request\n    }\n\n    // this.popupLoaderState = true;\n    let orderParams = {\n      amount: this.newPaymentFormData.amountToPay\n      , receipt: localStorage.getItem('customername')\n    }\n\n    let params = {\n      data: {\n        formdata: this.newPaymentFormData\n        , customerid: this.customerId\n        , orderdetails: orderParams\n      }\n    }\n    this.genralPaymentService.payment(params).subscribe(\n      data => {\n        if (data.temp_payment_reference != '') {\n          window.location.href = environment.razorpaymentUrl + 'pay.php?order_id=' + data.payload.order_id.toString();\n        }\n      },\n      error => {\n        console.log(error);\n      });\n\n  }\n\n  sampleChange(event) {\n    if (Number(event) > 11) {\n      Swal.fire(\"ERROR\", \"Something went wrong\", 'error');\n      // event.preven\n      return false;\n    }\n    this.sampleDescList = [];\n    for (let index = 0; index < event; index++) {\n      this.sampleDescList.push({ itemno: index + 1, sampledesc: \"\" })\n    }\n\n    console.log(this.sampleDescList);\n  }\n\n  getSampleData(SampleDescription: TemplateRef<any>, quotationNo, labId) {\n    let sampleRequest = {\n      RNo: quotationNo\n    };\n\n    let sampleType = {\n      labid: labId\n    };\n    this.proformaService.getSampleTypeData(JSON.stringify(sampleType)).subscribe((res) => {\n      this.sampleTypeData = res;\n    });\n\n    this.proformaService.getsamplerequest(JSON.stringify(sampleRequest)).subscribe((res) => {\n      this.sampleData = res;\n      this.UpdateSampleDesc = this.sampleData.map(value => {\n        return {\n          sampleno: value.sampleno,\n          sampleid: \"\",\n          description: \"\",\n          countcode: \"\",\n          remarks: \"\"\n        }\n      });\n      this.modalRef = this.modalService.show(SampleDescription, { class: 'modal-xl modal-success' });\n    });\n  }\n\n  Updatesampledescription() {\n    console.log(this.UpdateSampleDesc)\n    //   let postvalue = {}\n    this.proformaService.updateSampleDesc(this.UpdateSampleDesc).subscribe((res) => {\n      let result = res;\n      if (result.status != null || result.status == true) {\n        Swal.fire(\"Success\", \"Sample description updated sucessfully\", \"success\");\n        this.modalRef.hide();\n        return;\n      }\n      Swal.fire(\"ERROR\", \"something went wrong\", \"error\");\n    })\n  }\n\n  decreseSample() {\n    if (this.noOfSamples > 1) {\n      this.noOfSamples = this.noOfSamples - 1;\n      this.sampleDescCreate.pop()\n      \n    }\n    \n  }\n\n  increseSamples() {\n  \n    if (this.noOfSamples <=2) {\n      this.noOfSamples = this.noOfSamples + 1;\n      this.sampleDescCreate.push({ sampledesc: '' });\n    }\n    \n  }\n  \n  PackageTestPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    // this.returnedArray = this.contentArray.slice(startItem, endItem);\n    this.PaginatedList = this.packageList.slice(startItem, endItem);\n  }\n\n  itemChange() {\n    this.itemperpage = Number(this.packageTestitemperpage);\n    this.PackageTestPageChanged({itemsPerPage:this.itemperpage,page:1})\n    // this.PackageTestPageChanged();\n  }\n  \n  getbankcharges(){\n    this.genralPaymentService.getBankCharges().subscribe((res)=>{\n      this.bankCharges = res[0];\n    })\n  }\n\n  openPaymentOption(template:TemplateRef<any>,netamount,request){\n    this.Amount = netamount;\n    this.requestNo = request;\n    // this.genralPaymentService.getBankCharges().subscribe((res)=>{\n    //   this.bankCharges = res[0];\n    // })\n    this.modalRef = this.modalService.show(template,{ class: 'modal-success' });\n  }\n\n  paymentTypeSelection(amountToPay,request){\n    // console.log(this.paymentMode);\n    if(this.paymentMode == 1){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.credit_card)/100;\n    }else if(this.paymentMode == 2){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_rupay)/100;\n    }else if(this.paymentMode == 3){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_lt_2000)/100;\n    }else if(this.paymentMode == 4){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_gt_2000)/100;\n    }else if(this.paymentMode == 5){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.upi)/100;\n    }else if(this.paymentMode == 6){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.nb)/100;\n    }\n    this.packageTestPayNow(String(amountToPay),request);\n  }\n}\n\nexport interface sampledesc {\n  sampledesc: string\n}\nexport interface bankCharges{\n  Id: string,\n  credit_card: string,\n  debit_gt_2000: string,\n  debit_lt_2000: string,\n  debit_rupay: string,\n  nb: string,\n  upi: string\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ParentcompComponent } from './parentcomp.component';\r\n\r\n@Component({\r\n  selector: 'app-parentchild',\r\n  templateUrl: './child1.component.html',\r\n  styleUrls: ['./parentcomp.component.css']\r\n})\r\n\r\nexport class Child1Component implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhcmVudGNvbXAvcGFyZW50Y29tcC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parentcomp',\n  templateUrl: './parentcomp.component.html',\n  styleUrls: ['./parentcomp.component.css']\n})\nexport class ParentcompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BheW1lbnRyZXNwb25zZS9wYXltZW50cmVzcG9uc2UuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ServerdataService } from '../../serverdata.service';\nimport { Observable } from 'rxjs';\nimport { environment } from './../../../environments/environment';\nimport { SMSdata, SmsService } from '../../_services/sms.service';\nimport { EmailDate, EmailService } from '../../_services/email.service';\n\n@Component({\n  selector: 'app-paymentresponse',\n  templateUrl: './paymentresponse.component.html',\n  styleUrls: ['./paymentresponse.component.css']\n})\nexport class PaymentresponseComponent implements OnInit {\n  paymentresponseId: any = '';\n  paymentResponseData = {\n    id: ''\n    , order_id: ''\n    , amount : ''\n    , order_type: 0\n    , tid: ''\n    , res_bank_ref_no: ''\n    , res_order_status: ''\n    , res_mer_amount: ''\n    , res_payment_mode: ''\n    , created_date: ''\n    , modified_date: ''\n    ,contact_person_mobileno:''\n  };\n  public SessionCustomerId: number = 0;\n  public spinnerFlag: boolean = false;\n  banners: any[];\n  constructor(\n    private http: HttpClient\n    , private activatedRoute: ActivatedRoute\n    , private router: Router\n    , private service: ServerdataService,\n    private smsService: SmsService\n    ,private emailService: EmailService\n    ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(routeParams => {\n      this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n      this.paymentresponseId = String(this.activatedRoute.snapshot.params.responseid);\n      //console.log(this.paymentresponseId);\n      // this.changeDisplayCount();\n      this.getPaymentResponseData();\n    });\n  }\n  async getPaymentResponseData() {\n    this.spinnerFlag = true;\n    // this.SessionCustomerId = 0;\n    //console.log(this.SessionCustomerId);\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'get_payment_reponsedata/' + this.paymentresponseId + '/' + this.SessionCustomerId, { data : '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        console.log(data);\n        this.paymentResponseData = data;\n        this.paymentResponseData.order_type = Number(data.order_type);\n        if(this.paymentResponseData.res_order_status == \"Success\"){\n          let smsparams :SMSdata = {\n            \"SenderId\": \"ESITRA\",\n            \"Is_Unicode\": false,\n            \"Is_Flash\": false,\n            \"Message\": \"Payment of Rs. \"+this.paymentResponseData.amount+\" received towards \"+this.paymentResponseData.order_id+\" dt \"+this.paymentResponseData.order_type+\" - SITRA.\",\n            \"MobileNumbers\": \"91\"+this.paymentResponseData.contact_person_mobileno,\n            \"ApiKey\": \"sistmsra\",\n            \"ClientId\": \"sitra\"\n        }\n    \n          this.smsService.sendSMS(smsparams).subscribe((res)=>{\n            console.log('SMS response',res);\n          });\n          let email:EmailDate = {\n            toemail:\"kavilgovindan@gmail.com\",\n            message:\"Payment of Rs. \"+this.paymentResponseData.amount+\" received towards \"+this.paymentResponseData.order_id+\" dt \"+this.paymentResponseData.order_type+\" - SITRA.\",\n            subject:\"SITRA -Payment Confirmation\"\n          };\n          this.emailService.sendEmail(email).subscribe( res =>{\n            console.log('Email response',res);\n          });\n        }\n        //console.log(this.paymentResponseData);\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  downloadReceipt() {\n    alert('Receipt Downloaded');\n  }\n  gotoCountSearch() {\n    this.router.navigateByUrl('ukg');\n  }\n  async downloadCountDetails() {\n    this.spinnerFlag = true;\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'generate_count_converstions/' + this.paymentResponseData.id, { data : '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          window.open(environment.documentsUrl + 'converstions/' + this.paymentResponseData.tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async downloadPaymentReceiptDetails() {\n    this.spinnerFlag = true;\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'download_payment_transcation/' + this.paymentResponseData.id, { data : '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.documentsUrl + 'payment_transcations/' + this.paymentResponseData.tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  public SessionCustomerId: number = 0;\n  public spinnerFlag: boolean = false;\n  public loggedUserData = {\n    regtype: ''\n    , mill_organization_name: ''\n    , contact_person_name: ''\n    , contact_person_mobileno: ''\n    , alternative_contactnos: ''\n    , email: ''\n    , address1: ''\n    , address2: ''\n    , city: ''\n    , state: ''\n    , pincode: ''\n    , gstregtype: ''\n    , gstno: ''\n    , password: ''\n  };\n  public stateNameLists: any = [];\n  public passwordchange = {\n    currentpassword: ''\n    , newpassword: ''\n    , confirmpassword: ''\n  };\n  public passwordchangeMsg = '';\n  constructor(\n    private router: Router\n    , private http: HttpClient\n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n  }\n\n  ngOnInit(): void {\n    if (this.SessionCustomerId <= 0) {\n      this.router.navigateByUrl('login');\n    }\n    this.loadCustomerProfileData();\n    this.loadStateDropdownValues();\n  }\n  loadCustomerProfileData() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>(environment.apiUrl + 'get_logged_userdetails/' + this.SessionCustomerId + '/1', { data: '' }).subscribe({\n      next: data => {\n        this.loggedUserData = data;\n        console.log(this.loggedUserData);\n      },\n      error: error => {\n        console.error('There was an error!', error);\n      }\n    });\n  }\n  loadStateDropdownValues() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>(environment.apiUrl + 'get_statename_list/', { data: '' }).subscribe({\n        next: data => {\n          this.stateNameLists = data;\n          console.log(this.stateNameLists);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  doPasswordUpdate() {\n    this.spinnerFlag = true;\n    if (this.passwordchange.newpassword !== '' && this.passwordchange.newpassword !== '') {\n      if (String(this.passwordchange.newpassword) === String(this.passwordchange.confirmpassword)) {\n        this.passwordchangeMsg = '';\n        if (String(this.loggedUserData.password) === String(this.passwordchange.currentpassword)) {\n          this.passwordchangeMsg = '';\n          // tslint:disable-next-line:max-line-length\n            this.http.post<any>(environment.apiUrl + 'password_update/' + this.SessionCustomerId, { data: this.passwordchange }).subscribe({\n              next: data => {\n                console.log(data);\n                this.passwordchangeMsg = data.msg;\n                if (data.status === true) {\n                    setTimeout(() => {\n                      localStorage.setItem('customerid', '0');\n                      this.router.navigateByUrl('login');\n                      this.spinnerFlag = false;\n                    }, 5000);\n                }\n              },\n              error: error => {\n                console.error('There was an error!', error);\n              }\n          });\n        } else {\n          this.passwordchangeMsg = 'Current password is Incorrect';\n          this.spinnerFlag = false;\n        }\n      } else {\n        this.passwordchangeMsg = 'New password and Confirm password is mismatch.';\n        this.spinnerFlag = false;\n      }\n    } else {\n      this.passwordchangeMsg = 'New password / Confirm password should not be Empty';\n      this.spinnerFlag = false;\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb2Zvcm1hL3Byb2Zvcm1hLWxpc3QvcHJvZm9ybWEtbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","import { DatePipe } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { PageChangedEvent } from 'ngx-bootstrap/pagination';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../environments/environment';\nimport { GenralPaymentService } from '../../../_services/genral-payment.service';\nimport { ProformaService } from '../../../_services/proforma.service';\nimport { bankCharges } from '../../package-test/package-test.component';\n\n@Component({\n  selector: 'app-proforma-list',\n  templateUrl: './proforma-list.component.html',\n  styleUrls: ['./proforma-list.component.css']\n})\nexport class ProformaListComponent implements OnInit {\n\n  ProformaList = [];\n  ProformaTestList=[];\n  ProformaTestName=[];\n\n  searchedtext: any;\n  listParam = {\n    \"custid\": 0,\n    \"searchedtext\": \"\",\n    \"tablerowstart\": \"1\",\n    \"tablerowlimit\": \"10\"\n  }\n  PaginatedList: any[];\n  proformaitemperpage: string = \"10\";\n  itemperpage: number = 10;\n  customerId: number;\n  proformaSearchText: any;\n\n  public newPaymentFormData = {\n    amountToPay: \"\"\n    , paymentAgainst: ''\n    , paymentType: ''\n    , paymentComments: ''\n  }\n  modalRef: BsModalRef;\n  sampleData: any;\n  sampleTypeData: any;\n\n  UpdateSampleDesc = [{\n    sampleno: \"\",\n    sampleid: \"\",\n    description: \"\",\n    countcode: \"\",\n    remarks: \"\"\n  }];\n\n  paymentMode:any = 2;\n  Amount: any;\n  bankCharges: bankCharges;\n  quatatioNO: any;\n\n  constructor(private proformaService: ProformaService, \n    private datapipe: DatePipe, private modalService: BsModalService, \n    private http: HttpClient, private genralPaymentService:GenralPaymentService) {\n    this.customerId = Number(localStorage.getItem('customerid'));\n  }\n\n  ngOnInit(): void {\n\n    this.getProformaList();\n    this.getbankcharges();\n\n  }\n  getProformaList() {\n    this.listParam = {\n      custid: this.customerId,\n      searchedtext: this.proformaSearchText,\n      tablerowlimit: \"\",\n      tablerowstart: ''\n    }\n    this.proformaService.getProformaList(JSON.stringify(this.listParam)).subscribe((res) => {\n     \n      if (res.data.length !== 0) {\n        this.ProformaList = res.data.data;\n        this.ProformaTestList = res.data.testname;\n        this.PaginatedList = this.ProformaList.slice(0, 10);\n        //this.datapipe.transform(this.ProformaList.date, \"dd/mm/yyyy\")\n      }\n    }, err => {\n      console.log(err);\n    })\n  }\n  itemChange() {\n    this.itemperpage = Number(this.proformaitemperpage);\n  }\n\n  ProformaPageChanged(event: PageChangedEvent): void {\n    const startItem = (event.page - 1) * event.itemsPerPage;\n    const endItem = event.page * event.itemsPerPage;\n    // this.returnedArray = this.contentArray.slice(startItem, endItem);\n    this.PaginatedList = this.ProformaList.slice(startItem, endItem);\n  }\n\n  genrateRequest(quotNo) {\n    this.proformaService.genrateRequest(JSON.stringify({ quotationno: quotNo })).subscribe((res) => {\n      var result = res;\n      if (result.status == true) {\n        this.getProformaList();\n        Swal.fire(\"SUCCESS\", \"Successfully genreted request from quotation\", \"success\");\n      } else {\n        Swal.fire(\"ERROR\", \"something went wrong while genrete request from quotation\", \"error\");\n      }\n    })\n  }\n\n  proformaPayNow(totalAmount:string,quotation) {\n    \n    this.newPaymentFormData = {\n      amountToPay: totalAmount,\n      paymentAgainst: \"2\",\n      paymentType: \"25\",\n      paymentComments: quotation\n    }\n\n    // this.popupLoaderState = true;\n    let orderParams = {\n      amount:this.newPaymentFormData.amountToPay\n      , receipt: localStorage.getItem('customername')\n    }\n\n    let params = {\n      formdata : this.newPaymentFormData\n      , customerid : this.customerId\n      , orderdetails : orderParams\n    }\n    this.http.post<any>(environment.apiUrl + 'insert_general_payment_transcations/' , { data : params }).subscribe({\n      next: data => {\n        // this.popupLoaderState = false;\n        if(data.temp_payment_reference !=''){\n            window.location.href = environment.razorpaymentUrl + 'pay.php?order_id=' + data.payload.order_id.toString();\n        }\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n\n  }\n\n  getSampleData(SampleDescription: TemplateRef<any>, quotationNo, labId) {\n    let sampleRequest = {\n      quotationno: quotationNo\n    };\n\n    let sampleType = {\n      labid: labId\n    };\n    this.proformaService.getSampleTypeData(JSON.stringify(sampleType)).subscribe((res) => {\n      this.sampleTypeData = res;\n    });\n\n    this.proformaService.getsamplerequest(JSON.stringify(sampleRequest)).subscribe((res) => {\n      this.sampleData = res;\n      this.UpdateSampleDesc = this.sampleData.map(value => {\n        return {\n          sampleno: value.sampleno,\n          sampleid: value.sampleid,\n          description: value.description,\n          countcode: value.countcode,\n          remarks: value.remarks\n        }\n      });\n      this.modalRef = this.modalService.show(SampleDescription, { class: 'modal-xl modal-success' });\n    });\n  }\n\n  Updatesampledescription() {\n    console.log(this.UpdateSampleDesc)\n  //   let postvalue = {}\n    this.proformaService.updateSampleDesc(this.UpdateSampleDesc).subscribe((res) => {\n      let result = res;\n      if (result.status != null || result.status == true) {\n        Swal.fire(\"Success\", \"Sample description updated sucessfully\", \"success\");\n        this.modalRef.hide();\n        return;\n      }\n      Swal.fire(\"ERROR\", \"something went wrong\", \"error\");\n    })\n  }\n\n  paymentOptionOpen(template:TemplateRef<any>,netamount,quotation){\n    this.Amount = netamount;\n    this.quatatioNO = quotation;\n    this.modalRef = this.modalService.show(template,{ class: 'modal-success' });\n  }\n\n  testnameOpen(template:TemplateRef<any>, quotationno ){\n    this.ProformaTestName = [];\n    this.ProformaTestList.filter((e)=>{\n      if (e.quotationno=== quotationno) {\n       this.ProformaTestName.push(e)\n      }\n    })\n    this.modalRef = this.modalService.show(template,{ class: 'modal-success' });\n  }\n\n  paymentTypeSelection(amountToPay,quotation){\n    // console.log(this.paymentMode);\n    if(this.paymentMode == 1){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.credit_card)/100;\n    }else if(this.paymentMode == 2){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_rupay)/100;\n    }else if(this.paymentMode == 3){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_lt_2000)/100;\n    }else if(this.paymentMode == 4){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.debit_gt_2000)/100;\n    }else if(this.paymentMode == 5){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.upi)/100;\n    }else if(this.paymentMode == 6){\n      amountToPay = Number(amountToPay)+Number(amountToPay)*Number(this.bankCharges.nb)/100;\n    }\n    this.proformaPayNow(String(amountToPay),quotation);\n  }\n\n  getbankcharges(){\n    this.genralPaymentService.getBankCharges().subscribe((res)=>{\n      this.bankCharges = res[0];\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3B1YmxpY2F0aW9ucy9wdWJsaWNhdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-publications',\n  templateUrl: './publications.component.html',\n  styleUrls: ['./publications.component.css']\n})\nexport class PublicationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgIf } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { environment } from './../../../environments/environment';\r\nimport Swal from 'sweetalert2';\r\nimport { Checkoutparams, publicationSelected } from './publicationslist.component';\r\nimport { CustomerService, customerTypeParams } from '../../_services/customer.service';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { PublicationService } from '../../_services/publication.service';\r\nimport { GenralPaymentService } from '../../_services/genral-payment.service';\r\nimport { bankCharges } from '../package-test/package-test.component';\r\n\r\n@Component({\r\n  selector: 'app-publications',\r\n  templateUrl: './publicationsfocuslist.component.html',\r\n  styleUrls: ['./publications.component.css']\r\n})\r\nexport class PublicationsfocuslistComponent implements OnInit {\r\n  public SessionCustomerId: number = 0;\r\n  public publicationFocusLists: PublicationFocusList[];\r\n  public loaderFlag: boolean = false;\r\n  public tableHeading = 'Publication Focus List';\r\n  public deptid: number = 0;\r\n  public deptidd: any;\r\n  public searchText: string = '';\r\n  public apiParams = {\r\n    searchedText: ''\r\n    , tablerowstart: 0\r\n    , tablerowlimit: 10\r\n  };\r\n  public pageCount: number = 1;\r\n  public pagenationNoofPage: number = 1;\r\n  public pagenationConfiguration = {\r\n    pageNos: []\r\n    , currentPageNo: Number(1)\r\n  };\r\n  public startPageNo: number = 1;\r\n  public endPageNo: number = 5;\r\n  publicationFocusSelected: publicationSelected[] = [];\r\n  newPaymentFormData: { amountToPay: number; paymentAgainst: string; paymentType: string; paymentComments: string; };\r\n  curierCharges: number;\r\n  PINcode: any;\r\n  phoneNumber: any;\r\n  Address: any;\r\n  Name: any;\r\n  checkOut: Checkoutparams;\r\n  IsMember: boolean = false;\r\n  modalref: any;\r\n  paymentMode: number;\r\n  totalvalue: number;\r\n  bankCharges: bankCharges;\r\n  genralPaymentId: string;\r\n  curierWeight: any;\r\n  curierPincode: any;\r\n  // delivery:deliveryDetails;\r\n  constructor(\r\n    private http: HttpClient\r\n    , private activatedRoute: ActivatedRoute\r\n    , private router: Router\r\n    , private customerService: CustomerService\r\n    , private modalService: BsModalService\r\n    , private publicationServices: PublicationService\r\n    , private genralPaymentService: GenralPaymentService\r\n  ) {\r\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // const routeParams = this.activeRoute.snapshot.params;\r\n    if (this.SessionCustomerId <= 0) {\r\n      this.router.navigateByUrl('login');\r\n    }\r\n    this.activatedRoute.params.subscribe(routeParams => {\r\n      this.deptid = 8; // Number(this.activatedRoute.snapshot.params.deptid);\r\n      // this.changeDisplayCount();\r\n      this.resetDataValues();\r\n    });\r\n\r\n    this.getCustomerType();\r\n    this.getbankcharges();\r\n  }\r\n  async getData() {\r\n    // console.log(this.deptid);\r\n    this.apiParams.searchedText = this.searchText;\r\n    this.apiParams.tablerowstart = this.pagenationConfiguration.currentPageNo;\r\n    this.loaderFlag = true;\r\n    // tslint:disable-next-line:max-line-length\r\n    await this.http.post<any>(environment.apiUrl + 'get_publication_focus_list/', { data: this.apiParams }).subscribe({\r\n      next: data => {\r\n        // console.log('--------------------DATA START-----------------');\r\n        this.publicationFocusLists = data.data;\r\n        for (let index = 0; index < this.publicationFocusLists.length; index++) {\r\n          const element = this.publicationFocusLists[index];\r\n          let ExsitingIndex = this.publicationFocusSelected.findIndex(ele => ele.itemcode == element.itemcode);\r\n          if (ExsitingIndex > -1) {\r\n            this.publicationFocusLists[index].cheked = true\r\n          }\r\n        }\r\n        this.pageCount = Number(data.pagecount);\r\n        if (this.pageCount <= 5) {\r\n          // console.log('page no validatoin ' + this.pageCount);\r\n          this.endPageNo = this.pageCount;\r\n        } else {\r\n          // scenario - 1\r\n          // if the current page no in  between startpage and end page\r\n          // tslint:disable-next-line:max-line-length\r\n          if (this.pagenationConfiguration.currentPageNo >= this.startPageNo && this.pagenationConfiguration.currentPageNo <= this.endPageNo) {\r\n            // do something\r\n          } else {\r\n            console.log('Current page no ' + this.pagenationConfiguration.currentPageNo);\r\n            console.log('Start page no ' + this.startPageNo);\r\n            console.log('End page no ' + this.endPageNo);\r\n            // this.endPageNo = Number(5);\r\n            // tslint:disable-next-line:max-line-length\r\n            if (this.pagenationConfiguration.currentPageNo !== Number(1) && this.pagenationConfiguration.currentPageNo > this.startPageNo) {\r\n              this.startPageNo = this.startPageNo + Number(1);\r\n              this.endPageNo = this.endPageNo + Number(1);\r\n            } else if (this.pagenationConfiguration.currentPageNo < this.startPageNo) {\r\n              this.startPageNo = this.startPageNo - Number(1);\r\n              this.endPageNo = this.endPageNo - Number(1);\r\n            }\r\n          }\r\n        }\r\n        // console.log('data count' + data.datacount);\r\n        // console.log('page count' + data.pagecount);\r\n        // console.log('Last Page No' + this.endPageNo);\r\n        // console.log('--------------------DATA END-----------------');\r\n        this.pageNos();\r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n    console.log('--------------------SERVICE END-----------------');\r\n    setTimeout(() => {\r\n      this.loaderFlag = false;\r\n    }, 500);\r\n  }\r\n  pageNos() {\r\n    console.log(' pageNos function : ' + this.endPageNo);\r\n    this.pagenationConfiguration.pageNos = [];\r\n    for (let j = this.startPageNo; j <= this.endPageNo; j++) {\r\n      this.pagenationConfiguration.pageNos[j] = j;\r\n    }\r\n    // console.log(this.pagenationConfiguration);\r\n  }\r\n  pagenationEvent(type: number, pageno: number) {\r\n    // console.log('page no clicked');\r\n    // console.log(type);\r\n    if (type === 1) { // page no click event\r\n      if (pageno === this.pagenationConfiguration.currentPageNo) {\r\n        // do nothing\r\n      } else {\r\n        this.pagenationConfiguration.currentPageNo = pageno;\r\n        this.getData();\r\n      }\r\n    } else if (type === 2) { // do the Next butting event\r\n      // console.log('next page btn event; End page no ' + this.endPageNo);\r\n      // console.log(' current page no ' + this.pagenationConfiguration.currentPageNo);\r\n      if (this.pagenationConfiguration.currentPageNo < Number(this.pageCount)) { // validate last page\r\n        // console.log('if');\r\n        // this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n        // this.getData();\r\n        if (this.pagenationConfiguration.currentPageNo > 5) {\r\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n          this.startPageNo = this.startPageNo + 1;\r\n          this.endPageNo = this.pagenationConfiguration.currentPageNo;\r\n          this.getData();\r\n        } else {\r\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n          this.getData();\r\n        }\r\n      }\r\n    } else if (type === 3) { // do the Previous butting event\r\n      if (this.pagenationConfiguration.currentPageNo !== 1) { // for valiate first page no\r\n        this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) - Number(1);\r\n        this.getData();\r\n      }\r\n    }\r\n  }\r\n  changeDisplayCount() {\r\n    this.pagenationConfiguration.pageNos = [];\r\n    this.pagenationConfiguration.currentPageNo = 1;\r\n    this.startPageNo = 1;\r\n    this.endPageNo = 5;\r\n    this.getData();\r\n  }\r\n  resetDataValues() {\r\n    this.pagenationConfiguration.pageNos = [];\r\n    this.pagenationConfiguration.currentPageNo = 1;\r\n    this.startPageNo = 1;\r\n    this.endPageNo = 5;\r\n    this.apiParams.searchedText = '';\r\n    this.apiParams.tablerowlimit = 10;\r\n    this.apiParams.tablerowstart = 0;\r\n    this.getData();\r\n  }\r\n\r\n  PublicationSelection(item, NMamount, Mamount, Title, Weight) {\r\n\r\n    let ExsitingIndex = this.publicationFocusSelected.findIndex(ele => ele.itemcode == item);\r\n    if (ExsitingIndex > -1) {\r\n      this.publicationFocusSelected.splice(ExsitingIndex, 1);\r\n      return\r\n    }\r\n    this.publicationFocusSelected.push(\r\n      {\r\n        itemcode: item,\r\n        nmamount: NMamount,\r\n        mamount: Mamount,\r\n        title: Title,\r\n        quantity: \"1\",\r\n        weight: Weight\r\n      }\r\n    );\r\n  }\r\n\r\n  PublicationPayment() {\r\n\r\n    if (this.publicationFocusSelected.length == 0) {\r\n      Swal.fire(\"No publication Focus Selected\", \" please Select any publication Focus\", \"info\");\r\n      return;\r\n    }\r\n\r\n    let totalAmount = 0;\r\n    if (this.IsMember) {\r\n      this.publicationFocusSelected.forEach(ele => totalAmount = totalAmount + Number(ele.mamount) * Number(ele.quantity));\r\n    } else {\r\n      this.publicationFocusSelected.forEach(ele => totalAmount = totalAmount + Number(ele.nmamount) * Number(ele.quantity));\r\n    }\r\n    //courier charges \r\n    totalAmount = totalAmount + this.curierCharges;\r\n    //patment gateway tax \r\n    if (this.paymentMode == 1) {\r\n      totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.credit_card) / 100;\r\n    } else if (this.paymentMode == 2) {\r\n      totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.debit_rupay) / 100;\r\n    } else if (this.paymentMode == 3) {\r\n      totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.debit_lt_2000) / 100;\r\n    } else if (this.paymentMode == 4) {\r\n      totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.debit_gt_2000) / 100;\r\n    } else if (this.paymentMode == 5) {\r\n      totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.upi) / 100;\r\n    } else if (this.paymentMode == 6) {\r\n      totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.nb) / 100;\r\n    }\r\n    this.newPaymentFormData = {\r\n      amountToPay: totalAmount,\r\n      paymentAgainst: \"\",\r\n      paymentType: \"5\",\r\n      paymentComments: this.genralPaymentId\r\n    }\r\n\r\n    // this.popupLoaderState = true;\r\n    let orderParams = {\r\n      amount: totalAmount\r\n      , receipt: localStorage.getItem('customername')\r\n    }\r\n\r\n    let params = {\r\n      formdata: this.newPaymentFormData\r\n      , customerid: this.SessionCustomerId\r\n      , orderdetails: orderParams\r\n    }\r\n    this.http.post<any>(environment.apiUrl + 'insert_general_payment_transcations/', { data: params }).subscribe({\r\n      next: data => {\r\n        // this.popupLoaderState = false;\r\n        if (data.temp_payment_reference != '') {\r\n          window.location.href = environment.razorpaymentUrl + 'pay.php?order_id=' + data.payload.order_id.toString();\r\n        } else {\r\n          Swal.fire(\"ERROR\", \"no response from API\", \"error\");\r\n        }\r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  getCourierCharges() {\r\n    this.checkOut = {\r\n      custid: this.SessionCustomerId,\r\n      name: this.Name,\r\n      address: this.Address,\r\n      phoneNO: this.phoneNumber,\r\n      pincode: this.PINcode,\r\n      publications: this.publicationFocusSelected\r\n    }\r\n    this.publicationServices.getCourierCharge(this.checkOut).subscribe((res) => {\r\n      if (res.status) {\r\n        this.curierCharges = Number(res.courier_charges);\r\n        this.curierWeight = res.weight;\r\n        this.curierPincode = res.del_pincode == null ? 'Not Provided' : res.del_pincode;\r\n        this.genralPaymentId = res.paymentid\r\n        // this.PublicationPayment();\r\n      }\r\n    })\r\n    // this.curierCharges = 100;\r\n\r\n  }\r\n\r\n  getCustomerType() {\r\n    this.customerService.getCustomerType({ custid: this.SessionCustomerId }).subscribe(result => {\r\n      if (result[0].customer_type == \"M\") {\r\n        this.IsMember = true;\r\n      } else {\r\n        this.IsMember = false;\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  showCheckOut(Checkout: TemplateRef<any>) {\r\n    if (this.publicationFocusSelected.length < 1) {\r\n      Swal.fire(\"No publication Selected\", \" please Select any publication\", \"info\");\r\n      return\r\n    }\r\n    let params: customerTypeParams = {\r\n      custid: Number(this.SessionCustomerId)\r\n    }\r\n    this.customerService.getCustomerType(params).subscribe(res => {\r\n      let result = res[0];\r\n      this.Name = result.mill_organization_name;\r\n      this.phoneNumber = result.contact_person_mobileno;\r\n      this.PINcode = result.pincode;\r\n      this.Address = (result.address1 == '' || result.address1 == null) ? result.address2 : result.address1;\r\n    })\r\n    this.modalref = this.modalService.show(Checkout, { class: 'modal-xl' });\r\n  }\r\n\r\n  paymentOptionOpen(template: TemplateRef<any>) {\r\n    this.modalref.hide();\r\n    this.totalvalue = 0;\r\n    this.customerService.getCustomerType({ custid: this.SessionCustomerId }).subscribe(result => {\r\n      if (result[0].customer_type == \"M\") {\r\n        this.publicationFocusSelected.forEach(ele => this.totalvalue = this.totalvalue + Number(ele.mamount) * Number(ele.quantity));\r\n      } else {\r\n        this.publicationFocusSelected.forEach(ele => this.totalvalue = this.totalvalue + Number(ele.nmamount) * Number(ele.quantity));\r\n        // this.publicationSelected.forEach(ele => totalAmount=totalAmount+Number(ele.amount));\r\n      }\r\n    });\r\n    this.getCourierCharges();\r\n    this.modalref = this.modalService.show(template, { class: 'modal-success' });\r\n  }\r\n\r\n  getbankcharges() {\r\n    this.genralPaymentService.getBankCharges().subscribe((res) => {\r\n      this.bankCharges = res[0];\r\n    })\r\n  }\r\n\r\n}\r\nexport interface PublicationFocusList {\r\n  cheked: boolean;\r\n  itemcode: string;\r\n  serialno: string;\r\n  title: any;\r\n  volume: any;\r\n  month: any;\r\n  year: any;\r\n  no: any;\r\n  member_rate: any;\r\n  nonmeber_rate: any;\r\n}\r\n// export interface deliveryDetails{\r\n//   Name:string;\r\n//   PhoneNO:string;\r\n//   PINcode:string;\r\n//   Address:string;\r\n// }\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgIf } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { environment } from './../../../environments/environment';\r\nimport Swal from 'sweetalert2';\r\nimport { CustomerService, customerTypeParams } from '../../_services/customer.service';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Template } from '@angular/compiler/src/render3/r3_ast';\r\nimport { PublicationService } from '../../_services/publication.service';\r\nimport { GenralPaymentService } from '../../_services/genral-payment.service';\r\nimport { bankCharges } from '../package-test/package-test.component';\r\n\r\n@Component({\r\n  selector: 'app-publications',\r\n  templateUrl: './publicationslist.component.html',\r\n  styleUrls: ['./publications.component.css']\r\n})\r\nexport class PublicationslistComponent implements OnInit {\r\n  public SessionCustomerId: number = 0;\r\n  public publicationLists: PublicationList[];\r\n  public loaderFlag: boolean = false;\r\n  public tableHeading = 'Publication List';\r\n  public deptid: number = 0;\r\n  public deptidd: any;\r\n  public searchText: string = '';\r\n  public apiParams = {\r\n    searchedText: ''\r\n    , tablerowstart: 0\r\n    , tablerowlimit: 10\r\n    ,category:''\r\n  };\r\n  public pageCount: number = 1;\r\n  public pagenationNoofPage: number = 1;\r\n  public pagenationConfiguration = {\r\n    pageNos: []\r\n    , currentPageNo: Number(1)\r\n  };\r\n  public startPageNo: number = 1;\r\n  public endPageNo: number = 5;\r\n  publicationSelected: publicationSelected[] = [];\r\n  newPaymentFormData: { amountToPay: number; paymentAgainst: string; paymentType: string; paymentComments: string; };\r\n  modalRef: BsModalRef;\r\n  IsMember: boolean = false;\r\n  curierCharges: any = 0;\r\n  checkOut: Checkoutparams;\r\n  Name: string;\r\n  phoneNumber: string;\r\n  PINcode: string;\r\n  Address: string;\r\n  Amount: any;\r\n  paymentMode: any;\r\n  bankCharges: bankCharges;\r\n  totalvalue: number;\r\n  genralPaymentId: any;\r\n  curierWeight: any;\r\n  curierPincode: any;\r\n  Category:string = '';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n    , private activatedRoute: ActivatedRoute\r\n    , private router: Router\r\n    , private customerService: CustomerService\r\n    , private modalService: BsModalService\r\n    , private publicationServices: PublicationService\r\n    , private genralPaymentService: GenralPaymentService\r\n  ) {\r\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // const routeParams = this.activeRoute.snapshot.params;\r\n    if (this.SessionCustomerId <= 0) {\r\n      this.router.navigateByUrl('login');\r\n    }\r\n    this.activatedRoute.params.subscribe(routeParams => {\r\n      this.deptid = 8; // Number(this.activatedRoute.snapshot.params.deptid);\r\n      // this.changeDisplayCount();\r\n      this.resetDataValues();\r\n    });\r\n\r\n    this.getCustomerType();\r\n    this.getbankcharges();\r\n  }\r\n  async getData() {\r\n    // console.log(this.deptid);\r\n    this.apiParams.searchedText = this.searchText;\r\n    this.apiParams.tablerowstart = this.pagenationConfiguration.currentPageNo;\r\n    this.apiParams.category = this.Category;\r\n    this.loaderFlag = true;\r\n    // tslint:disable-next-line:max-line-length\r\n    await this.http.post<any>(environment.apiUrl + 'get_publication_list/', this.apiParams).subscribe({\r\n      next: data => {\r\n        // console.log('--------------------DATA START-----------------');\r\n        this.publicationLists = data.data;\r\n        for (let index = 0; index < this.publicationLists.length; index++) {\r\n          const element = this.publicationLists[index];\r\n          let ExsitingIndex = this.publicationSelected.findIndex(ele => ele.itemcode == element.itemcode);\r\n          if (ExsitingIndex > -1) {\r\n            this.publicationLists[index].cheked = true\r\n          }\r\n        }\r\n        this.pageCount = Number(data.pagecount);\r\n        if (this.pageCount <= 5) {\r\n          // console.log('page no validatoin ' + this.pageCount);\r\n          this.endPageNo = this.pageCount;\r\n        } else {\r\n          // scenario - 1\r\n          // if the current page no in  between startpage and end page\r\n          // tslint:disable-next-line:max-line-length\r\n          if (this.pagenationConfiguration.currentPageNo >= this.startPageNo && this.pagenationConfiguration.currentPageNo <= this.endPageNo) {\r\n            // do something\r\n          } else {\r\n            console.log('Current page no ' + this.pagenationConfiguration.currentPageNo);\r\n            console.log('Start page no ' + this.startPageNo);\r\n            console.log('End page no ' + this.endPageNo);\r\n            // this.endPageNo = Number(5);\r\n            // tslint:disable-next-line:max-line-length\r\n            if (this.pagenationConfiguration.currentPageNo !== Number(1) && this.pagenationConfiguration.currentPageNo > this.startPageNo) {\r\n              this.startPageNo = this.startPageNo + Number(1);\r\n              this.endPageNo = this.endPageNo + Number(1);\r\n            } else if (this.pagenationConfiguration.currentPageNo < this.startPageNo) {\r\n              this.startPageNo = this.startPageNo - Number(1);\r\n              this.endPageNo = this.endPageNo - Number(1);\r\n            }\r\n          }\r\n        }\r\n        // console.log('data count' + data.datacount);\r\n        // console.log('page count' + data.pagecount);\r\n        // console.log('Last Page No' + this.endPageNo);\r\n        // console.log('--------------------DATA END-----------------');\r\n        this.pageNos();\r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n    console.log('--------------------SERVICE END-----------------');\r\n    setTimeout(() => {\r\n      this.loaderFlag = false;\r\n    }, 500);\r\n  }\r\n  pageNos() {\r\n    console.log(' pageNos function : ' + this.endPageNo);\r\n    this.pagenationConfiguration.pageNos = [];\r\n    for (let j = this.startPageNo; j <= this.endPageNo; j++) {\r\n      this.pagenationConfiguration.pageNos[j] = j;\r\n    }\r\n    // console.log(this.pagenationConfiguration);\r\n  }\r\n  pagenationEvent(type: number, pageno: number) {\r\n    // console.log('page no clicked');\r\n    // console.log(type);\r\n    if (type === 1) { // page no click event\r\n      if (pageno === this.pagenationConfiguration.currentPageNo) {\r\n        // do nothing\r\n      } else {\r\n        this.pagenationConfiguration.currentPageNo = pageno;\r\n        this.getData();\r\n      }\r\n    } else if (type === 2) { // do the Next butting event\r\n      // console.log('next page btn event; End page no ' + this.endPageNo);\r\n      // console.log(' current page no ' + this.pagenationConfiguration.currentPageNo);\r\n      if (this.pagenationConfiguration.currentPageNo < Number(this.pageCount)) { // validate last page\r\n        // console.log('if');\r\n        // this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n        // this.getData();\r\n        if (this.pagenationConfiguration.currentPageNo > 5) {\r\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n          this.startPageNo = this.startPageNo + 1;\r\n          this.endPageNo = this.pagenationConfiguration.currentPageNo;\r\n          this.getData();\r\n        } else {\r\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n          this.getData();\r\n        }\r\n      }\r\n    } else if (type === 3) { // do the Previous butting event\r\n      if (this.pagenationConfiguration.currentPageNo !== 1) { // for valiate first page no\r\n        this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) - Number(1);\r\n        this.getData();\r\n      }\r\n    }\r\n  }\r\n  changeDisplayCount() {\r\n    this.pagenationConfiguration.pageNos = [];\r\n    this.pagenationConfiguration.currentPageNo = 1;\r\n    this.startPageNo = 1;\r\n    this.endPageNo = 5;\r\n    this.getData();\r\n  }\r\n  resetDataValues() {\r\n    this.pagenationConfiguration.pageNos = [];\r\n    this.pagenationConfiguration.currentPageNo = 1;\r\n    this.startPageNo = 1;\r\n    this.endPageNo = 5;\r\n    this.apiParams.searchedText = '';\r\n    this.apiParams.tablerowlimit = 10;\r\n    this.apiParams.tablerowstart = 0;\r\n    this.getData();\r\n  }\r\n\r\n  PublicationSelection(item, NMamount, Mamount, Title, Weight) {\r\n\r\n    let ExsitingIndex = this.publicationSelected.findIndex(ele => ele.itemcode == item);\r\n    if (ExsitingIndex > -1) {\r\n      this.publicationSelected.splice(ExsitingIndex, 1);\r\n      return\r\n    }\r\n    this.publicationSelected.push(\r\n      {\r\n        itemcode: item,\r\n        nmamount: NMamount,\r\n        mamount: Mamount,\r\n        title: Title,\r\n        quantity: \"1\",\r\n        weight: Weight\r\n      }\r\n    );\r\n  }\r\n\r\n  PublicationPayment() {\r\n\r\n    if (this.publicationSelected.length == 0) {\r\n      Swal.fire(\"No publication Selected\", \" please Select any publication\", \"info\");\r\n      return;\r\n    }\r\n    let totalAmount = 0;\r\n    this.customerService.getCustomerType({ custid: this.SessionCustomerId }).subscribe(result => {\r\n      if (result[0].customer_type == \"M\") {\r\n        this.publicationSelected.forEach(ele => totalAmount = totalAmount + Number(ele.mamount) * Number(ele.quantity));\r\n      } else {\r\n        this.publicationSelected.forEach(ele => totalAmount = totalAmount + Number(ele.nmamount) * Number(ele.quantity));\r\n        // this.publicationSelected.forEach(ele => totalAmount=totalAmount+Number(ele.amount));\r\n      }\r\n      totalAmount = totalAmount + this.curierCharges;\r\n      if (this.paymentMode == 1) {\r\n        totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.credit_card) / 100;\r\n      } else if (this.paymentMode == 2) {\r\n        totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.debit_rupay) / 100;\r\n      } else if (this.paymentMode == 3) {\r\n        totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.debit_lt_2000) / 100;\r\n      } else if (this.paymentMode == 4) {\r\n        totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.debit_gt_2000) / 100;\r\n      } else if (this.paymentMode == 5) {\r\n        totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.upi) / 100;\r\n      } else if (this.paymentMode == 6) {\r\n        totalAmount = Number(totalAmount) + Number(totalAmount) * Number(this.bankCharges.nb) / 100;\r\n      }\r\n      this.newPaymentFormData = {\r\n        amountToPay: totalAmount,\r\n        paymentAgainst: \"\",\r\n        paymentType: \"5\",\r\n        paymentComments: this.genralPaymentId\r\n      }\r\n\r\n      // this.popupLoaderState = true;\r\n      let orderParams = {\r\n        amount: totalAmount\r\n        , receipt: localStorage.getItem('customername')\r\n      }\r\n\r\n      let params = {\r\n        formdata: this.newPaymentFormData\r\n        , customerid: this.SessionCustomerId\r\n        , orderdetails: orderParams\r\n      }\r\n      this.http.post<any>(environment.apiUrl + 'insert_general_payment_transcations/', { data: params }).subscribe({\r\n        next: data => {\r\n          // this.popupLoaderState = false;\r\n          if (data.temp_payment_reference != '') {\r\n            window.location.href = environment.razorpaymentUrl + 'pay.php?order_id=' + data.payload.order_id.toString();\r\n          } else {\r\n            Swal.fire(\"ERROR\", \"no response from API\", \"error\");\r\n          }\r\n        },\r\n        error: error => {\r\n          console.log(error);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  showCheckOut(Checkout: TemplateRef<any>) {\r\n    if (this.publicationSelected.length < 1) {\r\n      Swal.fire(\"No publication Selected\", \" please Select any publication\", \"info\");\r\n      return\r\n    }\r\n    let params: customerTypeParams = {\r\n      custid: Number(this.SessionCustomerId)\r\n    }\r\n    this.customerService.getCustomerType(params).subscribe(res => {\r\n      let result = res[0];\r\n      this.Name = result.mill_organization_name;\r\n      this.phoneNumber = result.contact_person_mobileno;\r\n      this.PINcode = result.pincode;\r\n      this.Address = (result.address1 == '' || result.address1 == null) ? result.address2 : result.address1;\r\n    })\r\n    this.modalRef = this.modalService.show(Checkout, { class: 'modal-xl' });\r\n  }\r\n\r\n  getCustomerType() {\r\n    this.customerService.getCustomerType({ custid: this.SessionCustomerId }).subscribe(result => {\r\n      if (result[0].customer_type == \"M\") {\r\n        this.IsMember = true;\r\n      } else {\r\n        this.IsMember = false;\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  getCourierCharges() {\r\n    this.checkOut = {\r\n      custid: this.SessionCustomerId,\r\n      name: this.Name,\r\n      address: this.Address,\r\n      phoneNO: this.phoneNumber,\r\n      pincode: this.PINcode,\r\n      publications: this.publicationSelected\r\n    }\r\n    this.publicationServices.getCourierCharge(this.checkOut).subscribe((res) => {\r\n      if (res.status) {\r\n        this.curierCharges = Number(res.courier_charges);\r\n        this.curierWeight = res.weight;\r\n        this.curierPincode = res.del_pincode == null ? 'Not Provided' : res.del_pincode;\r\n        this.genralPaymentId = res.paymentid;\r\n        // this.PublicationPayment();\r\n      }\r\n    })\r\n    // this.curierCharges = 100;\r\n  }\r\n\r\n  paymentOptionOpen(template: TemplateRef<any>) {\r\n    this.modalRef.hide();\r\n    this.totalvalue = 0;\r\n    this.customerService.getCustomerType({ custid: this.SessionCustomerId }).subscribe(result => {\r\n      if (result[0].customer_type == \"M\") {\r\n        this.publicationSelected.forEach(ele => this.totalvalue = this.totalvalue + Number(ele.mamount) * Number(ele.quantity));\r\n      } else {\r\n        this.publicationSelected.forEach(ele => this.totalvalue = this.totalvalue + Number(ele.nmamount) * Number(ele.quantity));\r\n        // this.publicationSelected.forEach(ele => totalAmount=totalAmount+Number(ele.amount));\r\n      }\r\n    });\r\n    this.getCourierCharges();\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-success' });\r\n  }\r\n\r\n  getbankcharges() {\r\n    this.genralPaymentService.getBankCharges().subscribe((res) => {\r\n      this.bankCharges = res[0];\r\n    })\r\n  }\r\n\r\n  // paymentTypeSelection(amountToPay){\r\n  //   console.log(this.paymentMode);\r\n  //   if(this.paymentMode == 1){\r\n  //     amountToPay = Number(amountToPay)+Number(amountToPay)*0.01;\r\n  //   }\r\n  //   this.PublicationPayment();\r\n  // }\r\n\r\n}\r\nexport interface PublicationList {\r\n  cheked: boolean;\r\n  itemcode: string;\r\n  serialno: string;\r\n  title: any;\r\n  memberrate: any;\r\n  nonmeberrate: any;\r\n}\r\n\r\nexport interface publicationSelected {\r\n  itemcode: string,\r\n  nmamount: string,\r\n  mamount: string,\r\n  title: string,\r\n  quantity: string,\r\n  weight: string\r\n}\r\n\r\nexport interface Checkoutparams {\r\n  custid: number\r\n  name: string,\r\n  address: string,\r\n  pincode: string,\r\n  phoneNO: string,\r\n  publications: publicationSelected[]\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: 'register.component.html'\n})\nexport class RegisterComponent implements OnInit  {\n    RegFormData = {\n    regtype: ''\n    , mill_organization_name: ''\n    , contact_person_name: ''\n    , contact_person_mobileno: ''\n    , alternative_contactnos: ''\n    , email: ''\n    , address1: ''\n    , address2: ''\n    , city: ''\n    , state: ''\n    , pincode: ''\n    , gstregtype: 'N'\n    , gstno: ''\n    , cloud_customer_id: ''\n    , email_otp: 0\n    , mobile_otp: 0\n  };\n  reg_type: any;\n  returnFlag: boolean;\n  returnMessage = '';\n  spinnerFlag: boolean = false;\n  public errorMessages: any = '';\n  public stateNameLists: any = [];\n  public ServerSideData = {\n    email_otp: Number('')\n    , mobile_otp: Number('')\n  };\n  constructor(\n    private http: HttpClient\n    , private router: Router\n  ) { }\n  ngOnInit() {\n    this.loadStateDropdownValues();\n  }\n  loadStateDropdownValues() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>(environment.apiUrl + 'get_statename_list/', { data: '' }).subscribe({\n        next: data => {\n          this.stateNameLists = data;\n        },\n        error: error => {\n          // console.error('There was an error!', error);\n        }\n    });\n  }\n  formData() {\n    this.returnFlag = false;\n    this.returnMessage = '';\n    let return_values: any;\n    // tslint:disable-next-line:max-line-length\n    this.spinnerFlag = true;\n    this.http.post<any>(environment.apiUrl + 'newRegistration', { data: this.RegFormData }).subscribe({\n        next: data => {\n          return_values = data;\n          this.spinnerFlag = false;\n          this.returnFlag = return_values.status;\n          this.returnMessage = return_values.message;\n        }\n    });\n  }\n  validateFormData() {\n    this.spinnerFlag = true;\n    this.errorMessages = '';\n\n    this.returnMessage = '';\n    this.returnFlag = false;\n    if (this.RegFormData.regtype === '') {\n      this.errorMessages = 'Reg. Type should not Empty.';\n    }\n    if (this.RegFormData.mill_organization_name === '') {\n      this.errorMessages = 'Mill / Organization should not Empty.';\n    }\n    if (this.RegFormData.contact_person_name === '') {\n      this.errorMessages = 'Contact person name should not Empty.';\n    }\n    if (this.RegFormData.contact_person_mobileno === '') {\n      this.errorMessages = 'Mobile should not Empty.';\n    }\n    if (this.RegFormData.email === '') {\n      this.errorMessages = 'Email should not Empty.';\n    }\n    if (this.RegFormData.address1 === '') {\n      this.errorMessages = 'Address 1 should not Empty.';\n    }\n    if (this.RegFormData.city === '') {\n      this.errorMessages = 'City should not Empty.';\n    }\n    if (this.RegFormData.state === '') {\n      this.errorMessages = 'State should not Empty.';\n    }\n    if (this.RegFormData.pincode === '') {\n      this.errorMessages = 'Pincode should not Empty.';\n    }\n    if (this.RegFormData.gstregtype === '') {\n      this.errorMessages = 'GST Registration type should not Empty.';\n    }\n    if (this.RegFormData.gstregtype === 'Y' && this.RegFormData.gstno === '') {\n      this.errorMessages = 'GST No should not Empty.';\n    }\n    // For validate email and mobile send OTP\n    if (this.errorMessages === '') {\n      this.http.post<any>(environment.apiUrl + 'newRegistration', { data: this.RegFormData }).subscribe({\n        next: data => {\n          // setTimeout(function() {\n             // }, 500);\n            if (data.status === true) {\n              this.RegFormData.cloud_customer_id = data.cloud_customer_id;\n              this.ServerSideData.email_otp = Number(data.email_otp);\n              this.ServerSideData.mobile_otp = Number(data.mobile_otp);\n              this.returnFlag = true;\n              this.returnMessage = data.message;\n              if (data.mailstatus === true && data.smsstatus === true) {\n                this.spinnerFlag = false;\n              }\n            } else if (data.status === false) {\n              this.returnFlag = false;\n              this.returnMessage = data.message;\n              this.spinnerFlag = false;\n            }\n        }\n     });\n    }\n  }\n  backToLoginPage(): void {\n    this.router.navigateByUrl('login');\n  }\n  validateOtp() {\n    this.returnMessage = '';\n    this.returnFlag = false;\n    if ((Number(this.RegFormData.mobile_otp) > 0 )) {\n      this.spinnerFlag = true;\n      // tslint:disable-next-line:max-line-length\n      if ( Number(this.ServerSideData.mobile_otp) === Number(this.RegFormData.mobile_otp) ) {\n          // tslint:disable-next-line:max-line-length\n          this.http.post<any>(environment.apiUrl + 'update_registration_status/' + this.RegFormData.cloud_customer_id, { data: this.RegFormData }).subscribe({\n            next: data => {\n                this.returnFlag = data.status;\n                  this.spinnerFlag = false;\n                  this.returnMessage = data.msg;\n            }\n        });\n      } else {\n        this.returnFlag = false;\n        this.spinnerFlag = false;\n        this.returnMessage = 'OTP were In-Correct';\n      }\n    } else {\n      this.returnFlag = false;\n      this.spinnerFlag = false;\n      this.returnMessage = ' Mobile OTP should be in Numberic';\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JlcG9ydHMvcmVwb3J0cy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.css']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgIf } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { environment } from './../../../environments/environment';\r\n\r\n// import Stepper from 'bs-stepper';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addupdaterequestanalysis',\r\n  templateUrl: './addupdaterequestanalysis.component.html',\r\n  styleUrls: ['./requestanalysis.component.css']\r\n})\r\nexport class AddupdaterequestanalysisComponent implements OnInit {\r\n    public SessionCustomerId: number = 0;  \r\n    public spinnerFlag: boolean = false;\r\n    public requestNumber: any = '';\r\n    public departmentList: InterfaceDepartmentList[];\r\n    public labList: InterfaceLabList[];\r\n    public testList: InterfaceTestList[];\r\n    public formData = {\r\n        deptid : ''\r\n        , labid: ''\r\n    }\r\n    public testDetails = {\r\n        testname : ''\r\n        , standard: ''\r\n        , nabl : ''\r\n        , samplesize : ''\r\n        , memrate : ''\r\n        , nonmemrate :''\r\n    }\r\n    isLinear = false;\r\n  \r\n    constructor(\r\n    private http: HttpClient\r\n    , private activatedRoute: ActivatedRoute\r\n    , private router: Router\r\n    \r\n    // , private stepper: Stepper\r\n    ) {\r\n        this.SessionCustomerId = Number(localStorage.getItem('customerid'));\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        let datetime = new Date();\r\n\r\n      \r\n        var dd:any = datetime.getDate();\r\n        var mm:any = datetime.getMonth() + 1; //January is 0!\r\n        var yyyy = datetime.getFullYear();\r\n        var date:String=dd;\r\n        var month:String=mm;\r\n\r\n        \r\n        if (dd < 10) {\r\n            \r\n           date = '0' + dd;\r\n        }\r\n        \r\n        if (mm < 10) {\r\n            month = '0' + mm;\r\n        } \r\n            \r\n        let today = yyyy + '-' + month + '-' + date;\r\n        // this.stepper = new Stepper(document.querySelector('#stepper1'), {\r\n        //     linear: false,\r\n        //     animation: true\r\n        //   })\r\n        // const routeParams = this.activeRoute.snapshot.params;\r\n        if (this.SessionCustomerId <= 0) {\r\n            this.router.navigateByUrl('login');\r\n        }\r\n        this.activatedRoute.params.subscribe(routeParams => {\r\n            this.requestNumber = Number(this.activatedRoute.snapshot.params.reqno);\r\n        });\r\n        this.loadDepartmentList();\r\n        this.loadLabList();\r\n        \r\n         \r\n    }\r\n    async loadDepartmentList(){\r\n        await this.http.post<any>(environment.apiUrl + 'get_department_list/' + this.SessionCustomerId, { data : '' }).subscribe({\r\n            next: data => {\r\n                // console.log('--------------------DATA START-----------------');\r\n                this.departmentList = data;\r\n            },\r\n            error: error => {\r\n                console.log(error);\r\n            }\r\n        });\r\n    }\r\n    async loadLabList(){\r\n        if(Number(this.formData.deptid) > 0){\r\n            await this.http.post<any>(environment.apiUrl + 'get_lab_list/' + this.formData.deptid, { data : '' }).subscribe({\r\n                next: data => {\r\n                    // console.log('--------------------DATA START-----------------');\r\n                    this.labList = data;\r\n                },\r\n                error: error => {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        }{\r\n            this.labList = [];\r\n        }\r\n    }\r\n    async loadTestList(){\r\n        if(this.formData.deptid !='' && this.formData.labid !=''){\r\n            await this.http.post<any>(environment.apiUrl + 'get_testing_charges/' + this.formData.deptid +'/'+ this.formData.labid, { data : '' }).subscribe({\r\n                next: data => {\r\n                    // console.log('--------------------DATA START-----------------');\r\n                    this.testList = data.data;\r\n                    //console.log(data.data);\r\n                },\r\n                error: error => {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    async getTestDetails(testid){\r\n        if(this.formData.deptid !='' && this.formData.labid !='' && testid !=''){\r\n            await this.http.post<any>(environment.apiUrl + 'get_testing_charges/' + this.formData.deptid +'/'+ this.formData.labid +'/'+testid, { data : '' }).subscribe({\r\n                next: data => {\r\n                    // console.log('--------------------DATA START-----------------');\r\n                    //console.log(data.data[0]);\r\n                    if(data.data[0]){\r\n                        alert('if')\r\n                        this.testDetails = data.data[0];\r\n                        console.log(this.testDetails);\r\n                    }else{\r\n                        alert('else')\r\n                    }\r\n                },\r\n                error: error => {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // next() {\r\n    //     this.stepper.next();\r\n    //   }\r\n    \r\n    //   onSubmit() {\r\n    //     return false;\r\n    //   }\r\n    \r\n     \r\n}\r\nexport interface InterfaceDepartmentList{\r\n    deptid: Number;\r\n    deptname: String;\r\n}\r\nexport interface InterfaceLabList{\r\n    labid: Number;\r\n    labname: String;\r\n}\r\nexport interface InterfaceTestList{\r\n    testid: Number;\r\n    testname: String;\r\n    samplesize: String;\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3JlcXVlc3RhbmFseXNpcy9yZXF1ZXN0YW5hbHlzaXMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgIf } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { environment } from './../../../environments/environment';\nimport { AESEncryptDecryptServiceService } from '../../aesencrypt-decrypt-service.service';\nimport { DashboardService } from '../../_services/dashboard.service';\nimport { ProformaService } from '../../_services/proforma.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-requestanalysis',\n  templateUrl: './requestanalysis.component.html',\n  styleUrls: ['./requestanalysis.component.css']\n})\nexport class RequestanalysisComponent implements OnInit {\n    public SessionCustomerId: number = 0;\n    public SessionLimsCustomerId : number = 0;\n    public requestAnalysis: RequestAnalysis[];  \n    public testRates: TestRates[];\n    public loaderFlag: boolean = false;\n    public tableHeading = 'Request Analysis';\n    public searchText: string = '';\n    public apiParams  = {\n        searchedText: ''\n        , tablerowstart: 0\n        , tablerowlimit: 10\n        , paymenttype: 0\n    };\n    public pageCount: number = 1;\n    public pagenationNoofPage: number = 1;\n    public pagenationConfiguration = {\n      pageNos: []\n      , currentPageNo: Number(1)\n    };\n    public startPageNo: number = 1;\n    public endPageNo: number = 5;\n    public spinnerFlag: boolean = false;\n    IsEligible:boolean = false;\n  sampleData: any;\n  UpdateSampleDesc: any;\n  modalRef: BsModalRef;\n  public type:String=''\n  sampleTypeData: any;\n  constructor(\n    private http: HttpClient\n    , private activatedRoute: ActivatedRoute\n    , private router: Router\n    , private _AESEncryptDecryptService: AESEncryptDecryptServiceService\n    ,private dashBoardServices:DashboardService\n    ,private proformaService:ProformaService\n    ,private modalService: BsModalService\n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n    this.SessionLimsCustomerId = Number(localStorage.getItem('lims_custid'));\n  }\n\n  ngOnInit(): void {\n    // const routeParams = this.activeRoute.snapshot.params;\n    if (this.SessionCustomerId <= 0) {\n      this.router.navigateByUrl('login');\n    }\n    this.activatedRoute.params.subscribe(routeParams => {\n        this.apiParams.paymenttype = Number(this.activatedRoute.snapshot.params.type);\n        // this.changeDisplayCount();\n        this.resetDataValues();\n    });\n\n    this.dashBoardServices.getCreditLimit(JSON.stringify({custid : this.SessionCustomerId})).subscribe((res)=>{\n      let result = res[0];\n      if(result.credit_limit != null && result.credit_limit > 0 ){\n        this.IsEligible = true;\n      }\n    })\n  }\n  async getData() {\n    // console.log(this.deptid);\n    this.apiParams.searchedText = this.searchText;\n    this.apiParams.tablerowstart = this.pagenationConfiguration.currentPageNo;\n    this.loaderFlag = true;\n    \n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'get_requestanalysis/' + this.SessionLimsCustomerId, { data : this.apiParams }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        this.requestAnalysis = data.data;\n        \n        this.pageCount = Number(data.pagecount);\n        if (this.pageCount <= 5) {\n          // console.log('page no validatoin ' + this.pageCount);\n          this.endPageNo = this.pageCount;\n        } else {\n          // scenario - 1\n          // if the current page no in  between startpage and end page\n          // tslint:disable-next-line:max-line-length\n          if ( this.pagenationConfiguration.currentPageNo >= this.startPageNo && this.pagenationConfiguration.currentPageNo <= this.endPageNo) {\n            // do something\n          } else {\n            console.log('Current page no ' + this.pagenationConfiguration.currentPageNo);\n            console.log('Start page no ' + this.startPageNo);\n            console.log('End page no ' + this.endPageNo);\n            // this.endPageNo = Number(5);\n            // tslint:disable-next-line:max-line-length\n            if (this.pagenationConfiguration.currentPageNo !== Number(1) && this.pagenationConfiguration.currentPageNo >  this.startPageNo) {\n              this.startPageNo = this.startPageNo + Number(1);\n              this.endPageNo = this.endPageNo + Number(1);\n            } else if (this.pagenationConfiguration.currentPageNo <  this.startPageNo) {\n              this.startPageNo = this.startPageNo - Number(1);\n              this.endPageNo = this.endPageNo - Number(1);\n            }\n          }\n        }\n        // console.log('data count' + data.datacount);\n        // console.log('page count' + data.pagecount);\n        // console.log('Last Page No' + this.endPageNo);\n        // console.log('--------------------DATA END-----------------');\n        this.pageNos();\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n    console.log('--------------------SERVICE END-----------------');\n    setTimeout(() => {\n        this.loaderFlag = false;\n    }, 500);\n  }\n  pageNos() {\n    console.log(' pageNos function : ' + this.endPageNo);\n    this.pagenationConfiguration.pageNos = [];\n    for ( let j = this.startPageNo; j <= this.endPageNo; j++) {\n      this.pagenationConfiguration.pageNos[j] = j;\n    }\n    // console.log(this.pagenationConfiguration);\n  }\n  pagenationEvent(type: number, pageno: number) {\n    // console.log('page no clicked');\n    // console.log(type);\n    if (type === 1) { // page no click event\n      if (pageno === this.pagenationConfiguration.currentPageNo) {\n          // do nothing\n      } else {\n        this.pagenationConfiguration.currentPageNo = pageno;\n        this.getData();\n      }\n    } else if (type === 2) { // do the Next butting event\n      // console.log('next page btn event; End page no ' + this.endPageNo);\n      // console.log(' current page no ' + this.pagenationConfiguration.currentPageNo);\n      if (this.pagenationConfiguration.currentPageNo < Number(this.pageCount) ) { // validate last page\n        // console.log('if');\n        // this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n        // this.getData();\n        if (this.pagenationConfiguration.currentPageNo > 5) {\n            this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n            this.startPageNo = this.startPageNo + 1;\n            this.endPageNo = this.pagenationConfiguration.currentPageNo;\n            this.getData();\n        } else {\n          this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n          this.getData();\n        }\n      }\n    } else if (type === 3) { // do the Previous butting event\n      if (this.pagenationConfiguration.currentPageNo !== 1) { // for valiate first page no\n        this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) - Number(1);\n        this.getData();\n      }\n    }\n  }\n  changeDisplayCount() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.getData();\n  }\n  resetDataValues() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.apiParams.searchedText = '';\n    this.apiParams.tablerowlimit = 10;\n    this.apiParams.tablerowstart = 0;\n    this.getData();\n  }\n  async downloadCountDetails(paymentid, tid) {\n    this.spinnerFlag = true;\n    console.log(tid);\n    // tslint:disable-next-line:max-line-length\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'generate_count_converstions/' + paymentid, { data : '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.documentsUrl + 'converstions/' + tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async downloadPaymentTranscation(paymentid, tid) {\n    this.spinnerFlag = true;\n    console.log(tid);\n    // tslint:disable-next-line:max-line-length\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'download_payment_transcation/' + paymentid, { data : '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.documentsUrl + 'payment_transcations/' + tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async downloadInvoice(paymentid, tid) {\n    this.spinnerFlag = true;\n    console.log(tid);\n    // tslint:disable-next-line:max-line-length\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'generate_invoice/' + paymentid, { data : '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.documentsUrl + 'invoices/' + tid + '.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async checkPaymentStatus () {\n    await this.http.post<any>('http://localhost:82/statusapi/index.php/', {  }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        console.log(data) ;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  addupdateRequestAnalysis(reqNo){\n    // let encryptedText = this._AESEncryptDecryptService.encrypt(String(reqNo));\n    // console.log('Encript ' + encryptedText);\n    // let decryptedText = this._AESEncryptDecryptService.decrypt(encryptedText);\n    // console.log('Decript ' + decryptedText);\n/*\n    let encryptedText = this._AESEncryptDecryptService.encrypt(String(reqNo));    \n    let finalEncryptedText1 = String(encryptedText);\n    let finalEncryptedText = finalEncryptedText1.replaceAll('/', '*'); \n    \n    let string = \":insertx: :insertx: :inserty: :inserty: :insertz: :insertz:\";\n    let newstring = encryptedText.replace('/', '*');\n    console.log(newstring);\n    */\n    //var finalEncryptedText = '';\n    //console.log('Final ' + finalEncryptedText);\n    // let decryptedText = this._AESEncryptDecryptService.decrypt(encryptedText);\n    // console.log('Decript ' + decryptedText);\n    //this.router.navigateByUrl('requestanalysisaddupdate/'+finalEncryptedText);\n    this.router.navigateByUrl('requestanalysisaddupdate/'+reqNo);\n  }\n  async downloadAnalysisRequest(reqno){\n    this.spinnerFlag = true;\n    //alert(md5(reqno));\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'download_analysis_request/'+reqno, { data : '' }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        const res = data;\n        if (data.status === true) {\n          this.spinnerFlag = false;\n          window.open(environment.analysisRequestsUrl +data.filename+'.pdf');\n        }\n        this.spinnerFlag = false;\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n  async deleteAnalysisRequest(reqno){\n    let confirmFlag = confirm(\"Do you want Delte this Analysis Request \" + reqno + \" ?\");\n    \n    //alert(md5(reqno));\n    if(confirmFlag === true && reqno !=''){\n      this.spinnerFlag = true;\n      // tslint:disable-next-line:max-line-length\n      await this.http.post<any>(environment.apiUrl + 'delete_analysis_request/'+reqno, { data : '' }).subscribe({\n        next: data => {\n          // console.log('--------------------DATA START-----------------');\n          const res = data;\n          alert(data.message);\n          this.spinnerFlag = false;\n          if(data.status === true){\n            this.getData();\n          }\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n  }\n\n  getSampleData(SampleDescription: TemplateRef<any>, requsestNo,labId,reqType) {\n    let sampleRequest = {\n      RNo: requsestNo\n    };\n\n    let sampleType = {\n      labid: labId\n    };\n    \n    this.proformaService.getSampleTypeData(JSON.stringify(sampleType)).subscribe((res) => {\n      this.sampleTypeData = res;\n     \n    });\n    this.type=reqType;\n    console.log(this.type)\n    this.proformaService.getsamplerequest(JSON.stringify(sampleRequest)).subscribe((res) => {\n      this.sampleData = res;\n      this.UpdateSampleDesc = this.sampleData.map(value => {\n      \n        return {\n          sampleno: value.sampleno,\n          sampleid: value.sampleid,\n          description: value.description,\n          countcode: value.countcode,\n          remarks: value.remarks,\n          ply:value.ply,\n          blend:value.blend,\n        }\n      });\n      this.modalRef = this.modalService.show(SampleDescription,{class:'modal-xl modal-success'});\n    });\n  }\n\n  Updatesampledescription() {\n    console.log(this.UpdateSampleDesc)\n      let postvalue = {}\n    this.proformaService.updateSampleDesc(this.UpdateSampleDesc).subscribe((res) => {\n      let result = res;\n      if (result.status != null || result.status == true) {\n        Swal.fire(\"Success\", \"Sample description updated sucessfully\", \"success\");\n        this.modalRef.hide();\n        return;\n      }\n      Swal.fire(\"ERROR\", \"something went wrong\", \"error\");\n    })\n  }\n}\nexport interface TestRates {\n  labname: string;\n  testname: string;\n  alias: any;\n  standard: any;\n  samplesize: any;\n  memrate: any;\n  nonmemrate: any;\n}\nexport interface RequestAnalysis {\n  reqno: any;\n  request_date: any;\n  sample_type : string;\n  noofsamples : string;\n  inwardno: any;\n  inwarddate: any;\n  status_string: any;\n  status: any;\n  quotationno:any;\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgIf } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { environment } from './../../../environments/environment';\r\nimport { AESEncryptDecryptServiceService } from '../../aesencrypt-decrypt-service.service';\r\nimport { getDate } from 'ngx-bootstrap/chronos/utils/date-getters';\r\nimport { setTime } from 'ngx-bootstrap/chronos/utils/date-setters';\r\nimport { FreqentTestService } from '../../_services/freqent-test.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-requestanalysisaddupdate',\r\n  templateUrl: './requestanalysisaddupdate.component.html',\r\n  styleUrls: ['./requestanalysis.component.css']\r\n})\r\nexport class RequestanalysisaddupdateComponent implements OnInit {\r\n    public SessionCustomerId: number = 0;  \r\n    public SessionLimsCustomerId : number = 0;\r\n    public spinnerFlag: boolean = false;\r\n    public requestNumber: any = '';\r\n    public departmentList: InterfaceDepartmentList[];\r\n    public labList: InterfaceLabList[];\r\n    public testList: InterfaceTestList[] = [];\r\n    public testListTemp:any= [];\r\n\r\n    public sampleLists : SampleLists[] = [];\r\n    public sampleGridData : any={\r\n        data:[],\r\n    } ;\r\n    public sampleTypeLists : SampleTypeList[] = [];\r\n    public sampleTypeListForDisplay : any[] = [];\r\n    public selectAllTest:boolean = false;\r\n    public custtype:string =localStorage.getItem('customer_type');\r\n    public formData = {\r\n        reqno : ''\r\n        , deptid : '8'\r\n        , labid: '101'\r\n        , noofsamples : 0\r\n        , sample_return : ''\r\n        , mode_of_payment : ''\r\n        , despatch_date : ''\r\n        , mill_reference_no : ''\r\n        , comments : ''\r\n        , dd_cheque_reference : ''\r\n    }\r\n    public testDetails = {\r\n        testname : ''\r\n        , standard: ''\r\n        , nabl : ''\r\n        , samplesize : ''\r\n        , memrate : ''\r\n        , nonmemrate :''\r\n    }\r\n    isLinear = false;\r\n    public sampleEntryFormData = {\r\n        index : ''\r\n        , sampletype : ''\r\n        , count : ''\r\n        , desc1 : ''\r\n        , desc2 : ''\r\n        , ply : ''\r\n        , blend : ''\r\n        , remarks : ''\r\n    }\r\n    public disableInput = {\r\n        deptid : 0\r\n        , labid : 0\r\n    }\r\n    public testPopupLoader : boolean = false;\r\n    public txtTestSearch : any = '';\r\n    public samplesWithTestArray = {\r\n        sampleno : ''\r\n        , tests : []\r\n    };\r\n    public sampleAndTestArray : SampleArrayWithTest[] = [];\r\n    public samplesAndTestsArrayTesting : any[] = [];\r\n    public SamplePopupProperty = {\r\n        sampleno : ''\r\n        , nooftests : 0\r\n        , hascopytoall : ''\r\n        , rowIndex : 0\r\n    }\r\n    \r\n    public totalTestingCharge : number = 0.00;\r\n    public totalGstCharge : Number = 0.00;\r\n    public testingGrandTotal : Number = 0.00;\r\n    public dynamicIndexForTesting : Number = 0;\r\n    public randomUniqNo : any = '';\r\n    public validationErrors : ValidationErrors[] = [];\r\n    public pageValidationLoaderState = {\r\n        header : 0\r\n        , samplegrid : 0\r\n        , tests : 0\r\n        , overall : 0\r\n        , database : 0\r\n    }\r\n    public validationPopupHeaderMessage : any = 'Validation Processing...';\r\n    postData: { custid: any; search: any; };\r\n    constructor(\r\n    private http: HttpClient\r\n    , private activatedRoute: ActivatedRoute\r\n    , private router: Router\r\n    , private _AESEncryptDecryptService: AESEncryptDecryptServiceService\r\n    ,private FrequentTestService:FreqentTestService\r\n    ) {\r\n        this.SessionCustomerId = Number(localStorage.getItem('customerid'));\r\n        this.SessionLimsCustomerId = Number(localStorage.getItem('lims_custid'));\r\n        //alert(this.SessionLimsCustomerId);\r\n    }\r\n\r\n    ngOnInit(): void {  \r\n        const uuid = (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        let datetime = new Date();\r\n\r\n      \r\n        var dd:any = datetime.getDate();\r\n        var mm:any = datetime.getMonth() + 1; //January is 0!\r\n        var yyyy = datetime.getFullYear();\r\n        var date:String=dd;\r\n        var month:String=mm;\r\n\r\n        \r\n        if (dd < 10) {\r\n            \r\n           date = '0' + dd;\r\n        }\r\n        \r\n        if (mm < 10) {\r\n            month = '0' + mm;\r\n        } \r\n            \r\n        let today = yyyy + '-' + month + '-' + date;\r\n       \r\n        \r\n        this.randomUniqNo = uuid+datetime.getDate()+datetime.getMonth()+datetime.getFullYear()+datetime.getHours()+datetime.getMinutes()+datetime.getMilliseconds();\r\n        // const routeParams = this.activeRoute.snapshot.params;\r\n        if (this.SessionCustomerId <= 0) {\r\n            this.router.navigateByUrl('login');\r\n        }\r\n        this.activatedRoute.params.subscribe(routeParams => {\r\n            let tmpreqno = this.activatedRoute.snapshot.params.reqno; \r\n            console.log('Actual ' + tmpreqno);\r\n            let enCryptString =   tmpreqno.replaceAll('*','/');         \r\n            console.log('After replaced ' + enCryptString);\r\n            let decryptedText = this._AESEncryptDecryptService.decrypt(tmpreqno);\r\n            console.log('Decript ' + decryptedText);\r\n        });\r\n        this.loadDepartmentList();\r\n        this.loadSampleTypeForDisplay();\r\n        this.loadLabList();\r\n        // this.samplesWithTestArray.push({\r\n        //     sampleno : '12'\r\n        //     , test : []\r\n        // })\r\n        // console.log('+++++++++++++++++++++++++');\r\n        // console.log(this.samplesWithTestArray);\r\n    }\r\n    \r\n\r\n    async loadDepartmentList(){\r\n        await this.http.post<any>(environment.apiUrl + 'get_department_list/' + this.SessionCustomerId, { data : '' }).subscribe({\r\n            next: data => {\r\n                // console.log('--------------------DATA START-----------------');\r\n                this.departmentList = data;\r\n            },\r\n            error: error => {\r\n                console.log(error);\r\n            }\r\n        });\r\n    }\r\n    async loadLabList(){\r\n        if(Number(this.formData.deptid) > 0){\r\n            await this.http.post<any>(environment.apiUrl + 'get_lab_list/' + this.formData.deptid, { data : '' }).subscribe({\r\n                next: data => {\r\n                    // console.log('--------------------DATA START-----------------');\r\n                    this.labList = data;\r\n                    this.loadSampleType();\r\n                },\r\n                error: error => {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        }{\r\n            this.labList = [];\r\n        }\r\n    }\r\n    async loadTestList(sampleno:any){\r\n        \r\n        \r\n        if(this.formData.deptid !='' && this.formData.labid !=''){\r\n\r\n            this.postData = {\r\n                custid: this.SessionCustomerId,\r\n                search: this.txtTestSearch\r\n              }\r\n              this.FrequentTestService.getFrequentTests(JSON.stringify(this.postData)).subscribe(res => {\r\n                let result = res.data;\r\n                \r\n                \r\n             \r\n                this.testList = result;   \r\n                this.testList.forEach((e,i) => {\r\n                    this.testList[i]['selected']='false';\r\n                        if (this.sampleGridData.data[sampleno].test.length>0) {\r\n                            this.sampleGridData.data[sampleno].test.forEach((t,j) => {\r\n                                if (e.testid == t.testid) {\r\n                                    this.testList[i]['selected']='true';\r\n                                } \r\n                            });\r\n                            \r\n                        }\r\n                       \r\n                    \r\n                }); \r\n                \r\n               \r\n                   \r\n               \r\n              }, err => {\r\n                alert(\"something went wrong\");\r\n                console.log(err);\r\n              });\r\n\r\n            // let params = {\r\n            //     searchedText : this.txtTestSearch,\r\n            //     unique_id : this.randomUniqNo,\r\n            //     sampleno : this.SamplePopupProperty.sampleno\r\n            // }\r\n            // this.testPopupLoader = true;\r\n\r\n            // await this.http.post<any>(environment.apiUrl + 'get_testing_charges/' + this.formData.deptid +'/'+ this.formData.labid, { data : params }).subscribe({\r\n            //     next: data => {\r\n            //         // console.log('--------------------DATA START-----------------');\r\n            //         this.testList = data.data;                    \r\n            //         this.testPopupLoader = false;\r\n            //     },\r\n            //     error: error => {\r\n            //         console.log(error);\r\n            //     }\r\n            // });\r\n        }\r\n    }\r\n    async prePayloadTestSelectionPopup(paramSampleNo){\r\n        \r\n        this.SamplePopupProperty.sampleno = paramSampleNo + 1;\r\n        //alert(this.SamplePopupProperty.sampleno);\r\n        if (this.sampleGridData.data.length>0 && this.sampleGridData.data[paramSampleNo].test.length>0 ) {\r\n            this.SamplePopupProperty.nooftests = this.sampleGridData.data[paramSampleNo].test.length;            \r\n        }else{\r\n            this.SamplePopupProperty.nooftests = 0;\r\n\r\n        }\r\n            this.SamplePopupProperty.hascopytoall = '';\r\n            this.SamplePopupProperty.rowIndex = paramSampleNo;\r\n            this.loadTestList(paramSampleNo);\r\n            //console.log(this.testList);\r\n            \r\n\r\n    }\r\n    async getTestDetails(testid){\r\n        if(this.formData.deptid !='' && this.formData.labid !='' && testid !=''){\r\n            await this.http.post<any>(environment.apiUrl + 'get_testing_charges/' + this.formData.deptid +'/'+ this.formData.labid +'/'+testid, { data : '' }).subscribe({\r\n                next: data => {\r\n                    // console.log('--------------------DATA START-----------------');\r\n                    //console.log(data.data[0]);\r\n                    if(data.data[0]){\r\n                        alert('if')\r\n                        this.testDetails = data.data[0];\r\n                        console.log(this.testDetails);\r\n                    }else{\r\n                        alert('else')\r\n                    }\r\n                },\r\n                error: error => {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    async loadSampleType(){\r\n        if(this.formData.deptid !== '' && this.formData.labid !==''){\r\n            let params = {\r\n                labid : this.formData.labid\r\n            }\r\n            await this.http.post<any>(environment.apiUrl + 'get_sampletype_list/1', { data : params }).subscribe({\r\n                next: data => {\r\n                    // console.log('--------------------DATA START-----------------');\r\n                    this.sampleTypeLists = data;\r\n                },\r\n                error: error => {\r\n                    console.log(error);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    async loadSampleTypeForDisplay(){\r\n        await this.http.post<any>(environment.apiUrl + 'get_sampletype_list/', { data : '' }).subscribe({\r\n            next: data => {\r\n                // console.log('--------------------DATA START-----------------');\r\n                this.sampleTypeListForDisplay = data;\r\n            },\r\n            error: error => {\r\n                console.log(error);\r\n            }\r\n        });\r\n    }\r\n    \r\n    addUpdateSampleGrid(){\r\n       \r\n        // alert(JSON.stringify(this.samplesWithTestArray.tests))\r\n        let error = false;\r\n        if(this.sampleEntryFormData.sampletype === ''){\r\n            error = true;\r\n        }\r\n        if(this.sampleEntryFormData.desc1 === ''){\r\n            error = true;\r\n        }\r\n        if(!error){\r\n            console.log('--- No Error --')\r\n            if(this.sampleEntryFormData.index === ''){\r\n                console.log('--- No Existing Records --')\r\n                this.sampleGridData.data.push(\r\n                    {\r\n                        sampletype : this.sampleEntryFormData.sampletype\r\n                        , count : this.sampleEntryFormData.count\r\n                        , desc1 : this.sampleEntryFormData.desc1\r\n                        , desc2 : this.sampleEntryFormData.desc2\r\n                        , ply : this.sampleEntryFormData.ply\r\n                        , blend : this.sampleEntryFormData.blend\r\n                        , remarks : this.sampleEntryFormData.remarks\r\n                        ,test:[]\r\n                    }\r\n                )\r\n               \r\n                // if (this.selectAllTest) {\r\n                //     let temp =[];\r\n                //     this.testListTemp.forEach((e: any,i: string | number) => {\r\n                //        this.testListTemp[i]['sampleno']=this.sampleGridData.length;     \r\n                //    });\r\n                //    temp.push(...this.testListTemp)\r\n                //     let params = {\r\n                //         samples_with_tests : temp\r\n                //         , uniqno : this.randomUniqNo\r\n                //         , sampleno : this.sampleGridData.length\r\n                //     }    \r\n                //     if (this.updateSampleArrayTest(params)) {\r\n                //         // this.samplesWithTestArray.tests.push(...temp)\r\n                //        let d = this.samplesWithTestArray.tests.slice(0,temp.length)\r\n                //         d.forEach((b,i) => {\r\n                //             // d[i]['sampleno']=d[i]['sampleno']-1;\r\n                //         });\r\n                //         this.samplesWithTestArray.tests.push(...d)      \r\n                //     console.log(this.samplesWithTestArray.tests)\r\n                //     }                                                             \r\n                // }\r\n                \r\n            }else{\r\n                this.sampleGridData.data[this.sampleEntryFormData.index].sampletype = this.sampleEntryFormData.sampletype;\r\n                this.sampleGridData.data[this.sampleEntryFormData.index].count = this.sampleEntryFormData.count;\r\n                this.sampleGridData.data[this.sampleEntryFormData.index].desc1 = this.sampleEntryFormData.desc1;\r\n                this.sampleGridData.data[this.sampleEntryFormData.index].desc2 = this.sampleEntryFormData.desc2;\r\n                this.sampleGridData.data[this.sampleEntryFormData.index].ply = this.sampleEntryFormData.ply;\r\n                this.sampleGridData.data[this.sampleEntryFormData.index].blend = this.sampleEntryFormData.blend;\r\n                this.sampleGridData.data[this.sampleEntryFormData.index].remarks = this.sampleEntryFormData.remarks;\r\n            }\r\n            this.sampleEntryFormData.index = '';\r\n            this.sampleEntryFormData.sampletype = '';\r\n            this.sampleEntryFormData.count = '';\r\n            this.sampleEntryFormData.desc1 = '';\r\n            this.sampleEntryFormData.desc2 = '';\r\n            this.sampleEntryFormData.ply = '';\r\n            this.sampleEntryFormData.blend = '';\r\n\r\n            this.sampleEntryFormData.remarks = '';\r\n            \r\n            if(this.sampleGridData.data.length > 0){\r\n                this.disableInput.deptid = 1;\r\n                this.disableInput.labid = 1; \r\n            }\r\n        }else{\r\n            alert(\"Fill the Mandatory field(s)\");\r\n        }\r\n    }\r\n    async removeSampleGridDataRow(index) {\r\n        const confirmFlag = confirm('Do you want to remove this count ?');\r\n        if (confirmFlag === true) {          \r\n          if (index !== -1) {\r\n              this.sampleGridData.data.splice(index, 1);\r\n              this.samplesWithTestArray.tests = this.samplesWithTestArray.tests.filter(item => item.sampleno !== (index+1));        \r\n              if(this.sampleGridData.data.length === 0){\r\n                 this.disableInput.deptid = 0;\r\n                 this.disableInput.labid = 0; \r\n               }\r\n               // remove temp table data\r\n               let params = {\r\n                    uniqno : this.randomUniqNo\r\n                    , sampleno : index+1\r\n               }\r\n               await this.http.post<any>(environment.apiUrl + 'temptb_delete_samples_with_tests/', { data : params }).subscribe({\r\n                    next: data => {\r\n                        if(this.samplesWithTestArray.tests.length > 0){\r\n                            for(let j = 0; j <= this.samplesWithTestArray.tests.length; j++){\r\n                                this.totalTestingCharge = Number(this.totalTestingCharge) - Number(this.samplesWithTestArray.tests[j].rate);\r\n                            }\r\n                        }else{\r\n                            this.totalTestingCharge = 0;\r\n                        }\r\n                    },\r\n                    error: error => {\r\n                    }\r\n                });\r\n          }\r\n        }\r\n    }\r\n    editSampleGridDataRow(index, sampleData){\r\n        this.sampleEntryFormData.index = index;\r\n        this.sampleEntryFormData.sampletype = sampleData.sampletype;\r\n        this.sampleEntryFormData.count = sampleData.count;\r\n        this.sampleEntryFormData.desc1 = sampleData.desc1;\r\n        this.sampleEntryFormData.desc2 = sampleData.desc2;\r\n        this.sampleEntryFormData.ply = sampleData.ply;\r\n        this.sampleEntryFormData.blend = sampleData.blend;\r\n\r\n        this.sampleEntryFormData.remarks = sampleData.remarks;\r\n\r\n    }\r\n    setTestId(selectedTestId, event, testRate, sampleNo){\r\n      \r\n        if(event.target.checked === true){\r\n            var isPresent = this.samplesWithTestArray.tests.some(function(el){ \r\n                if(el.sampleno === sampleNo && el.testid === selectedTestId )\r\n                \r\n                    return true;\r\n                else   \r\n                    return false;\r\n            });\r\n            if(!isPresent){\r\n                this.samplesWithTestArray.tests.push(\r\n                    {sampleno : sampleNo, testid : selectedTestId, rate : testRate,selected:true}\r\n                );\r\n               \r\n                this.SamplePopupProperty.nooftests = Number(this.SamplePopupProperty.nooftests) + 1;\r\n                if (this.selectAllTest && this.sampleGridData.data.length>0) {\r\n                    this.sampleGridData.data.forEach((el,i) => {\r\n                        el.test.push(\r\n                            {sampleno : i+1, testid : selectedTestId, rate : testRate,selected:true\r\n                        })\r\n                    });\r\n                   \r\n                } else{\r\n                    this.sampleGridData.data[sampleNo-1].test.push(\r\n                        {sampleno : sampleNo, testid : selectedTestId, rate : testRate,selected:true}\r\n                        );\r\n                }\r\n                this.totalTestingCharge = Number(this.totalTestingCharge) + Number(testRate);\r\n            }\r\n        }else{    \r\n            this.samplesWithTestArray.tests = this.samplesWithTestArray.tests.filter(item => item.testid !== selectedTestId);                    \r\n            if (this.selectAllTest && this.sampleGridData.data.length>0) {\r\n               \r\n                this.sampleGridData.data.forEach((el,i) => {\r\n                    this.sampleGridData.data[i].test = this.sampleGridData.data[i].test.filter(item => item.testid !== selectedTestId);                    \r\n                });\r\n            } else{\r\n                this.sampleGridData.data[sampleNo-1].test = this.sampleGridData.data[sampleNo-1].test.filter(item => item.testid !== selectedTestId);                    \r\n            }\r\n           \r\n\r\n             this.SamplePopupProperty.nooftests = Number(this.SamplePopupProperty.nooftests) - 1;\r\n             \r\n\r\n             this.totalTestingCharge = Number(this.totalTestingCharge) - Number(testRate);\r\n        }\r\n        \r\n        \r\n        \r\n\r\n    }\r\n    selectAll(){\r\n        this.selectAllTest = !this.selectAllTest      \r\n    }\r\n    async updateSampleArray(d){\r\n        this.testPopupLoader = true;   \r\n        let params;\r\n        if (this.selectAllTest) {\r\n            this.sampleGridData.data.forEach((el,i) => {\r\n                params = {\r\n                    samples_with_tests : el.test\r\n                    , uniqno : this.randomUniqNo\r\n                    , sampleno : i+1\r\n                }\r\n                \r\n                 this.http.post<any>(environment.apiUrl + 'temptb_insert_samples_with_tests/', { data : params }).subscribe({\r\n                    next: data => {\r\n                        this.testPopupLoader = false;\r\n                   \r\n                        // document.getElementById('#btnPopupClose').click();\r\n                    },\r\n                    error: error => {\r\n                    }\r\n                });\r\n            });\r\n          \r\n            this.totalTestingCharge =  this.totalTestingCharge * this.sampleGridData.data.length\r\n            \r\n           \r\n           \r\n\r\n        }   else{\r\n            params = {\r\n                samples_with_tests : this.samplesWithTestArray\r\n                , uniqno : this.randomUniqNo\r\n                , sampleno : this.SamplePopupProperty.sampleno\r\n            }\r\n            await this.http.post<any>(environment.apiUrl + 'temptb_insert_samples_with_tests/', { data : params }).subscribe({\r\n                next: data => {\r\n                    this.testPopupLoader = false;\r\n               \r\n                    // document.getElementById('#btnPopupClose').click();\r\n                },\r\n                error: error => {\r\n                }\r\n            });\r\n        }\r\n         \r\n  \r\n        \r\n        \r\n    }\r\n\r\n    async updateSampleArrayTest(d){\r\n        let params ;\r\n       \r\n         params = {\r\n            samples_with_tests : this.samplesWithTestArray\r\n            , uniqno : this.randomUniqNo\r\n            , sampleno : this.SamplePopupProperty.sampleno\r\n        }\r\n        await this.http.post<any>(environment.apiUrl + 'temptb_insert_samples_with_tests/', { data : params }).subscribe({\r\n            next: data => {\r\n                return true;\r\n            },\r\n            error: error => {\r\n            }\r\n        });\r\n       \r\n       \r\n        //randomUniqNo\r\n        \r\n        \r\n    }\r\n    checkTestArray(indexId, sampleNo){\r\n        var sno = Number(this.dynamicIndexForTesting)+1;\r\n        let tempArray = {\r\n            sampleno : String(sno)\r\n            , tests : []\r\n        }\r\n        var a = tempArray;\r\n        this.sampleAndTestArray.push(a);\r\n        console.log(this.sampleAndTestArray);\r\n        this.dynamicIndexForTesting = sno;\r\n    }\r\n    saveUpdateRequestAnalysis(){\r\n        this.validationErrors = [];\r\n        this.pageValidationLoaderState.header = 1;\r\n        this.pageValidationLoaderState.samplegrid = 1;\r\n        this.pageValidationLoaderState.tests = 1;\r\n        this.pageValidationLoaderState.database = 1;\r\n        this.pageValidationLoaderState.overall = 0;\r\n        let errorFlag = 0;\r\n        let params;\r\n        if (this.selectAllTest) {\r\n            params = {\r\n                lims_custid : this.SessionLimsCustomerId\r\n                , cloud_customer_id : this.SessionCustomerId\r\n                , header_data : this.formData\r\n                , sample_grid_data : this.sampleGridData.data\r\n                , uniqno : this.randomUniqNo\r\n                , samples_with_tests : this.samplesWithTestArray\r\n                ,totalcharges:this.totalTestingCharge\r\n                ,selectAll:true\r\n            }\r\n        }else{\r\n            params = {\r\n                lims_custid : this.SessionLimsCustomerId\r\n                , cloud_customer_id : this.SessionCustomerId\r\n                , header_data : this.formData\r\n                , sample_grid_data : this.sampleGridData.data\r\n                , uniqno : this.randomUniqNo\r\n                , samples_with_tests : this.samplesWithTestArray\r\n            }\r\n        }\r\n        \r\n        // Validation start over here\r\n        if(this.formData.deptid === ''){\r\n            this.validationErrors.push(\r\n                {message : '*Department should not be Empty'}\r\n            )\r\n        }\r\n        \r\n        if(this.formData.labid === ''){\r\n            this.validationErrors.push(\r\n                {message : '*Lab should not be Empty'}\r\n            )\r\n        } \r\n                \r\n        if(this.formData.labid === ''){\r\n            this.validationErrors.push(\r\n                {message : '*Lab should not be Empty'}\r\n            )\r\n        }\r\n        if(this.formData.sample_return === ''){\r\n            this.validationErrors.push(\r\n                {message : '*Sample return should not be Empty'}\r\n            )\r\n        }\r\n        if(this.formData.mode_of_payment === ''){\r\n            this.validationErrors.push(\r\n                {message : '*Mode of Payment should not be Empty'}\r\n            )\r\n        }\r\n        if(this.formData.despatch_date === ''){\r\n            this.validationErrors.push(\r\n                {message : '*Dispacth date should not be Empty'}\r\n            )\r\n        }\r\n        if(this.formData.mill_reference_no === ''){\r\n            this.validationErrors.push(\r\n                {message : '*Mill Reference should not be Empty'}\r\n            )\r\n        }\r\n        setTimeout(()=>{\r\n            if(this.validationErrors.length === 0){\r\n                this.pageValidationLoaderState.header = 2;\r\n            }else{\r\n                this.pageValidationLoaderState.header = 3;\r\n            }\r\n        },1000);\r\n        setTimeout(()=>{\r\n            if(this.sampleGridData.data.length > 0){\r\n                this.pageValidationLoaderState.samplegrid = 2;\r\n                this.validationPopupHeaderMessage = 'Database Transaction Processing...';\r\n            }else{\r\n                this.pageValidationLoaderState.samplegrid = 3;\r\n            }\r\n        }, 1500);\r\n\r\n        setTimeout(async ()=>{\r\n            if(this.samplesWithTestArray.tests.length> 0){\r\n                this.pageValidationLoaderState.tests = 2;\r\n            }else{\r\n                this.pageValidationLoaderState.tests = 3;\r\n            }\r\n            if(this.pageValidationLoaderState.header === 2 && this.pageValidationLoaderState.samplegrid === 2 && this.pageValidationLoaderState.tests === 2){\r\n               this.pageValidationLoaderState.overall = 1;\r\n               // Start DB Transcation\r\n                await this.http.post<any>(environment.apiUrl + 'insert_update_request_analysis/', { data : params }).subscribe({\r\n                    next: data => {\r\n                        //alert(data.message);\r\n                        if(data.status === true){\r\n                            this.validationPopupHeaderMessage = 'Analysis Request saved Successfully';\r\n                            this.pageValidationLoaderState.database = 2;\r\n                            setTimeout(()=>{\r\n                                this.router.navigateByUrl('requestanalysis');\r\n                            },1000)\r\n                        }else{\r\n                            this.validationPopupHeaderMessage = 'Error while save analysis request..!';\r\n                        }\r\n                    },\r\n                    error: error => {\r\n                    }\r\n                });\r\n            }else{\r\n                this.pageValidationLoaderState.overall = 2;\r\n            }\r\n        }, 2000);\r\n        \r\n        console.log(this.validationErrors.length);\r\n\r\n         \r\n        // Validation end\r\n        console.log(this.validationErrors);\r\n        //console.log(params);\r\n    }\r\n}\r\nexport interface InterfaceDepartmentList{\r\n    deptid: Number;\r\n    deptname: String;\r\n}\r\nexport interface InterfaceLabList{\r\n    labid: Number;\r\n    labname: String;\r\n}\r\nexport interface InterfaceTestList{\r\n    testid: Number;\r\n    testname: String;\r\n    memrate : any;\r\n    nonmemrate : any;\r\n    selected : string;\r\n}\r\nexport interface SampleLists{    \r\n    sampletype : any;\r\n    count: any;\r\n    desc1 : any;\r\n    desc2 : any;\r\n    ply : any;\r\n    blend : any;\r\n    remarks : any;\r\n}\r\nexport interface SampleTypeList{\r\n    deptid: Number;\r\n    deptname: String;\r\n}\r\nexport interface TestArray{\r\n    testid : any;\r\n}\r\nexport interface SampleArrayWithTest{\r\n    sampleno : string;\r\n    tests : TestArray[];\r\n}\r\nexport interface ValidationErrors{\r\n    message : string;\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServerdataService } from './../../serverdata.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-phytestrate',\r\n  templateUrl: './phytestrate.component.html',\r\n  styleUrls: ['./testrate.component.css']\r\n})\r\nexport class PhytestrateComponent implements OnInit {\r\n    public testRates: TestRates[];\r\n  constructor(\r\n    private serverdata: ServerdataService\r\n    , private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getData();\r\n  }\r\n  async getData() {\r\n    // console.log(this.serverdata.getServerData('get_ukg_varieties', ''));\r\n    await this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_testing_charges/8', { data: '' }).subscribe({\r\n      next: data => {\r\n        console.log('--------------------DATA START-----------------');\r\n        console.log(data);\r\n        this.testRates = data;\r\n        console.log('--------------------DATA END-----------------');\r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n    console.log('--------------------SERVICE END-----------------');\r\n  }\r\n\r\n}\r\nexport interface TestRates {\r\n  labname: string;\r\n  testname: string;\r\n  alias: any;\r\n  standard: any;\r\n  samplesize: any;\r\n  memrate: any;\r\n  nonmemrate: any;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServerdataService } from './../../serverdata.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgIf } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { environment } from './../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-testingcharge',\r\n  templateUrl: './testingcharge.component.html',\r\n  styleUrls: ['./testrate.component.css']\r\n})\r\nexport class TestingchargeComponent implements OnInit {\r\n    SessionCustomerId: any = localStorage.getItem('customerid');\r\n    public testRates: TestRates[];\r\n    public loaderFlag: boolean = false;\r\n    public tableHeading = 'Tests Details';\r\n    public deptid: number = 0;\r\n    public deptidd: any;\r\n    public searchText: string = '';\r\n    public apiParams  = {\r\n        searchedText: ''\r\n        , tablerowstart: 0\r\n        , tablerowlimit: 10\r\n    };\r\n    public pageCount: number = 1;\r\n    public pagenationNoofPage: number = 1;\r\n    public pagenationConfiguration = {\r\n      pageNos: []\r\n      , currentPageNo: Number(1)\r\n    };\r\n    public startPageNo: number = 1;\r\n    public endPageNo: number = 5;\r\n  constructor(\r\n    private serverdata: ServerdataService\r\n    , private http: HttpClient\r\n    , private activatedRoute: ActivatedRoute\r\n    , private router: Router\r\n  ) {\r\n    /*\r\n    if (this.deptid === 8) {\r\n        this.tableHeading = 'Physics Tests Rates';\r\n    } else if (this.deptid === 9) {\r\n        this.tableHeading = 'Chemical Tests Rates';\r\n    }\r\n    */\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // const routeParams = this.activeRoute.snapshot.params;\r\n    if (this.SessionCustomerId === '') {\r\n       this.router.navigateByUrl('login');\r\n    }\r\n    this.activatedRoute.params.subscribe(routeParams => {\r\n        this.deptid = Number(this.activatedRoute.snapshot.params.deptid);\r\n        // this.changeDisplayCount();\r\n        this.resetDataValues();\r\n    });\r\n  }\r\n  async getData() {\r\n    // console.log(this.deptid);\r\n    this.apiParams.searchedText = this.searchText;\r\n    this.apiParams.tablerowstart = this.pagenationConfiguration.currentPageNo;\r\n    this.loaderFlag = true;\r\n    if (this.deptid === 7) {\r\n        this.tableHeading = 'Knitting / Weaving Testing Details';\r\n    } else if (this.deptid === 8) {\r\n        this.tableHeading = 'Physics Testing Details';\r\n    } else if (this.deptid === 9) {\r\n        this.tableHeading = 'Chemical Testing Details';\r\n    } else if (this.deptid === 10) {\r\n        this.tableHeading = 'Medical Textile Testing Details';\r\n    } else if (this.deptid === 11) {\r\n        this.tableHeading = 'Engineering Testing Details';\r\n    } else {\r\n        this.tableHeading = 'Testing Details';\r\n        // console.log('else');\r\n    }\r\n    // console.log(this.tableHeading);\r\n    // this.loaderFlag = true;\r\n    // tslint:disable-next-line:max-line-length\r\n    await this.http.post<any>(environment.apiUrl + 'get_testing_charges/' + this.deptid, { data : this.apiParams }).subscribe({\r\n      next: data => {\r\n        // console.log('--------------------DATA START-----------------');\r\n        this.testRates = data.data;\r\n        this.pageCount = Number(data.pagecount);\r\n        if (this.pageCount <= 5) {\r\n          // console.log('page no validatoin ' + this.pageCount);\r\n          this.endPageNo = this.pageCount;\r\n        } else {\r\n          // scenario - 1\r\n          // if the current page no in  between startpage and end page\r\n          // tslint:disable-next-line:max-line-length\r\n          if ( this.pagenationConfiguration.currentPageNo >= this.startPageNo && this.pagenationConfiguration.currentPageNo <= this.endPageNo) {\r\n            // do something\r\n          } else {\r\n            console.log('Current page no ' + this.pagenationConfiguration.currentPageNo);\r\n            console.log('Start page no ' + this.startPageNo);\r\n            console.log('End page no ' + this.endPageNo);\r\n            // this.endPageNo = Number(5);\r\n            // tslint:disable-next-line:max-line-length\r\n            if (this.pagenationConfiguration.currentPageNo !== Number(1) && this.pagenationConfiguration.currentPageNo >  this.startPageNo) {\r\n              this.startPageNo = this.startPageNo + Number(1);\r\n              this.endPageNo = this.endPageNo + Number(1);\r\n            } else if (this.pagenationConfiguration.currentPageNo <  this.startPageNo) {\r\n              this.startPageNo = this.startPageNo - Number(1);\r\n              this.endPageNo = this.endPageNo - Number(1);\r\n            }\r\n          }\r\n        }\r\n        // console.log('data count' + data.datacount);\r\n        // console.log('page count' + data.pagecount);\r\n        // console.log('Last Page No' + this.endPageNo);\r\n        // console.log('--------------------DATA END-----------------');\r\n        this.pageNos();\r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n    console.log('--------------------SERVICE END-----------------');\r\n    setTimeout(() => {\r\n        this.loaderFlag = false;\r\n    }, 500);\r\n  }\r\n  pageNos() {\r\n     console.log(' pageNos function : ' + this.endPageNo);\r\n     this.pagenationConfiguration.pageNos = [];\r\n     for ( let j = this.startPageNo; j <= this.endPageNo; j++) {\r\n      this.pagenationConfiguration.pageNos[j] = j;\r\n    }\r\n    // console.log(this.pagenationConfiguration);\r\n  }\r\n  pagenationEvent(type: number, pageno: number) {\r\n    // console.log('page no clicked');\r\n    // console.log(type);\r\n    if (type === 1) { // page no click event\r\n      if (pageno === this.pagenationConfiguration.currentPageNo) {\r\n          // do nothing\r\n      } else {\r\n        this.pagenationConfiguration.currentPageNo = pageno;\r\n        this.getData();\r\n      }\r\n    } else if (type === 2) { // do the Next butting event\r\n      // console.log('next page btn event; End page no ' + this.endPageNo);\r\n      // console.log(' current page no ' + this.pagenationConfiguration.currentPageNo);\r\n      if (this.pagenationConfiguration.currentPageNo < Number(this.pageCount) ) { // validate last page\r\n        // console.log('if');\r\n        // this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n        // this.getData();\r\n        if (this.pagenationConfiguration.currentPageNo > 5) {\r\n            this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n            this.startPageNo = this.startPageNo + 1;\r\n            this.endPageNo = this.pagenationConfiguration.currentPageNo;\r\n            this.getData();\r\n        } else {\r\n          this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\r\n          this.getData();\r\n        }\r\n      }\r\n    } else if (type === 3) { // do the Previous butting event\r\n      if (this.pagenationConfiguration.currentPageNo !== 1) { // for valiate first page no\r\n        this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) - Number(1);\r\n        this.getData();\r\n      }\r\n    }\r\n  }\r\n  changeDisplayCount() {\r\n    this.pagenationConfiguration.pageNos = [];\r\n    this.pagenationConfiguration.currentPageNo = 1;\r\n    this.startPageNo = 1;\r\n    this.endPageNo = 5;\r\n    this.getData();\r\n  }\r\n  resetDataValues() {\r\n    this.pagenationConfiguration.pageNos = [];\r\n    this.pagenationConfiguration.currentPageNo = 1;\r\n    this.startPageNo = 1;\r\n    this.endPageNo = 5;\r\n    this.apiParams.searchedText = '';\r\n    this.apiParams.tablerowlimit = 10;\r\n    this.apiParams.tablerowstart = 0;\r\n    this.getData();\r\n  }\r\n\r\n\r\n}\r\nexport interface TestRates {\r\n  labname: string;\r\n  testname: string;\r\n  alias: any;\r\n  standard: any;\r\n  samplesize: any;\r\n  memrate: any;\r\n  nonmemrate: any;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Rlc3RyYXRlL3Rlc3RyYXRlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-testrate',\n  templateUrl: './testrate.component.html',\n  styleUrls: ['./testrate.component.css']\n})\nexport class TestrateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3VrZy91a2cuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { empty } from 'rxjs';\nimport { isNull } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-ukg',\n  templateUrl: './ukg.component.html',\n  styleUrls: ['./ukg.component.css']\n})\nexport class UkgComponent implements OnInit {\n  public varietyNameList: VarietyLists[];\n  public transcationHistory: UkgTrasncations[];\n  public paidCountLists: any;\n  public varietyNames: any;\n  public errorFlag: boolean = false;\n  SessionCustomerId: number = 0;\n  encryptedCustomerId: any = '';\n  ukgFormData = {\n    count : '10'\n    , variety : 'K'\n  };\n  sitraUkgFactors = {\n    speed: ''\n    , tm: ''\n    , tpi: ''\n    , ukgfactor: ''\n  };\n  enteredCount: any;\n  selectedVariety: any = '';\n  spinnerSitraStd: boolean = false;\n  constructor(\n    private http: HttpClient\n    , private router: Router\n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n  }\n  ngOnInit(): void {\n    if (this.SessionCustomerId > 0) {\n      console.log('if');\n      // this.router.navigateByUrl('login');\n    } else {\n      this.router.navigateByUrl('login');\n      console.log('else');\n    }\n    // tslint:disable-next-line:max-line-length\n    this.encryptedCustomerId = encodeURIComponent(window.btoa(String('http://lab.sitraonline.org/index.php/customerid/' + this.SessionCustomerId + '/1/1.00')));\n    // console.log('Type : ' + typeof(this.SessionCustomerId));\n    this.loadVarietyDropdownValues();\n    this.getVarietyNameList();\n    this.loadPaidCountList();\n    this.getPreviousTranscationForDataTable();\n    // console.log(this.SessionCustomerId);\n  }\n  loadVarietyDropdownValues() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_ukg_varieties/' + this.SessionCustomerId + '/1', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNameList = data;\n          if (this.varietyNameList.length === 0) {\n            this.ukgFormData.variety = '';\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  getVarietyNameList() {\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_ukg_variety_list', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNames = data;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  loadPaidCountList() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_paid_count_lists/' + this.SessionCustomerId + '/1', { data: '' }).subscribe({\n        next: data => {\n          this.paidCountLists = data;\n          if (this.paidCountLists.length === 0) {\n            this.ukgFormData.count = '';\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  getPreviousTranscationForDataTable() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_previous_transcations/1/' + this.SessionCustomerId, { data: '' }).subscribe({\n        next: data => {\n          // this.varietyNameList = data;\n          this.transcationHistory = data;\n          console.log(this.transcationHistory);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  getSitraStandardUkgData() {\n    this.spinnerSitraStd = true;\n    let responseData: any;\n    // console.log(this.selectedVariety);\n    // console.log(this.enteredCount);\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_sitra_ukg_factors/' + this.SessionCustomerId, { data: this.ukgFormData }).subscribe({\n        next: data => {\n          responseData = data;\n          console.log('--------------------RESULT DATA------------------------');\n          this.sitraUkgFactors.speed = responseData.speed;\n          this.sitraUkgFactors.tm = responseData.tm;\n          this.sitraUkgFactors.tpi = responseData.tpi;\n          this.sitraUkgFactors.ukgfactor = responseData.ukgfactor;\n          this.getPreviousTranscationForDataTable();\n          this.spinnerSitraStd = false;\n          this.errorFlag = false;\n          if (this.sitraUkgFactors.speed === undefined) {\n            console.log('if');\n            this.errorFlag = true;\n          } else {\n            this.errorFlag = false;\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  payloadToPaymentGateway() {\n    this.http.post<any>('http://192.168.1.7:82/hdfcpg/index.php', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNameList = data;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  resetFormData() {\n    this.ukgFormData.count = '';\n    this.ukgFormData.variety = '';\n    this.sitraUkgFactors.speed = '';\n    this.sitraUkgFactors.tm = '';\n    this.sitraUkgFactors.tpi = '';\n    this.sitraUkgFactors.ukgfactor = '';\n    this.errorFlag = false;\n  }\n\n}\nexport interface VarietyLists {\n  id: string;\n  varietyname: string;\n}\nexport interface UkgTrasncations {\n  sno: number;\n  count: number;\n  variety: string;\n  speed: any;\n  tm: any;\n  tpi: any;\n  ukgfactor: any;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3VrZ21pbGwvdWtnbWlsbC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ukgmill',\n  templateUrl: './ukgmill.component.html',\n  styleUrls: ['./ukgmill.component.css']\n})\nexport class UkgmillComponent implements OnInit {\n  SessionCustomerId: any = localStorage.getItem('customerid');\n  spindleSpeedRange: any = 0;\n  public paidCountLists: any;\n  public paidSpeeds: any;\n  public paidTms: any;\n  public varietyNames: any;\n  public varietyNameList: VarietyLists[];\n  public transcationHistory: any = []; // UkgTrasncations[];\n  public errorFlag: boolean = false;\n  public ukgmillFormData = {\n    count : ''\n    , variety : ''\n    , speed : ''\n    , tm : ''\n  };\n  sitraUkgFactors = {\n    speed: ''\n    , tm: ''\n    , tpi: ''\n    , ukgfactor: ''\n  };\n  enteredCount: any;\n  selectedVariety: any = '';\n  spinnerSitraStd: boolean = false;\n  public errorMessage = '';\n  constructor(\n    private http: HttpClient\n    , private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (this.SessionCustomerId === '') {\n      this.router.navigateByUrl('login');\n    }\n    this.loadVarietyDropdownValues();\n    this.getVarietyNameList();\n    this.getPreviousTranscationForDataTable();\n    this.loadPaidCountList();\n  }\n  loadPaidCountList() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_paid_count_lists/' + this.SessionCustomerId + '/1', { data: '' }).subscribe({\n        next: data => {\n          this.paidCountLists = data;\n          if (this.paidCountLists.length === 0) {\n            this.ukgmillFormData.count = '';\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  loadVarietyDropdownValues() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_ukg_varieties/' + this.SessionCustomerId + '/2', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNameList = data;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  getVarietyNameList() {\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_ukg_variety_list', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNames = data;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  getPreviousTranscationForDataTable() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_previous_transcations/2/' + this.SessionCustomerId, { data: '' }).subscribe({\n        next: data => {\n          // this.varietyNameList = data;\n          // this.transcationHistory = data;\n          console.log(this.transcationHistory);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  getMillStandardUkgData() {\n    this.spinnerSitraStd = true;\n    let responseData: any;\n    // tslint:disable-next-line:max-line-length\n    if (this.ukgmillFormData.count !== '' && this.ukgmillFormData.variety !== '' && this.ukgmillFormData.speed !== '' && this.ukgmillFormData.tm !== '') {\n      this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_ukgmill_factors', { data: this.ukgmillFormData }).subscribe({\n          next: data => {\n            responseData = data;\n            if (this.transcationHistory.length > 0) {\n              let dataExisting = 0;\n              for (let j = 0; j < this.transcationHistory.length; j++) {\n                let isCountPresent = 0;\n                let isVarityPresent = 0;\n                let isSpeedPresent = 0;\n                let isTmPresent = 0;\n                console.log('Table count ' + this.transcationHistory[j].count);\n                console.log('Form Data count ' + this.ukgmillFormData.count);\n\n                console.log('Table variety ' + this.transcationHistory[j].variety);\n                console.log('Form Data variety ' + this.ukgmillFormData.variety);\n\n                console.log('Table speed ' + this.transcationHistory[j].speed);\n                console.log('Form Data speed ' + this.ukgmillFormData.speed);\n\n\n                if (Number(this.transcationHistory[j].count) === Number(this.ukgmillFormData.count)) {\n                  isCountPresent = 1;\n                }\n                if (String(this.transcationHistory[j].variety) === String(this.ukgmillFormData.variety)) {\n                  isVarityPresent = 1;\n                }\n                if (Number(this.transcationHistory[j].speed) === Number(this.ukgmillFormData.speed)) {\n                  isSpeedPresent = 1;\n                }\n                if (Number(this.transcationHistory[j].tm) === Number(this.ukgmillFormData.tm)) {\n                  isTmPresent = 1;\n                }\n                if ( isCountPresent === 1 && isVarityPresent === 1 &&  isSpeedPresent === 1 && isTmPresent === 1) {\n                  dataExisting = 1;\n                  break;\n                }\n              }\n              if (dataExisting !== 1) {\n                this.transcationHistory.push({\n                  count: Number(this.ukgmillFormData.count)\n                  , variety: String(this.ukgmillFormData.variety)\n                  , speed: this.ukgmillFormData.speed\n                  , tm: this.ukgmillFormData.tm\n                  , tpi: data.tpi\n                  , ukgfactor: data.ukgfactor\n                });\n              } else {\n                this.errorMessage = 'Alrady this count details added';\n              }\n            } else {\n              this.transcationHistory.push({\n                count: Number(this.ukgmillFormData.count)\n                , variety: String(this.ukgmillFormData.variety)\n                , speed: this.ukgmillFormData.speed\n                , tm: this.ukgmillFormData.tm\n                , tpi: data.tpi\n                , ukgfactor: data.ukgfactor\n              });\n            }\n            console.log('--------------------RESULT DATA------------------------');\n            this.sitraUkgFactors.tpi = responseData.tpi;\n            this.sitraUkgFactors.ukgfactor = responseData.ukgfactor;\n            this.spinnerSitraStd = false;\n            console.log(this.sitraUkgFactors.ukgfactor);\n            if (this.sitraUkgFactors.ukgfactor === '-') {\n              this.errorFlag = true;\n            } else {\n              this.errorFlag = false;\n            }\n          },\n          error: error => {\n            console.error('There was an error!', error);\n          }\n      });\n    } else {\n      this.errorFlag = true;\n      this.spinnerSitraStd = false;\n      this.errorMessage = 'Please select all mandatory fields';\n    }\n  }\n  resetFormData() {\n    this.ukgmillFormData.count = '';\n    this.ukgmillFormData.variety = '';\n    this.ukgmillFormData.speed = '';\n    this.ukgmillFormData.tm = '';\n\n    this.sitraUkgFactors.speed = '';\n    this.sitraUkgFactors.tm = '';\n    this.sitraUkgFactors.tpi = '';\n    this.sitraUkgFactors.ukgfactor = '';\n    this.errorFlag = false;\n  }\n  loadUkgmillSpeedsAndTms() {\n    console.log(this.ukgmillFormData);\n    if (this.ukgmillFormData.count !== '' || this.ukgmillFormData.variety !== '') {\n      // tslint:disable-next-line:max-line-length\n      this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/load_ukgmill_speeds_and_tms/' + this.SessionCustomerId, { data: this.ukgmillFormData }).subscribe({\n        next: data => {\n          if (data.speeds) {\n            this.paidSpeeds = data.speeds;\n            if (this.paidSpeeds.length > 0) {\n              this.ukgmillFormData.speed = this.paidSpeeds[0].speed;\n            } else {\n              this.ukgmillFormData.speed = '';\n            }\n          } else {\n            this.paidSpeeds = [];\n          }\n          if (data.tms) {\n            this.paidTms = data.tms;\n            if (this.paidTms.length > 0) {\n              this.ukgmillFormData.tm = this.paidTms[0].tm;\n            } else {\n              this.ukgmillFormData.tm = '';\n            }\n          } else {\n            this.paidTms = [];\n          }\n\n\n          console.log(this.paidSpeeds);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n\n    }\n  }\n}\nexport interface VarietyLists {\n  id: string;\n  varietyname: string;\n}\nexport interface UkgTrasncations {\n  sno: number;\n  count: number;\n  variety: string;\n  speed: any;\n  tm: any;\n  tpi: any;\n  ukgfactor: any;\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3VrZ3BheW1lbnQvdWtncGF5bWVudC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\nimport { ServerdataService } from '../../serverdata.service';\nimport { AESEncryptDecryptServiceService } from '../../aesencrypt-decrypt-service.service';\nimport { DecimalPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-ukgpayment',\n  templateUrl: './ukgpayment.component.html',\n  styleUrls: ['./ukgpayment.component.css']\n})\nexport class UkgpaymentComponent implements OnInit {\n  ukgFormData = {\n    count : ''\n    , variety : ''\n    , speed: '5000'\n    , tm: '2.85'\n    , paytype: '1'\n  };\n  public varietyNameList: VarietyLists[];\n  spinnerSitraStd: boolean = false;\n  public errorFlag: boolean = false;\n  public transcationHistory: UkgTrasncations[] = [];\n  public varietyNames: any;\n  public paymentType: number = 1;\n  public noofSelectedCount: number = 0;\n  public totalAmountToPay: number = 0.00;\n  public errorMessage: any = '';\n  public encryptedCustomerId: any = '';\n  public SessionCustomerId: number = 0;\n  public RazorpayOrderDetails : any = [];\n  public countPriceForPayment : Number = 0.00;\n  constructor(\n    private http: HttpClient\n    , private router: Router\n    , private service : ServerdataService\n    , private _AESEncryptDecryptService: AESEncryptDecryptServiceService\n    \n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n    console.log('------ UKG Payment Constructor-------------');\n\n    let encryptedText = this._AESEncryptDecryptService.encrypt(\"1\");\n    console.log('Encript ' + encryptedText);\n    let decryptedText = this._AESEncryptDecryptService.decrypt(encryptedText);\n    console.log('Decript ' + decryptedText);\n  }\n\n  ngOnInit(): void {\n    if (this.SessionCustomerId <= 0) {\n      this.router.navigateByUrl('login');\n    }\n    this.loadVarietyDropdownValues();\n    this.getVarietyNameList();\n    this.setCountPrice();\n  }\n  loadVarietyDropdownValues() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>(environment.apiUrl + 'get_ukg_varieties/', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNameList = data;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  resetFormData() {\n    this.ukgFormData.count = '';\n    this.ukgFormData.variety = '';\n  }\n  getVarietyNameList() {\n    this.http.post<any>(environment.apiUrl + 'get_ukg_variety_list', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNames = data;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  addNewRecord() {\n    /*\n    this.http.post<any>('http://192.168.1.7:82/cloudwallet/index.php/api/get_', { data: '' }).subscribe({\n        next: data => {\n          this.varietyNames = data;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n    */\n   // console.log(this.ukgFormData);\n   const selectedCount = this.ukgFormData.count;\n   const selectedVarity = this.ukgFormData.variety;\n   const selectedPaymentType = this.ukgFormData.paytype;\n   const selectedSpeed = this.ukgFormData.speed;\n   let isCountPresent ;\n   let isVarityPresent;\n   let isPaymentTypePresent;\n   let isSpeedPresent;\n   /*\n   const isCountPresent = this.transcationHistory.some(function(el) {\n      return el.count === String(selectedCount);\n    });\n    const isVarityPresent = this.transcationHistory.some(function(el) {\n      return el.variety === String(selectedVarity);\n    });\n    const isPaymentTypePresent = this.transcationHistory.some(function(el) {\n      return el.type === Number(selectedPaymentType);\n    });\n    */\n    if (selectedPaymentType === '1') {\n      this.ukgFormData.speed = '';\n      this.ukgFormData.tm = '';\n    }\n    const filtered = this.transcationHistory.filter(function(element) {\n      // Create an array using `.split()` method\n      // let cats = element.category.split(' ');\n      // if (element.count === this.ukgFormData.count) {\n      console.log(element);\n      const  counts = element.count.split(' ');\n      const varities = element.variety.split(' ');\n      const paytypes = element.paytype.split(' ');\n      const speeds = element.speed.split(' ');\n      console.log(speeds);\n      counts.filter(function(cat) {\n        // return filtersArray.indexOf(cat) > -1;\n        console.log('second filter ' + cat);\n        if (Number(cat) === Number(selectedCount)) {\n          isCountPresent = true;\n          console.log(' Count Already Exist ' + cat);\n        }\n      });\n      varities.filter(function(varity) {\n        // return filtersArray.indexOf(cat) > -1;\n        console.log('second filter varity ' + varity);\n        if (String(varity) === String(selectedVarity)) {\n          isVarityPresent = true;\n          console.log(' Varity Already Exist ' + varity);\n        }\n      });\n      paytypes.filter(function(paytype) {\n        // return filtersArray.indexOf(cat) > -1;\n        console.log('second filter Paytype ' + paytype);\n        if (String(paytype) === String(selectedPaymentType)) {\n          isPaymentTypePresent = true;\n          console.log(' Paytype Already Exist ' + paytype);\n        }\n      });\n      speeds.filter(function(spd) {\n        // return filtersArray.indexOf(cat) > -1;\n        console.log('second filter speed ' + spd);\n        if (String(spd) === String(selectedSpeed)) {\n          isSpeedPresent = true;\n          console.log(' Speed Already Exist ' + spd);\n        }\n      });\n      // }\n      // Filter the returned array based on specified filters\n      // If the length of the returned filtered array is equal to\n      // length of the filters array the element should be returned\n   });\n   // if (  (isCountPresent === false || isVarityPresent === false ) || isPaymentTypePresent === false) {\n     if (isCountPresent === true && isVarityPresent === true && isPaymentTypePresent === true && isSpeedPresent === true) {\n      // do something\n      this.errorMessage = 'Alredy this count and varity added.! Please select different count or varity';\n     } else {\n      console.log('Count present ' + isCountPresent);\n      console.log('Varity present ' + isVarityPresent);\n      this.transcationHistory.push(\n          { count: this.ukgFormData.count\n            , speed: this.ukgFormData.speed\n            , tm: this.ukgFormData.tm\n            , variety: this.ukgFormData.variety\n            , paytype: this.ukgFormData.paytype\n          }\n        );\n        this.noofSelectedCount += 1;\n        this.totalAmountToPay += Number(this.countPriceForPayment);\n        this.errorMessage = '';\n      }\n  // } else {\n      // this.errorMessage = 'Alredy this count and varity added.! Please select different count or varity';\n   // }\n  }\n  addNewRecord1() {\n    let mandatoryValidation = '';\n    let countValidation = false;\n    if (this.ukgFormData.paytype === '1') {\n      this.ukgFormData.speed = '';\n      this.ukgFormData.tm = '';\n      if (this.ukgFormData.count !== '' && this.ukgFormData.variety !== '') {\n        //\n      } else {\n        mandatoryValidation = '1';\n      }\n    } else if (this.ukgFormData.paytype === '2') {\n      if (this.ukgFormData.count !== '' && this.ukgFormData.variety !== '' && this.ukgFormData.speed !== '' && this.ukgFormData.tm !== '') {\n        //\n      } else {\n        mandatoryValidation = '1';\n      }\n    }\n    if (Number(this.ukgFormData.count) >= 10 && Number(this.ukgFormData.count) <= 120) {\n      countValidation = true;\n    }\n    if (mandatoryValidation === '' && countValidation === true) {\n      if (this.transcationHistory.length === 0) { // for first row\n        this.transcationHistory.push(\n          { count: this.ukgFormData.count\n            , speed: this.ukgFormData.speed\n            , tm: this.ukgFormData.tm\n            , variety: this.ukgFormData.variety\n            , paytype: this.ukgFormData.paytype\n          }\n        );\n        this.noofSelectedCount += 1;\n        // this.totalAmountToPay += 50.00;\n        this.totalAmountToPay += Number(this.countPriceForPayment);\n        this.errorMessage = '';\n        // tslint:disable-next-line:max-line-length\n        this.encryptedCustomerId = encodeURIComponent(window.btoa(String('http://lab.sitraonline.org/index.php/customerid/' + this.SessionCustomerId + '/1/' + this.totalAmountToPay)));\n      } else { // validate existing data\n        console.log(this.transcationHistory);\n        let dataExisting = 0;\n        for (let i = 0; i < this.transcationHistory.length; i++) {\n          let countExist = 0;\n          let varityExist = 0;\n          let paytype = 0;\n          let spd = 0;\n          let tm = 0;\n          if ( Number(this.transcationHistory[i].count) === Number(this.ukgFormData.count)) {\n            countExist = 1;\n          }\n          if ( String(this.transcationHistory[i].variety) === String(this.ukgFormData.variety)) {\n            varityExist = 1;\n          }\n          if ( String(this.transcationHistory[i].paytype) === String(this.ukgFormData.paytype)) {\n            paytype = 1;\n          }\n          if ( String(this.transcationHistory[i].speed) === String(this.ukgFormData.speed)) {\n            spd = 1;\n          }\n          if ( String(this.transcationHistory[i].tm) === String(this.ukgFormData.tm)) {\n            tm = 1;\n          }\n          if (this.ukgFormData.paytype === '1') {\n            if ( countExist === 1 && varityExist === 1 && paytype === 1) {\n              dataExisting = 1;\n              break;\n            }\n          } else if (this.ukgFormData.paytype === '2') {\n            if ( countExist === 1 && varityExist === 1 && paytype === 1 && spd === 1 && tm === 1) {\n              dataExisting = 1;\n              break;\n            }\n          }\n\n        }\n        if (dataExisting !== 1) {\n          this.transcationHistory.push(\n            { count: this.ukgFormData.count\n              , speed: this.ukgFormData.speed\n              , tm: this.ukgFormData.tm\n              , variety: this.ukgFormData.variety\n              , paytype: this.ukgFormData.paytype\n            }\n          );\n          this.noofSelectedCount += 1;\n          this.totalAmountToPay += Number(this.countPriceForPayment);\n          this.errorMessage = '';\n          // tslint:disable-next-line:max-line-length\n          this.encryptedCustomerId = encodeURIComponent(window.btoa(String('http://lab.sitraonline.org/index.php/customerid/' + this.SessionCustomerId + '/1/' + this.totalAmountToPay)));\n        } else {\n          this.errorMessage = 'Alredy this count details added.! Please select different count details';\n        }\n        console.log(dataExisting);\n      }\n    } else {\n      if (countValidation === false) {\n        this.errorMessage = 'Count should between 10 to 120';\n      } else if (mandatoryValidation !== '') {\n        this.errorMessage = 'Please fill the mandatory field(s)';\n      }\n    }\n  }\n  removeDataRow(index) {\n    const confirmFlag = confirm('Do you want to remove this count ?');\n    if (confirmFlag === true) {\n      // console.log(this.transcationHistory);\n     // const index: number = this.transcationHistory.indexOf(ukg);\n      if (index !== -1) {\n          this.transcationHistory.splice(index, 1);\n          this.noofSelectedCount -= 1;\n          this.totalAmountToPay -= Number(this.countPriceForPayment);\n          // tslint:disable-next-line:max-line-length\n          this.encryptedCustomerId = encodeURIComponent(window.btoa(String('http://lab.sitraonline.org/index.php/customerid/' + this.SessionCustomerId + '/1/' + this.totalAmountToPay)));\n      }\n    }\n  }\n  doPayNow() {\n    if (Number(this.noofSelectedCount) > 0 && Number(this.totalAmountToPay) > 0 ) {\n      this.errorMessage = 'Payment gateway connecting...Please wait a moment.,';\n      // console.log('Payment gateway connecting...');\n      // tslint:disable-next-line:max-line-length\n      let paymentType = 1; // for UKG Payment = 1;\n      let orderParams = {\n        amount:this.totalAmountToPay\n        , receipt: localStorage.getItem('customername')\n      }\n      let params = {\n          transcation : this.transcationHistory\n          , orderdetails : orderParams\n      }\n      this.http.post<any>(environment.apiUrl + 'insert_ukg_factors_transcations/' + this.SessionCustomerId +'/' +paymentType, { data: params }).subscribe({\n        next: data => {\n          console.log(data);\n          if(data.temp_payment_reference !=''){\n            setTimeout(() => {\n              //this.payWithRazor(data.payload);\n              // window.location.href = environment.razorpaymentUrl + data.payload.order_id.toString()\n              window.location.href = environment.razorpaymentUrl + 'pay.php?order_id=' + data.payload.order_id.toString();\n            }, 100);\n          }\n          //const paymentref = Number(data.temp_payment_reference);\n          //if (paymentref > 0) {\n            //this.payWithRazor(paymentref);\n            // tslint:disable-next-line:max-line-length\n            //this.encryptedCustomerId = encodeURIComponent(window.btoa(String('http://lab.sitraonline.org/index.php/customerid/' + this.SessionCustomerId + '/1/' + this.totalAmountToPay + '/' + paymentref)));\n            //window.location.href = environment.pgUrl + '?customerid=' + this.encryptedCustomerId;\n          //}\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n      // window.location.href = 'http://192.168.1.7:82/hdfcpg/?customerid=' + this.encryptedCustomerId;\n      // window.location.href = 'http://www.google.com';\n    } else {\n      this.errorMessage = 'Atlease add one count to process the payment';\n    }\n  }\n  // get nativeWindow():any{\n  //   return _window();\n  // }\n  async generateRazorpayNewOrderId(){\n    let params = {\n      'amount' : 100\n      , 'currency':'INR'\n      , 'receipt': 'testo'\n      , 'payment_capture' :  1\n    }\n    await this.http.post<any>('http://www.sitraonline.org.in/paymentgateway/index.php/api/get_razorpay_new_order_id', { data: params}).subscribe({\n        next: data => {\n          this.RazorpayOrderDetails = data;\n          console.log(this.RazorpayOrderDetails);\n          if(this.RazorpayOrderDetails.id){\n            this.doPayNow();\n          }else{\n            alert(\"Payment gateway Order Id not generated. Please Try again.\");\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n  generateRazorpayNewOrderId1(){\n    this.http.post<any>('http://192.168.1.19:8081/createorder?amount=5000&receipt=Mr.Parthasarathi', { data: ''}).subscribe({\n        next: data => {\n          alert(data);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n    });\n  }\n\n  public payWithRazor1(payload) {\n    alert(payload.order_id);\n  }\n  async payWithRazor(payload) {\n//    console.log(payload);\n    const options: any = {\n      key: 'rzp_test_Ge8t7vZfoHjNU5',\n      amount:  Number(payload.amount), // amount should be in paise format to display Rs 1255 without decimal point\n      currency: 'INR',\n      name: 'SITRA', // company name or product name\n      description: '',  // product description\n      image: './assets/img/brand/sitralogo.jpg', // company logo or product image\n      order_id: payload.order_id.toString(), // order_id created by you in backend\n      callback_url: environment.apiUrl+\"pg_response_page\",\n     // callback_url: \"http://localhost:4200/#/mypayments/0/\",\n      modal: {\n        // We should prevent closing of the form when esc key is pressed.\n        escape: false,\n      },\n      prefill:{\n\n      },\n      // prefill: {\n      //   name: 'azorpay',\n      //   email: 'itsupport@sitra.org.in',\n      //   contact: '++919965773730',\n      //   'card[number]': '4012001037141112',\n      //   'card[expiry]': '1222',\n      //   'card[cvv]': '123'\n      // },\n      theme: {\n          color: \"#127B6E\"\n      }\n    };\n    options.handler = ((response:any, error:any) => {\n      options.response = response;\n      console.log(response);\n    //  console.log(options);\n      // call your backend api to verify payment signature & capture transaction\n    });\n  \n    \n    // const rzp = new this.service.nativeWindow.Razorpay(options);\n    const rzp = await new this.service.nativeWindow.Razorpay(options);\n    //const rzp = new this.window.Razorpay(options);\n    \n    console.log('service window start here')\n    console.log(postMessage)\n    \n    rzp.open();\n    \n    \n    rzp.on('payment.failed', function (response:any){\n        alert(response.error.code);\n        alert(response.error.description);\n        alert(response.error.source);\n        alert(response.error.step);\n        alert(response.error.reason);\n        alert(response.error.metadata.order_id);\n        alert(response.error.metadata.payment_id);\n    });\n  }\n  validateCountRate() {\n    if (Number(this.ukgFormData.count) >= 10 && Number(this.ukgFormData.count) <= 120) {\n      // allow to next\n      this.errorMessage = '';\n    } else {\n      this.errorMessage = 'Count should Numeric value / It should between in 10 to 120';\n      this.ukgFormData.count = '';\n    }\n  }\n  validateSpindleSpeed() {\n    if (Number(this.ukgFormData.speed) >= 5000 && Number(this.ukgFormData.speed) <= 25000) {\n      // allow to next\n      this.errorMessage = '';\n    } else {\n       this.errorMessage = 'Spindle speed should Numeric value / It should between in 5000 to 25000';\n       this.ukgFormData.speed = '';\n    }\n  }\n  validateTm() {\n    if (Number(this.ukgFormData.tm) >= 2 && Number(this.ukgFormData.tm) <= 10) {\n      // allow to next\n      this.errorMessage = '';\n    } else {\n       this.errorMessage = 'TM should Numeric value / It should between in 2 to 10';\n       this.ukgFormData.tm = '';\n    }\n  }\n  async setCountPrice(){\n      await this.http.post<any>(environment.apiUrl + 'get_count_price_for_onlinepayment/' + this.SessionCustomerId , { data: '' }).subscribe({\n        next: data => {\n          this.countPriceForPayment = Number(data);\n          //console.log('count price ' + data);\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n      });\n    }\n}\nexport interface VarietyLists {\n  id: string;\n  varietyname: string;\n}\nexport interface UkgTrasncations {\n  count: any;\n  variety: string;\n  speed: any;\n  tm: any;\n  paytype: any;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\n\n@Component({\n  selector: 'app-inwarddetails',\n  templateUrl: './inwarddetails.component.html',\n  styleUrls: ['./viewinward.component.css']\n})\nexport class InwarddetailsComponent implements OnInit {  \n  public SessionInwardno : any = '';\n  public SessionAccessno : any = '';\n  public pieChartLabels: string[] = ['Pending', 'In-Progress', 'Completed'];\n  public pieChartData: number[] = [0, 0, 0];\n  colors =  [\n    {\n      backgroundColor: [\n        '#fc4e4e',\n        '#3ec5f2',\n        '#0EA563'\n      ]\n    }\n  ];\n  public pieChartType = 'pie';\n  public inwardDetails = {\n    inwardno : ''\n    , accesscode : ''\n  }\n  public inwardPageDetails = {\n      inwardno : ''\n      , inward_date : ''\n      , samplesreturn : ''\n      , nablcomment : ''\n      , name : ''\n      , address1 : ''\n      , address2 : ''\n      , city : ''\n      , state : ''\n      , pincode : ''\n      , phoneno : ''\n      , mobile : ''\n      , emailid : ''\n      , reqno : ''\n      , reqdate : ''\n      , receiptno : ''\n      , receiptdate : ''\n      , comments : ''\n      , noofsamples : ''\n      , invoiceno : ''\n      , testcharges : ''\n      , discount : ''\n      , subtotal_a : ''\n      , other_charge : ''\n      , additional_charge : ''\n      , taxable_charge : ''\n      , cgst : ''\n      , sgst : ''\n      , igst : ''\n      , subtotal_b : ''\n      , rounded_off : ''\n      , netamt : ''\n  }\n  constructor(\n    private http : HttpClient\n    , private router: Router\n  ) {\n    this.SessionInwardno = localStorage.getItem('session_inwardno');\n    this.SessionAccessno = localStorage.getItem('session_accessno');\n   }\n\n  ngOnInit(): void {\n     if(this.SessionInwardno !== '' && this.SessionAccessno !==''){\n       this.getInwardDetails();\n     }else{\n      this.router.navigateByUrl('login');\n     }\n  }\n  // Pie\n  \n  async getInwardDetails(){\n    let params = {\n      inwardno : this.SessionInwardno\n      , accesscode : this.SessionAccessno\n    }\n    await this.http.post<any>(environment.apiUrl + 'validate_inward_details/1', { data: params }).subscribe({\n      next: data => {\n        this.inwardPageDetails = data.data;\n        this.pieChartData = data.data.sample_statistics;\n        \n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Component({\n  selector: 'app-sampletests',\n  templateUrl: './sampletests.component.html',\n  styleUrls: ['./viewinward.component.css']\n})\n@Pipe({name: 'keys'})\nexport class SampletestsComponent implements OnInit {  \n  public SessionInwardno : any = '';\n  public SessionAccessno : any = '';\n  public inwardSampleLists : SampleList[] = [];\n  public inwardStandardNarration : any[] = [];\n  public inwardDetail = {\n    descritiveType : ''\n    , descriptiveResult : ''\n    , documentRoot : ''\n  }\n  public inwardSampleTests : any = [];\n  transform(value, args:string[]) : any {\n    let keys = [];\n    for (let key in value) {\n      keys.push({key: key, value: value[key]});\n    }\n    return keys;\n  }\n  public pdfUrl : any = '';\n  constructor(\n    private http : HttpClient\n    , private router: Router\n  ) { \n    this.SessionInwardno = localStorage.getItem('session_inwardno');\n    this.SessionAccessno = localStorage.getItem('session_accessno');\n  }\n\n  ngOnInit(): void {\n    \n    if(this.SessionInwardno !== '' && this.SessionAccessno !==''){\n      this.getSamplesTestsAndResults();\n    }else{\n      this.router.navigateByUrl('login');\n    }\n    this.pdfUrl = environment.baseUrl+'pdf/';\n     \n  }\n  // Pie\n  public pieChartLabels: string[] = ['Pending', 'In-Progress', 'Completed'];\n  public pieChartData: number[] = [7, 5, 3];\n  public pieChartType = 'pie';\n  \n  async getSamplesTestsAndResults(){\n    let params = {\n      inwardno : this.SessionInwardno\n    }\n    await this.http.post<any>(environment.apiUrl + 'get_samples_tests_and_results/', { data: params }).subscribe({\n      next: data => {\n       // data = data.json();\n        this.inwardSampleLists = data.samplelist;\n        this.inwardDetail.descritiveType =  data.descriptive;\n        this.inwardDetail.descriptiveResult =  data.descriptive_result;\n        this.inwardDetail.documentRoot = data.document_root\n        this.inwardStandardNarration = data.standard_narration;\n        console.log(data);\n       }\n    });\n  }\n  downloadPdfFile(){\n    alert(\"Open Download page\")\n    this.http.get<any>(environment.baseUrl +'pdfs/X123456.pdf', {responseType:\"json\"}).subscribe(response => this.downLoadFile(response, \"application/pdf\"));\n  }\n\n\n/**\n* Method is use to download file.\n* @param data - Array Buffer data\n* @param type - type of the document.\n*/\ndownLoadFile(data: any, type: string) {\n    let blob = new Blob([data], { type: type});\n    let url = window.URL.createObjectURL(blob);\n    let pwa = window.open(url);\n    if (!pwa || pwa.closed || typeof pwa.closed == 'undefined') {\n        alert( 'Please disable your Pop-up blocker and try again.');\n    }\n  }\n}\nexport interface SampleList{\n  sno : any;\n  sampleno : any;\n  count : any;\n  sampleid : any;\n  samplename : any;\n  nooftests : any;\n  description : any;\n  remark : any;\n  status: any;\n  color : any;\n}\nexport interface TestLists{\n  testname : any;\n}\n","export default \".fullwidth {\\r\\n  width: 100%;\\r\\n}\\r\\n.fontbold {\\r\\n  font-weight: bold;\\r\\n}\\r\\n.fontunderline {\\r\\n  text-decoration: underline;\\r\\n}\\r\\n.loader {\\r\\n  height: 5px;\\r\\n  width: 100%;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  background-color: #ddd;\\r\\n  margin-top: -6px;\\r\\n}\\r\\n.loader:before {\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  content: \\\"\\\";\\r\\n  left: -200px;\\r\\n  width: 200px;\\r\\n  height: 5px;\\r\\n  /* background-color: #1449A5; */\\r\\n  -webkit-animation: loading 2s linear infinite;\\r\\n          animation: loading 2s linear infinite;\\r\\n}\\r\\n@-webkit-keyframes loading {\\r\\n  from {\\r\\n    left: -200px;\\r\\n    width: 30%;\\r\\n    background-color: yellow;\\r\\n  }\\r\\n  50% {\\r\\n    width: 30%;\\r\\n    background-color: red;\\r\\n  }\\r\\n  70% {\\r\\n    width: 70%;\\r\\n  }\\r\\n  80% {\\r\\n    left: 50%;\\r\\n    background-color: rgb(255, 0, 221);\\r\\n  }\\r\\n  95% {\\r\\n    left: 120%;\\r\\n  }\\r\\n  to {\\r\\n    left: 100%;\\r\\n  }\\r\\n}\\r\\n@keyframes loading {\\r\\n  from {\\r\\n    left: -200px;\\r\\n    width: 30%;\\r\\n    background-color: yellow;\\r\\n  }\\r\\n  50% {\\r\\n    width: 30%;\\r\\n    background-color: red;\\r\\n  }\\r\\n  70% {\\r\\n    width: 70%;\\r\\n  }\\r\\n  80% {\\r\\n    left: 50%;\\r\\n    background-color: rgb(255, 0, 221);\\r\\n  }\\r\\n  95% {\\r\\n    left: 120%;\\r\\n  }\\r\\n  to {\\r\\n    left: 100%;\\r\\n  }\\r\\n}\\r\\nul {\\r\\n  list-style-type: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  overflow: hidden;\\r\\n  background-color: white;\\r\\n}\\r\\nli {\\r\\n  float: left;\\r\\n}\\r\\nli a {\\r\\n  display: block;\\r\\n  text-align: center;\\r\\n  padding: 14px 16px;\\r\\n  text-decoration: none;\\r\\n}\\r\\nli a:hover:not(.active) {\\r\\n  background-color: #04aa6d;\\r\\n  border-radius: 20px 20px 0px 0px;\\r\\n  color: white;\\r\\n}\\r\\n.active {\\r\\n  background-color: #04aa6d;\\r\\n  border-radius: 20px 20px 0px 0px;\\r\\n  color: white;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.border1 {\\r\\n  background-color: white;\\r\\n  margin-left: 30px;\\r\\n  border-radius: 0.75rem;\\r\\n}\\r\\n.border2 {\\r\\n  background-color: white;\\r\\n  border-radius: 0.75rem;\\r\\n}\\r\\n.border3 {\\r\\n  background-color: white;\\r\\n  border-radius: 0.75rem;\\r\\n}\\r\\n.row {\\r\\n  display: inline-flex;\\r\\n  gap: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3Mvdmlld2lud2FyZC92aWV3aW53YXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsMEJBQTBCO0FBQzVCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFlBQVk7RUFDWixXQUFXO0VBQ1gsK0JBQStCO0VBQy9CLDZDQUFxQztVQUFyQyxxQ0FBcUM7QUFDdkM7QUFFQTtFQUNFO0lBQ0UsWUFBWTtJQUNaLFVBQVU7SUFDVix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFVBQVU7SUFDVixxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsU0FBUztJQUNULGtDQUFrQztFQUNwQztFQUNBO0lBQ0UsVUFBVTtFQUNaO0VBQ0E7SUFDRSxVQUFVO0VBQ1o7QUFDRjtBQXZCQTtFQUNFO0lBQ0UsWUFBWTtJQUNaLFVBQVU7SUFDVix3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLFVBQVU7SUFDVixxQkFBcUI7RUFDdkI7RUFDQTtJQUNFLFVBQVU7RUFDWjtFQUNBO0lBQ0UsU0FBUztJQUNULGtDQUFrQztFQUNwQztFQUNBO0lBQ0UsVUFBVTtFQUNaO0VBQ0E7SUFDRSxVQUFVO0VBQ1o7QUFDRjtBQUNBO0VBQ0UscUJBQXFCO0VBQ3JCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLHVCQUF1QjtBQUN6QjtBQUVBO0VBQ0UsV0FBVztBQUNiO0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixxQkFBcUI7QUFDdkI7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixnQ0FBZ0M7RUFDaEMsWUFBWTtBQUNkO0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsZ0NBQWdDO0VBQ2hDLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLHVCQUF1QjtFQUN2QixpQkFBaUI7RUFDakIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxvQkFBb0I7RUFDcEIsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9hcHAvdmlld3Mvdmlld2lud2FyZC92aWV3aW53YXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbHdpZHRoIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uZm9udGJvbGQge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5mb250dW5kZXJsaW5lIHtcclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG4ubG9hZGVyIHtcclxuICBoZWlnaHQ6IDVweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xyXG4gIG1hcmdpbi10b3A6IC02cHg7XHJcbn1cclxuLmxvYWRlcjpiZWZvcmUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGxlZnQ6IC0yMDBweDtcclxuICB3aWR0aDogMjAwcHg7XHJcbiAgaGVpZ2h0OiA1cHg7XHJcbiAgLyogYmFja2dyb3VuZC1jb2xvcjogIzE0NDlBNTsgKi9cclxuICBhbmltYXRpb246IGxvYWRpbmcgMnMgbGluZWFyIGluZmluaXRlO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGxvYWRpbmcge1xyXG4gIGZyb20ge1xyXG4gICAgbGVmdDogLTIwMHB4O1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxuICB9XHJcbiAgNTAlIHtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgfVxyXG4gIDcwJSB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuICA4MCUge1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMCwgMjIxKTtcclxuICB9XHJcbiAgOTUlIHtcclxuICAgIGxlZnQ6IDEyMCU7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIGxlZnQ6IDEwMCU7XHJcbiAgfVxyXG59XHJcbnVsIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxubGkge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG5saSBhIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMTRweCAxNnB4O1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxubGkgYTpob3Zlcjpub3QoLmFjdGl2ZSkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwNGFhNmQ7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweCAyMHB4IDBweCAwcHg7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDRhYTZkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDIwcHggMjBweCAwcHggMHB4O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4uYm9yZGVyMSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMC43NXJlbTtcclxufVxyXG4uYm9yZGVyMiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogMC43NXJlbTtcclxufVxyXG4uYm9yZGVyMyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogMC43NXJlbTtcclxufVxyXG4ucm93IHtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICBnYXA6IDMwcHg7XHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-viewinward',\n  templateUrl: './viewinward.component.html',\n  styleUrls: ['./viewinward.component.css']\n})\nexport class ViewinwardComponent implements OnInit {\n  public tabIndex : Number = 0;\n  public loaderFlag : Boolean = false;\n  public SessionInwardno : any = '';\n  public SessionAccessno : any = '';\n \n  constructor(\n    private router: Router\n  ) { \n    this.SessionInwardno = localStorage.getItem('session_inwardno');\n    this.SessionAccessno = localStorage.getItem('session_accessno');\n  }\n\n  ngOnInit(): void {\n    this.tabIndex = 1;\n    if(this.SessionInwardno ==='' || this.SessionAccessno === ''){\n      this.router.navigateByUrl('login');\n    }\n  }\n  changeTabIndex(index){\n    this.loaderFlag = true;\n    this.tabIndex = index;\n    setTimeout(() => {\n      this.loaderFlag = false;  \n    }, 2000);\n  }\n  gotoLoginPage(){\n    this.router.navigateByUrl('login');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3dlYmluYXIvd2ViaW5hci5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../environments/environment';\nimport { ServerdataService } from '../../serverdata.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { fetchesWebinar, WebinarService } from '../../_services/webinar.service';\nimport Swal from 'sweetalert2';\nimport { GenralPaymentService } from '../../_services/genral-payment.service';\n\n@Component({\n  selector: 'app-webinar',\n  templateUrl: './webinar.component.html',\n  styleUrls: ['./webinar.component.css']\n})\nexport class WebinarComponent implements OnInit {\n  public SessionCustomerId: number = 0;\n  public webinarList: WebinarList[];\n  public webinars: Webinars[];\n  public loaderFlag: boolean = false;\n  public tableHeading = 'Tests Rates';\n  public searchText: string = '';\n  public apiParams = {\n    searchedText: ''\n    , tablerowstart: 0\n    , tablerowlimit: 10\n    // , paymenttype: 0\n  };\n  public pageCount: number = 1;\n  public pagenationNoofPage: number = 1;\n  public pagenationConfiguration = {\n    pageNos: []\n    , currentPageNo: Number(1)\n  };\n  public startPageNo: number = 1;\n  public endPageNo: number = 5;\n  public spinnerFlag: boolean = false;\n  public formData = {\n    id: ''\n    , title: ''\n    , description: ''\n    , amount: ''\n    , webinar_date: ''\n    , venue: ''\n    , registration_start: ''\n    , registration_end: ''\n    , document_url: ''\n  }\n  public fieldLoader: Boolean = false;\n  public paymentLoader: Boolean = false;\n  public errorMessage: any = '';\n  modalRef: BsModalRef;\n  ParticipantsList =[];\n  Amount: any;\n  paymentMode: number;\n  bankCharges: any;\n  constructor(\n    private http: HttpClient\n    , private router: Router\n    , private service: ServerdataService\n    , private modalServices: BsModalService\n    , private webinarServices: WebinarService\n    , private genralPaymentService: GenralPaymentService\n  ) {\n    this.SessionCustomerId = Number(localStorage.getItem('customerid'));\n    // this.ParticipantsList = [\n    //   {\n    //     cloud_webinar_id: \"1\",\n\n    //     custid: this.SessionCustomerId,\n\n    //     Participant_Name: \"\",\n\n    //     Participant_Desig: \"\",\n\n    //     Participant_Email: \"\",\n\n    //     Participant_Mobile: \"\"\n\n    //   }\n    // ];\n  }\n\n  ngOnInit(): void {\n    if (this.SessionCustomerId <= 0) {\n      this.router.navigateByUrl('login');\n    }\n    this.loadWebinarDropdownValues();\n    this.resetDataValues();\n    this.getbankcharges();\n  }\n  loadWebinarDropdownValues() {\n    // tslint:disable-next-line:max-line-length\n    this.http.post<any>(environment.apiUrl + 'get_webinar_list/', { data: '' }).subscribe({\n      next: data => {\n        this.webinarList = data;\n      },\n      error: error => {\n        console.error('There was an error!', error);\n      }\n    });\n  }\n  loadWebinarDetails() {\n    if (Number(this.formData.id) > 0) {\n      this.fieldLoader = true;\n      // tslint:disable-next-line:max-line-length\n      this.http.post<any>(environment.apiUrl + 'get_webinar_details/' + this.formData.id, { data: '' }).subscribe({\n        next: data => {\n          console.log(data);\n          this.formData = data;\n          this.fieldLoader = false;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n          this.fieldLoader = false;\n        }\n      });\n    } else {\n      alert('Select any one the Webinar !')\n      this.resetFormData();\n    }\n  }\n  resetFormData() {\n    this.formData.id = '';\n    this.formData.title = '';\n    this.formData.description = '';\n    this.formData.amount = '';\n    this.formData.webinar_date = '';\n    this.formData.venue = '';\n    this.formData.registration_start = '';\n    this.formData.registration_end = '';\n    this.formData.document_url = '';\n  }\n  // ------------------------ Start Grid data and Pagination ---------------------------\n  async getData() {\n    // console.log(this.deptid);\n    this.apiParams.searchedText = this.searchText;\n    this.apiParams.tablerowstart = this.pagenationConfiguration.currentPageNo;\n    this.loaderFlag = true;\n    // tslint:disable-next-line:max-line-length\n    await this.http.post<any>(environment.apiUrl + 'get_webinars/' + this.SessionCustomerId, { data: this.apiParams }).subscribe({\n      next: data => {\n        // console.log('--------------------DATA START-----------------');\n        this.webinars = data.data;\n        this.pageCount = Number(data.pagecount);\n        if (this.pageCount <= 5) {\n          // console.log('page no validatoin ' + this.pageCount);\n          this.endPageNo = this.pageCount;\n        } else {\n          // scenario - 1\n          // if the current page no in  between startpage and end page\n          // tslint:disable-next-line:max-line-length\n          if (this.pagenationConfiguration.currentPageNo >= this.startPageNo && this.pagenationConfiguration.currentPageNo <= this.endPageNo) {\n            // do something\n          } else {\n            console.log('Current page no ' + this.pagenationConfiguration.currentPageNo);\n            console.log('Start page no ' + this.startPageNo);\n            console.log('End page no ' + this.endPageNo);\n            // this.endPageNo = Number(5);\n            // tslint:disable-next-line:max-line-length\n            if (this.pagenationConfiguration.currentPageNo !== Number(1) && this.pagenationConfiguration.currentPageNo > this.startPageNo) {\n              this.startPageNo = this.startPageNo + Number(1);\n              this.endPageNo = this.endPageNo + Number(1);\n            } else if (this.pagenationConfiguration.currentPageNo < this.startPageNo) {\n              this.startPageNo = this.startPageNo - Number(1);\n              this.endPageNo = this.endPageNo - Number(1);\n            }\n          }\n        }\n        // console.log('data count' + data.datacount);\n        // console.log('page count' + data.pagecount);\n        // console.log('Last Page No' + this.endPageNo);\n        // console.log('--------------------DATA END-----------------');\n        this.pageNos();\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n    console.log('--------------------SERVICE END-----------------');\n    setTimeout(() => {\n      this.loaderFlag = false;\n    }, 500);\n  }\n  pageNos() {\n    console.log(' pageNos function : ' + this.endPageNo);\n    this.pagenationConfiguration.pageNos = [];\n    for (let j = this.startPageNo; j <= this.endPageNo; j++) {\n      this.pagenationConfiguration.pageNos[j] = j;\n    }\n    // console.log(this.pagenationConfiguration);\n  }\n  pagenationEvent(type: number, pageno: number) {\n    // console.log('page no clicked');\n    // console.log(type);\n    if (type === 1) { // page no click event\n      if (pageno === this.pagenationConfiguration.currentPageNo) {\n        // do nothing\n      } else {\n        this.pagenationConfiguration.currentPageNo = pageno;\n        this.getData();\n      }\n    } else if (type === 2) { // do the Next butting event\n      // console.log('next page btn event; End page no ' + this.endPageNo);\n      // console.log(' current page no ' + this.pagenationConfiguration.currentPageNo);\n      if (this.pagenationConfiguration.currentPageNo < Number(this.pageCount)) { // validate last page\n        // console.log('if');\n        // this.pagenationConfiguration.currentPageNo =  Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n        // this.getData();\n        if (this.pagenationConfiguration.currentPageNo > 5) {\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n          this.startPageNo = this.startPageNo + 1;\n          this.endPageNo = this.pagenationConfiguration.currentPageNo;\n          this.getData();\n        } else {\n          this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) + Number(1);\n          this.getData();\n        }\n      }\n    } else if (type === 3) { // do the Previous butting event\n      if (this.pagenationConfiguration.currentPageNo !== 1) { // for valiate first page no\n        this.pagenationConfiguration.currentPageNo = Number(this.pagenationConfiguration.currentPageNo) - Number(1);\n        this.getData();\n      }\n    }\n  }\n  changeDisplayCount() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.getData();\n  }\n  resetDataValues() {\n    this.pagenationConfiguration.pageNos = [];\n    this.pagenationConfiguration.currentPageNo = 1;\n    this.startPageNo = 1;\n    this.endPageNo = 5;\n    this.apiParams.searchedText = '';\n    this.apiParams.tablerowlimit = 10;\n    this.apiParams.tablerowstart = 0;\n    this.getData();\n  }\n  // -------------------------End grid Data and Pagination -----------------------------\n\n  doPayNow(amount) {\n    if (Number(this.formData.id) > 0) {\n      this.errorMessage = 'Payment gateway connecting...Please wait a moment.,';\n      this.paymentLoader = true;\n      // tslint:disable-next-line:max-line-length\n      let paymentType = 2; // for Webinar Payment\n      let orderParams = {\n        amount: amount\n        , receipt: localStorage.getItem('customername'),\n        orderType:'webinar'\n      }\n      let params = {\n        customerid: this.SessionCustomerId\n        , webinarid: this.formData.id\n        , orderdetails: orderParams\n        , ordertype: paymentType\n      }\n      this.http.post<any>(environment.apiUrl + 'insert_webinar_transcations/', { data: params }).subscribe({\n        next: data => {\n          //console.log(data);\n          if (data.temp_payment_reference != '') {\n            setTimeout(() => {\n              window.location.href = environment.razorpaymentUrl + 'webinarpay.php?order_id=' + data.payload.order_id.toString()+'&type=webinar';\n            }, 100);\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n      });\n      // window.location.href = 'http://192.168.1.7:82/hdfcpg/?customerid=' + this.encryptedCustomerId;\n      // window.location.href = 'http://www.google.com';\n    } else {\n      this.errorMessage = 'Atlease add one count to process the payment';\n    }\n  }\n\n  // OpenAddParticipants(addParticipants: TemplateRef<any>) {\n  //   this.getPaeticipants();\n  // }\n\n  addrow() {\n    this.ParticipantsList.push({\n      cloud_webinar_id: this.formData.id,\n      custid: this.SessionCustomerId,\n      Participant_Name: \"\",\n      Participant_Desig: \"\",\n      Participant_Email: \"\",\n      Participant_Mobile: \"\"\n    });\n  }\n  removeRow() {\n    this.ParticipantsList.pop();\n  }\n\n  AddParticipants() {\n    this.webinarServices.Insertparticpants(this.ParticipantsList).subscribe(res => {\n      let result = res;\n      console.log(res)\n      if (result.status == true) {\n        Swal.fire(\"Added\", \"Participants Added Sucessfully\", 'success')\n      } else (\n        Swal.fire('Error', 'Something went wrong', 'error')\n      )\n    })\n    console.log(this.ParticipantsList);\n  }\n\n  getPaeticipants(addParticipants: TemplateRef<any>) {\n\n    this.ParticipantsList = [\n      {\n        cloud_webinar_id: \"1\",\n        custid: this.SessionCustomerId,\n        Participant_Name: \"\",\n        Participant_Desig: \"\",\n        Participant_Email: \"\",\n        Participant_Mobile: \"\"\n      }\n    ];\n\n    let params = {\n      custid: String(this.SessionCustomerId),\n      cloud_webinar_id: this.formData.id,\n\n    }\n    this.webinarServices.getParticipants(params).subscribe(res => {\n      let result: any[] = res;\n      if (result.length > 0) {\n        this.ParticipantsList = result.map(ele => {\n          return {\n            cloud_webinar_id: ele.cloud_webinar_id,\n            custid: ele.cloud_customer_id,\n            Participant_Name: ele.Participant_Name,\n            Participant_Desig: ele.Participant_Desig,\n            Participant_Email: ele.Participant_Email,\n            Participant_Mobile: ele.Participant_Mobile\n          }\n        });\n      }\n      this.modalRef = this.modalServices.show(addParticipants, { class: 'modal-xl modal-success' })\n      console.log(result);\n    })\n  }\n\n  paymentOptionOpen(template: TemplateRef<any>, netamount) {\n    if (Number(this.formData.id) > 0) {\n      if(this.ParticipantsList.length > 0){\n      this.Amount = Number(netamount)*this.ParticipantsList.length ;\n      // this.quatatioNO = quotation;\n      this.modalRef = this.modalServices.show(template, { class: 'modal-success' });\n      }\n      else{\n        Swal.fire(\"Add Participants\",\"please enter participants details\",\"warning\");\n      }\n    } else {\n      this.errorMessage = 'Atlease add one count to process the payment';\n    }\n  }\n\n  paymentTypeSelection(amountToPay) {\n    // console.log(this.paymentMode);\n    if (this.paymentMode == 1) {\n      amountToPay = Number(amountToPay) + Number(amountToPay) * Number(this.bankCharges.credit_card) / 100;\n    } else if (this.paymentMode == 2) {\n      amountToPay = Number(amountToPay) + Number(amountToPay) * Number(this.bankCharges.debit_rupay) / 100;\n    } else if (this.paymentMode == 3) {\n      amountToPay = Number(amountToPay) + Number(amountToPay) * Number(this.bankCharges.debit_lt_2000) / 100;\n    } else if (this.paymentMode == 4) {\n      amountToPay = Number(amountToPay) + Number(amountToPay) * Number(this.bankCharges.debit_gt_2000) / 100;\n    } else if (this.paymentMode == 5) {\n      amountToPay = Number(amountToPay) + Number(amountToPay) * Number(this.bankCharges.upi) / 100;\n    } else if (this.paymentMode == 6) {\n      amountToPay = Number(amountToPay) + Number(amountToPay) * Number(this.bankCharges.nb) / 100;\n    }\n    this.doPayNow(String(amountToPay));\n  }\n\n  getbankcharges() {\n    this.genralPaymentService.getBankCharges().subscribe((res) => {\n      this.bankCharges = res[0];\n    })\n  }\n}\n\nexport interface WebinarList {\n  id: string;\n  title: string;\n}\nexport interface Webinars {\n  cloud_webinar_registration_id: any;\n  cloud_webinar_id: any;\n  title: any;\n  description: any;\n  amount: any;\n  webinar_date: any;\n  venue: any;\n  registration_start: any;\n  registration_end: any;\n  document_url: any;\n  reg_status: any;\n  payment_status: any;\n\n}\n\nexport interface participants {\n\n  cloud_webinar_id: string,\n\n  custid: string,\n\n  Participant_Name: string,\n\n  Participant_Desig: string,\n\n  Participant_Email: string,\n\n  Participant_Mobile: string\n\n}","export const environment = {\n  production: true\n  , globalLoader: false\n  /*\n  , apiUrl: 'http://sitraonline.org/onlineserviceapi/index.php/api/'\n  , pgUrl: 'http://sitraonline.org/hdfcpg/'\n  , documentsUrl: 'http://sitraonline.org/ukgdownloads/'\n  */\n  , apiUrl: 'http:///sitraonline.org.in/onlineserviceapi/index.php/api/'\n  , pgUrl: 'http://sitraonline.org.in/hdfcpg/'\n  , documentsUrl: 'http://sitraonline.org.in/ukgdownloads/'\n  , analysisRequestsUrl: 'http://sitraonline.org.in/analysis_requests/'\n  , razorpaymentUrl : 'http://sitraonline.org.in/sitrapayments/'\n  , baseUrl : 'http://sitraonline.org.in/'\n};\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: true\n  , globalLoader: false\n  /*, apiUrl: 'http://sitraonline.org/onlineserviceapi/index.php/api/'\n  , pgUrl: 'http://sitraonline.org/hdfcpg/'\n  , documentsUrl: 'http://sitraonline.org/ukgdownloads/'\n  */\n\n  , apiUrl: 'http:///sitraonline.org.in/onlineserviceapi/index.php/api/'\n  , pgUrl: 'http://sitraonline.org.in/hdfcpg/'\n  , documentsUrl: 'http://sitraonline.org.in/ukgdownloads/'\n  , analysisRequestsUrl: 'http://sitraonline.org.in/analysis_requests/'\n  , razorpaymentUrl : 'http://sitraonline.org.in/sitrapayments/'\n  , baseUrl : 'http://sitraonline.org.in/'\n\n//  , apiUrl: 'http://localhost:82/cloudportalapi/index.php/api/'\n//   , pgUrl: 'http://localhost:82/hdfcpg/'\n//   , documentsUrl: 'http://localhost:82/ukgdownloads/'\n//   , analysisRequestsUrl: 'http://localhost:82/analysis_requests/'\n//   , razorpaymentUrl : 'http://localhost:82/sitrapayments/'\n//   , baseUrl : 'http://localhost:82/cloudportalapi/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {\n  useJit: true,\n  preserveWhitespaces: true\n})\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}